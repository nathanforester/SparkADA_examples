(* Module for axiomatizing type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_short_integer 
 
 function first 
   :int =
  ( -128 )
 
 function last 
   :int =
  127
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_integer 
 
 function first 
   :int =
  ( -32768 )
 
 function last 
   :int =
  32767
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_integer 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_long_integer 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
 use import "_gnatprove_standard".Main
 use import "int".Int

 type natural 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = natural, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
 use import "_gnatprove_standard".Main
 use import "int".Int

 type positive 
 
 function first 
   :int =
  1
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type short_float 
 
 function first 
   :real =
  (-.340282346638528859811704183484516925440.0)
 
 function last 
   :real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = short_float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type float 
 
 function first 
   :real =
  (-.340282346638528859811704183484516925440.0)
 
 function last 
   :real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type long_float 
 
 function first 
   :real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last 
   :real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_float, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "long_long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type long_long_float 
 
 function first 
   :real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last 
   :real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_long_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type character 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  255
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_character 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  65535
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_wide_character 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing The array theory associated to type "string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int
 use import "_gnatprove_standard".Main
 use import "int".Int

 function index_I1_one 
   :int =
  1
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Standard__integer
 use        Standard__positive
 use        Standard__character
 use        Array__Int

 type component_type  = 
  Standard__character.character
 
 function index_1_id 
   (x : int)  :int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type string  = 
  __t
 
 function to_string 
   (x : Main.__image)  :string
 
 function from_string 
   (x : string)  :Main.__image
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__character.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_character
 use        Array__Int

 type component_type  = 
  Standard__wide_character.wide_character
 
 function index_1_id 
   (x : int)  :int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_string  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_character.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "wide_wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_wide_character
 use        Array__Int

 type component_type  = 
  Standard__wide_wide_character.wide_wide_character
 
 function index_1_id 
   (x : int)  :int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_wide_string  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_wide_character.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "duration", created in Gnat2Why.Types.Translate_Type *)
module Standard__duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type duration 
 
 function first 
   :Main.__fixed =
  ( -9223372036854775808 )
 
 function last 
   :Main.__fixed =
  9223372036854775807
 
 function inv_small 
   :Main.__fixed =
  1000000000
 
 predicate in_range
   (x : Main.__fixed)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small

end

(* Module for axiomatizing type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_8 
 
 function first 
   :int =
  ( -128 )
 
 function last 
   :int =
  127
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_16 
 
 function first 
   :int =
  ( -32768 )
 
 function last 
   :int =
  32767
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_32 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_64 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type universal_integer 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = universal_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "universal_real", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_real
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type universal_real 
 
 function first 
   :real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last 
   :real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = universal_real, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "root_stream_type" defined at a-stream.ads:70, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__root_stream_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields  = 
  { rec__ext__ : Main.__private }
 
 type root_stream_type  = 
  { __split_fields : __split_fields; attr__tag : int }
 
 function bool_eq 
   (a : root_stream_type) (b : root_stream_type)  :bool =
  (if (true) then (
   True) else (
   False))
 
 function user_eq 
   (a : root_stream_type) (b : root_stream_type)  :bool
 
 function __dispatch_eq 
   (a : root_stream_type) (b : root_stream_type)  :bool
 
 function __tag 
   :int
 
 function value__size 
   :int
 
 function object__size 
   (a : root_stream_type)  :int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a  : root_stream_type.
   ((object__size a) >= 0))
 
 function dummy 
   :root_stream_type

end

(* Module for axiomatizing type "stream_element" defined at a-stream.ads:42, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type stream_element 
 
 function first 
   :BV8.t =
  ( BV8.of_int 0 )
 
 function last 
   :BV8.t =
  ( BV8.of_int 255 )
 
 function first_int 
   :int =
  0
 
 function last_int 
   :int =
  255
 
 predicate in_range
   (x : BV8.t)  =
  ( (BV8.ule first x) /\ (BV8.ule x last) )
 
 predicate in_range_int
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_8 with
 type t = stream_element, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int

end

(* Module for axiomatizing type "Tstream_element_offsetB" defined at a-stream.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__Tstream_element_offsetB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tstream_element_offsetB 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tstream_element_offsetB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "stream_element_offset" defined at a-stream.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element_offset
 use import "_gnatprove_standard".Main
 use import "int".Int

 type stream_element_offset 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = stream_element_offset, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "stream_element_count" defined at a-stream.ads:51, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element_count
 use import "_gnatprove_standard".Main
 use import "int".Int

 type stream_element_count 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = stream_element_count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "stream_element_array" defined at a-stream.ads:54, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Ada__streams__stream_element
 use        Ada__streams__Tstream_element_offsetB
 use        Ada__streams__stream_element_offset

 type component_type  = 
  Ada__streams__stream_element.stream_element
 
 function index_1_id 
   (x : int)  :int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 type index_base_type = Ada__streams__Tstream_element_offsetB.tstream_element_offsetB, 
 type index_rep_type = int, 
 function to_rep = Ada__streams__Tstream_element_offsetB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Ada__streams__Tstream_element_offsetB.in_range, 
 predicate index_dynamic_property = Ada__streams__stream_element_offset.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type stream_element_array  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_BV8_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Ada__streams__stream_element.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for defining the constant "item" defined at a-stream.ads:65, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__streams__write__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array

 function item 
   :Ada__streams__stream_element_array.stream_element_array

end

(* Module giving an empty axiom for the entity "item" defined at a-stream.ads:65, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__write__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Troot_stream_typeC" defined at a-stream.ads:39, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__Troot_stream_typeC
 use export Ada__streams__root_stream_type
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "v" defined at a-stream.ads:82, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__streams__write_sea__v
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array

 function v 
   :Ada__streams__stream_element_array.stream_element_array

end

(* Module giving an empty axiom for the entity "v" defined at a-stream.ads:82, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__write_sea__v__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "v" defined at a-stream.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__streams__stream_element_arraySW__v
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array

 function v 
   :Ada__streams__stream_element_array.stream_element_array

end

(* Module giving an empty axiom for the entity "v" defined at a-stream.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__stream_element_arraySW__v__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "name" defined at system.ads:46, created in Gnat2Why.Types.Translate_Type *)
module System__name
 use import "_gnatprove_standard".Main
 use import "int".Int

 type name 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  0
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = name, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "system_name" defined at system.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module System__system_name
 use import "_gnatprove_standard".Main
 use        System__name

 function system_name "GP_CE_Relevant" 
   :System__name.__split

end

(* Module for axiomatizing type "address" defined at system.ads:116, created in Gnat2Why.Types.Translate_Type *)
module System__address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type address 
 
 function first 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function last 
   :BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int 
   :int =
  0
 
 function last_int 
   :int =
  18446744073709551615
 
 predicate in_range
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_64 with
 type t = address, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int

end

(* Module for defining the constant "null_address" defined at system.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module System__null_address
 use import "_gnatprove_standard".Main
 use        System__address

 function null_address 
   :System__address.__split

end

(* Module for defining the constant "left" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__left
 use import "_gnatprove_standard".Main
 use        System__address

 function left 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__right
 use import "_gnatprove_standard".Main
 use        System__address

 function right 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Olt" defined at system.ads:77, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Olt
 use import "_gnatprove_standard".Main
 use        System__address

 function olt 
   (left : System__address.__split) (right : System__address.__split)  :bool

end

(* Module for defining the constant "left" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__left
 use import "_gnatprove_standard".Main
 use        System__address

 function left 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__right
 use import "_gnatprove_standard".Main
 use        System__address

 function right 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ole" defined at system.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ole
 use import "_gnatprove_standard".Main
 use        System__address

 function ole 
   (left : System__address.__split) (right : System__address.__split)  :bool

end

(* Module for defining the constant "left" defined at system.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__left
 use import "_gnatprove_standard".Main
 use        System__address

 function left 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__right
 use import "_gnatprove_standard".Main
 use        System__address

 function right 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ogt" defined at system.ads:79, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ogt
 use import "_gnatprove_standard".Main
 use        System__address

 function ogt 
   (left : System__address.__split) (right : System__address.__split)  :bool

end

(* Module for defining the constant "left" defined at system.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__left
 use import "_gnatprove_standard".Main
 use        System__address

 function left 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__right
 use import "_gnatprove_standard".Main
 use        System__address

 function right 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oge" defined at system.ads:80, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oge
 use import "_gnatprove_standard".Main
 use        System__address

 function oge 
   (left : System__address.__split) (right : System__address.__split)  :bool

end

(* Module for defining the constant "left" defined at system.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__left
 use import "_gnatprove_standard".Main
 use        System__address

 function left 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__right
 use import "_gnatprove_standard".Main
 use        System__address

 function right 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oeq" defined at system.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oeq
 use import "_gnatprove_standard".Main
 use        System__address

 function oeq 
   (left : System__address.__split) (right : System__address.__split)  :bool

end

(* Module for axiomatizing type "bit_order" defined at system.ads:91, created in Gnat2Why.Types.Translate_Type *)
module System__bit_order
 use import "_gnatprove_standard".Main
 use import "int".Int

 type bit_order 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  1
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = bit_order, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "default_bit_order" defined at system.ads:92, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_bit_order
 use import "_gnatprove_standard".Main
 use        System__bit_order

 function default_bit_order "GP_CE_Relevant" 
   :System__bit_order.__split

end

(* Module for defining the constant "max_priority" defined at system.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_priority
 use import "_gnatprove_standard".Main
 use        Standard__positive

 function max_priority "GP_CE_Relevant" 
   :Standard__positive.__split

end

(* Module for defining the constant "max_interrupt_priority" defined at system.ads:106, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_interrupt_priority
 use import "_gnatprove_standard".Main
 use        Standard__positive

 function max_interrupt_priority "GP_CE_Relevant" 
   :Standard__positive.__split

end

(* Module for axiomatizing type "any_priority" defined at system.ads:108, created in Gnat2Why.Types.Translate_Type *)
module System__any_priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type any_priority 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  98
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = any_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "priority" defined at system.ads:109, created in Gnat2Why.Types.Translate_Type *)
module System__priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type priority 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  97
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "interrupt_priority" defined at system.ads:110, created in Gnat2Why.Types.Translate_Type *)
module System__interrupt_priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type interrupt_priority 
 
 function first 
   :int =
  98
 
 function last 
   :int =
  98
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = interrupt_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "default_priority" defined at system.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_priority
 use import "_gnatprove_standard".Main
 use        System__priority

 function default_priority "GP_CE_Relevant" 
   :System__priority.__split

end

(* Module for defining the constant "backend_divide_checks" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_divide_checks
 use import "_gnatprove_standard".Main

 function backend_divide_checks "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "backend_overflow_checks" defined at system.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_overflow_checks
 use import "_gnatprove_standard".Main

 function backend_overflow_checks "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "command_line_args" defined at system.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module System__command_line_args
 use import "_gnatprove_standard".Main

 function command_line_args "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "configurable_run_time" defined at system.ads:132, created in Gnat2Why.Decls.Translate_Constant *)
module System__configurable_run_time
 use import "_gnatprove_standard".Main

 function configurable_run_time "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "denorm" defined at system.ads:133, created in Gnat2Why.Decls.Translate_Constant *)
module System__denorm
 use import "_gnatprove_standard".Main

 function denorm "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "duration_32_bits" defined at system.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__duration_32_bits
 use import "_gnatprove_standard".Main

 function duration_32_bits "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "exit_status_supported" defined at system.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module System__exit_status_supported
 use import "_gnatprove_standard".Main

 function exit_status_supported "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "fractional_fixed_ops" defined at system.ads:136, created in Gnat2Why.Decls.Translate_Constant *)
module System__fractional_fixed_ops
 use import "_gnatprove_standard".Main

 function fractional_fixed_ops "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "frontend_layout" defined at system.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module System__frontend_layout
 use import "_gnatprove_standard".Main

 function frontend_layout "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "machine_overflows" defined at system.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_overflows
 use import "_gnatprove_standard".Main

 function machine_overflows "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "machine_rounds" defined at system.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_rounds
 use import "_gnatprove_standard".Main

 function machine_rounds "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "preallocated_stacks" defined at system.ads:140, created in Gnat2Why.Decls.Translate_Constant *)
module System__preallocated_stacks
 use import "_gnatprove_standard".Main

 function preallocated_stacks "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "signed_zeros" defined at system.ads:141, created in Gnat2Why.Decls.Translate_Constant *)
module System__signed_zeros
 use import "_gnatprove_standard".Main

 function signed_zeros "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "stack_check_default" defined at system.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_default
 use import "_gnatprove_standard".Main

 function stack_check_default "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "stack_check_probes" defined at system.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_probes
 use import "_gnatprove_standard".Main

 function stack_check_probes "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "stack_check_limits" defined at system.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_limits
 use import "_gnatprove_standard".Main

 function stack_check_limits "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "support_aggregates" defined at system.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_aggregates
 use import "_gnatprove_standard".Main

 function support_aggregates "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "support_atomic_primitives" defined at system.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_atomic_primitives
 use import "_gnatprove_standard".Main

 function support_atomic_primitives "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "support_composite_assign" defined at system.ads:147, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_assign
 use import "_gnatprove_standard".Main

 function support_composite_assign "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "support_composite_compare" defined at system.ads:148, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_compare
 use import "_gnatprove_standard".Main

 function support_composite_compare "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "support_long_shifts" defined at system.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_long_shifts
 use import "_gnatprove_standard".Main

 function support_long_shifts "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "always_compatible_rep" defined at system.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module System__always_compatible_rep
 use import "_gnatprove_standard".Main

 function always_compatible_rep "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "suppress_standard_library" defined at system.ads:151, created in Gnat2Why.Decls.Translate_Constant *)
module System__suppress_standard_library
 use import "_gnatprove_standard".Main

 function suppress_standard_library "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "use_ada_main_program_name" defined at system.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module System__use_ada_main_program_name
 use import "_gnatprove_standard".Main

 function use_ada_main_program_name "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "zcx_by_default" defined at system.ads:153, created in Gnat2Why.Decls.Translate_Constant *)
module System__zcx_by_default
 use import "_gnatprove_standard".Main

 function zcx_by_default "GP_CE_Relevant" 
   :bool

end

(* Module for axiomatizing type "Ttask_storage_sizeB" defined at s-parame.ads:58, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__Ttask_storage_sizeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ttask_storage_sizeB 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ttask_storage_sizeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "task_storage_size" defined at s-parame.ads:58, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__task_storage_size
 use import "_gnatprove_standard".Main
 use import "int".Int

 type task_storage_size 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = task_storage_size, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Tsize_typeB" defined at s-parame.ads:61, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__Tsize_typeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tsize_typeB 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tsize_typeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "size_type" defined at s-parame.ads:61, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__size_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type size_type 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = size_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "unspecified_size" defined at s-parame.ads:64, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__unspecified_size
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type

 function unspecified_size "GP_CE_Relevant" 
   :System__parameters__size_type.__split

end

(* Module for axiomatizing type "percentage" defined at s-parame.ads:67, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__percentage
 use import "_gnatprove_standard".Main
 use import "int".Int

 type percentage 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = percentage, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "dynamic" defined at s-parame.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__dynamic
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type

 function dynamic "GP_CE_Relevant" 
   :System__parameters__size_type.__split

end

(* Module for defining the constant "sec_stack_percentage" defined at s-parame.ads:75, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__sec_stack_percentage
 use import "_gnatprove_standard".Main
 use        System__parameters__percentage

 function sec_stack_percentage "GP_CE_Relevant" 
   :System__parameters__percentage.__split

end

(* Module for defining the constant "sec_stack_dynamic" defined at s-parame.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__sec_stack_dynamic
 use import "_gnatprove_standard".Main

 function sec_stack_dynamic "GP_CE_Relevant" 
   :bool

end

(* Module for possibly declaring a logic function for "default_stack_size" defined at s-parame.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__parameters__default_stack_size
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type

 function default_stack_size 
   (__void_param : unit)  :System__parameters__size_type.__split

end

(* Module for possibly declaring a logic function for "minimum_stack_size" defined at s-parame.ads:84, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__parameters__minimum_stack_size
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type

 function minimum_stack_size 
   (__void_param : unit)  :System__parameters__size_type.__split

end

(* Module for defining the constant "size" defined at s-parame.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__adjust_storage_size__size
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type

 function size "GP_CE_Relevant" 
   :System__parameters__size_type.__split

end

(* Module giving an empty axiom for the entity "size" defined at s-parame.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__parameters__adjust_storage_size__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "adjust_storage_size" defined at s-parame.ads:87, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__parameters__adjust_storage_size
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type

 function adjust_storage_size 
   (size : int)  :System__parameters__size_type.__split

end

(* Module for defining the constant "default_env_stack_size" defined at s-parame.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__default_env_stack_size
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type

 function default_env_stack_size "GP_CE_Relevant" 
   :System__parameters__size_type.__split

end

(* Module for defining the constant "stack_grows_down" defined at s-parame.ads:101, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__stack_grows_down
 use import "_gnatprove_standard".Main

 function stack_grows_down "GP_CE_Relevant" 
   :bool

end

(* Module for axiomatizing type "c_address" defined at s-parame.ads:116, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__c_address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type c_address 
 
 function first 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function last 
   :BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function attr__ATTRIBUTE_MODULUS 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function first_int 
   :int =
  0
 
 function last_int 
   :int =
  18446744073709551615
 
 predicate in_range
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt64 with
 type t = c_address, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int

end

(* Module for axiomatizing type "T1s" defined at s-parame.ads:119, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__T1s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int

 type component_type  = 
  Standard__character.character
 
 function first 
   :int =
  1
 
 function last 
   :int =
  13
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t1s  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__character.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for defining the constant "c_malloc_linkname" defined at s-parame.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__c_malloc_linkname
 use import "_gnatprove_standard".Main
 use        Standard__string

 function c_malloc_linkname 
   :Standard__string.string

end

(* Module for defining the constant "garbage_collected" defined at s-parame.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__garbage_collected
 use import "_gnatprove_standard".Main

 function garbage_collected "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "single_lock" defined at s-parame.ads:157, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__single_lock
 use import "_gnatprove_standard".Main

 function single_lock "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "no_abort" defined at s-parame.ads:170, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__no_abort
 use import "_gnatprove_standard".Main

 function no_abort "GP_CE_Relevant" 
   :bool

end

(* Module for defining the constant "runtime_traces" defined at s-parame.ads:190, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__runtime_traces
 use import "_gnatprove_standard".Main

 function runtime_traces "GP_CE_Relevant" 
   :bool

end

(* Module for axiomatizing type "chars" defined at s-crtl.ads:41, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__chars
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type chars 
 
 function first 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function last 
   :BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function attr__ATTRIBUTE_MODULUS 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function first_int 
   :int =
  0
 
 function last_int 
   :int =
  18446744073709551615
 
 predicate in_range
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt64 with
 type t = chars, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int

end

(* Module for axiomatizing type "dirs" defined at s-crtl.ads:47, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__dirs
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type dirs 
 
 function first 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function last 
   :BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function attr__ATTRIBUTE_MODULUS 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function first_int 
   :int =
  0
 
 function last_int 
   :int =
  18446744073709551615
 
 predicate in_range
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt64 with
 type t = dirs, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int

end

(* Module for axiomatizing type "files" defined at s-crtl.ads:50, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__files
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type files 
 
 function first 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function last 
   :BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function attr__ATTRIBUTE_MODULUS 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function first_int 
   :int =
  0
 
 function last_int 
   :int =
  18446744073709551615
 
 predicate in_range
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt64 with
 type t = files, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int

end

(* Module for axiomatizing type "int" defined at s-crtl.ads:53, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__int
 use import "_gnatprove_standard".Main
 use import "int".Int

 type int__ 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = int__, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "TlongB" defined at s-crtl.ads:55, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__TlongB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tlongB 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tlongB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "long" defined at s-crtl.ads:55, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__long
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "off_t" defined at s-crtl.ads:58, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__off_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type off_t 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = off_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "size_t" defined at s-crtl.ads:60, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__size_t
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type size_t 
 
 function first 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function last 
   :BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int 
   :int =
  0
 
 function last_int 
   :int =
  18446744073709551615
 
 predicate in_range
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_64 with
 type t = size_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int

end

(* Module for axiomatizing type "Tssize_tB" defined at s-crtl.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__Tssize_tB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tssize_tB 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tssize_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "ssize_t" defined at s-crtl.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__ssize_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ssize_t 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ssize_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Tint64B" defined at s-crtl.ads:65, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__Tint64B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tint64B 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tint64B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "int64" defined at s-crtl.ads:65, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__int64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type int64 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = int64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "filename_encoding" defined at s-crtl.ads:72, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__filename_encoding
 use import "_gnatprove_standard".Main
 use import "int".Int

 type filename_encoding 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = filename_encoding, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "a" defined at s-crtl.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__strlen__a
 use import "_gnatprove_standard".Main
 use        System__address

 function a 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "a" defined at s-crtl.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strlen__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "strlen" defined at s-crtl.ads:85, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__strlen
 use import "_gnatprove_standard".Main
 use        System__address
 use        System__crtl__size_t

 function strlen 
   (a : System__address.__split)  :System__crtl__size_t.__split

end

(* Module for defining the constant "dest" defined at s-crtl.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__strncpy__dest
 use import "_gnatprove_standard".Main
 use        System__address

 function dest 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "dest" defined at s-crtl.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strncpy__dest__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "src" defined at s-crtl.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__strncpy__src
 use import "_gnatprove_standard".Main
 use        System__address

 function src 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "src" defined at s-crtl.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strncpy__src__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at s-crtl.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__strncpy__n
 use import "_gnatprove_standard".Main
 use        System__crtl__size_t

 function n "GP_CE_Relevant" 
   :System__crtl__size_t.__split

end

(* Module giving an empty axiom for the entity "n" defined at s-crtl.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strncpy__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "a" defined at s-crtl.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__atoi__a
 use import "_gnatprove_standard".Main
 use        System__address

 function a 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "a" defined at s-crtl.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__atoi__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "atoi" defined at s-crtl.ads:95, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__atoi
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        System__address

 function atoi 
   (a : System__address.__split)  :Standard__integer.__split

end

(* Module for defining the constant "stream" defined at s-crtl.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__clearerr__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 function stream 
   :System__crtl__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__clearerr__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "handle" defined at s-crtl.ads:101, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__dup__handle
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function handle "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "handle" defined at s-crtl.ads:101, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__dup__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "dup" defined at s-crtl.ads:101, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__dup
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function dup 
   (handle : int)  :System__crtl__int.__split

end

(* Module for defining the constant "from" defined at s-crtl.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__dup2__from
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function from "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "from" defined at s-crtl.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__dup2__from__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at s-crtl.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__dup2__to
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function to__ "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "to" defined at s-crtl.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__dup2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "dup2" defined at s-crtl.ads:104, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__dup2
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function dup2 
   (from : int) (to__ : int)  :System__crtl__int.__split

end

(* Module for defining the constant "stream" defined at s-crtl.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fclose__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 function stream 
   :System__crtl__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fclose__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fclose" defined at s-crtl.ads:107, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fclose
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int

 function fclose 
   (stream : System__crtl__files.__split)  :System__crtl__int.__split

end

(* Module for defining the constant "handle" defined at s-crtl.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fdopen__handle
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function handle "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "handle" defined at s-crtl.ads:110, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fdopen__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fdopen__mode
 use import "_gnatprove_standard".Main
 use        System__crtl__chars

 function mode 
   :System__crtl__chars.__split

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:110, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fdopen__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fdopen" defined at s-crtl.ads:110, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fdopen
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__files

 function fdopen 
   (handle : int) (mode : System__crtl__chars.__split)  :System__crtl__files.__split

end

(* Module for defining the constant "stream" defined at s-crtl.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fflush__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 function stream 
   :System__crtl__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fflush__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fflush" defined at s-crtl.ads:113, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fflush
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int

 function fflush 
   (stream : System__crtl__files.__split)  :System__crtl__int.__split

end

(* Module for defining the constant "stream" defined at s-crtl.ads:116, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fgetc__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 function stream 
   :System__crtl__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:116, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgetc__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fgetc" defined at s-crtl.ads:116, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fgetc
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int

 function fgetc 
   (stream : System__crtl__files.__split)  :System__crtl__int.__split

end

(* Module for defining the constant "strng" defined at s-crtl.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fgets__strng
 use import "_gnatprove_standard".Main
 use        System__crtl__chars

 function strng 
   :System__crtl__chars.__split

end

(* Module giving an empty axiom for the entity "strng" defined at s-crtl.ads:119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgets__strng__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at s-crtl.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fgets__n
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function n "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "n" defined at s-crtl.ads:119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgets__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fgets__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 function stream 
   :System__crtl__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgets__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fgets" defined at s-crtl.ads:119, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fgets
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__files

 function fgets 
   (strng : System__crtl__chars.__split) (n : int) (stream : System__crtl__files.__split)  :System__crtl__chars.__split

end

(* Module for defining the constant "filename" defined at s-crtl.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fopen__filename
 use import "_gnatprove_standard".Main
 use        System__crtl__chars

 function filename 
   :System__crtl__chars.__split

end

(* Module giving an empty axiom for the entity "filename" defined at s-crtl.ads:123, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fopen__filename__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:124, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fopen__mode
 use import "_gnatprove_standard".Main
 use        System__crtl__chars

 function mode 
   :System__crtl__chars.__split

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:124, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fopen__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "encoding" defined at s-crtl.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fopen__encoding
 use import "_gnatprove_standard".Main
 use        System__crtl__filename_encoding

 function encoding "GP_CE_Relevant" 
   :System__crtl__filename_encoding.__split

end

(* Module giving an empty axiom for the entity "encoding" defined at s-crtl.ads:125, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fopen__encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fopen" defined at s-crtl.ads:122, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fopen
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__files

 function fopen 
   (filename : System__crtl__chars.__split) (mode : System__crtl__chars.__split) (encoding : int)  :System__crtl__files.__split

end

(* Module for defining the constant "c" defined at s-crtl.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputc__c
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function c "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "c" defined at s-crtl.ads:128, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputc__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputc__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 function stream 
   :System__crtl__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:128, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputc__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fputc" defined at s-crtl.ads:128, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fputc
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int

 function fputc 
   (c : int) (stream : System__crtl__files.__split)  :System__crtl__int.__split

end

(* Module for defining the constant "c" defined at s-crtl.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputwc__c
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function c "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "c" defined at s-crtl.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputwc__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputwc__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 function stream 
   :System__crtl__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputwc__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fputwc" defined at s-crtl.ads:131, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fputwc
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int

 function fputwc 
   (c : int) (stream : System__crtl__files.__split)  :System__crtl__int.__split

end

(* Module for defining the constant "strng" defined at s-crtl.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputs__strng
 use import "_gnatprove_standard".Main
 use        System__crtl__chars

 function strng 
   :System__crtl__chars.__split

end

(* Module giving an empty axiom for the entity "strng" defined at s-crtl.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputs__strng__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputs__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 function stream 
   :System__crtl__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputs__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fputs" defined at s-crtl.ads:134, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fputs
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__int

 function fputs 
   (strng : System__crtl__chars.__split) (stream : System__crtl__files.__split)  :System__crtl__int.__split

end

(* Module for defining the constant "ptr" defined at s-crtl.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__free__ptr
 use import "_gnatprove_standard".Main
 use        System__address

 function ptr 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "ptr" defined at s-crtl.ads:137, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__free__ptr__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "filename" defined at s-crtl.ads:141, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__freopen__filename
 use import "_gnatprove_standard".Main
 use        System__crtl__chars

 function filename 
   :System__crtl__chars.__split

end

(* Module giving an empty axiom for the entity "filename" defined at s-crtl.ads:141, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__filename__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__freopen__mode
 use import "_gnatprove_standard".Main
 use        System__crtl__chars

 function mode 
   :System__crtl__chars.__split

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:142, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__freopen__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 function stream 
   :System__crtl__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:143, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "encoding" defined at s-crtl.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__freopen__encoding
 use import "_gnatprove_standard".Main
 use        System__crtl__filename_encoding

 function encoding "GP_CE_Relevant" 
   :System__crtl__filename_encoding.__split

end

(* Module giving an empty axiom for the entity "encoding" defined at s-crtl.ads:144, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "freopen" defined at s-crtl.ads:140, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__freopen
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__files

 function freopen 
   (filename : System__crtl__chars.__split) (mode : System__crtl__chars.__split) (stream : System__crtl__files.__split) (encoding : int)  :System__crtl__files.__split

end

(* Module for defining the constant "stream" defined at s-crtl.ads:148, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 function stream 
   :System__crtl__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:148, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offset" defined at s-crtl.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek__offset
 use import "_gnatprove_standard".Main
 use        System__crtl__long

 function offset "GP_CE_Relevant" 
   :System__crtl__long.__split

end

(* Module giving an empty axiom for the entity "offset" defined at s-crtl.ads:149, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek__offset__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "origin" defined at s-crtl.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek__origin
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function origin "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "origin" defined at s-crtl.ads:150, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek__origin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fseek" defined at s-crtl.ads:147, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fseek
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int

 function fseek 
   (stream : System__crtl__files.__split) (offset : int) (origin : int)  :System__crtl__int.__split

end

(* Module for defining the constant "stream" defined at s-crtl.ads:154, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek64__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 function stream 
   :System__crtl__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:154, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek64__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offset" defined at s-crtl.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek64__offset
 use import "_gnatprove_standard".Main
 use        System__crtl__int64

 function offset "GP_CE_Relevant" 
   :System__crtl__int64.__split

end

(* Module giving an empty axiom for the entity "offset" defined at s-crtl.ads:155, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek64__offset__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "origin" defined at s-crtl.ads:156, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek64__origin
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function origin "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "origin" defined at s-crtl.ads:156, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek64__origin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fseek64" defined at s-crtl.ads:153, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fseek64
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int

 function fseek64 
   (stream : System__crtl__files.__split) (offset : int) (origin : int)  :System__crtl__int.__split

end

(* Module for defining the constant "stream" defined at s-crtl.ads:159, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__ftell__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 function stream 
   :System__crtl__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:159, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ftell__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "ftell" defined at s-crtl.ads:159, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__ftell
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__long

 function ftell 
   (stream : System__crtl__files.__split)  :System__crtl__long.__split

end

(* Module for defining the constant "stream" defined at s-crtl.ads:162, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__ftell64__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 function stream 
   :System__crtl__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:162, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ftell64__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "ftell64" defined at s-crtl.ads:162, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__ftell64
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int64

 function ftell64 
   (stream : System__crtl__files.__split)  :System__crtl__int64.__split

end

(* Module for defining the constant "s" defined at s-crtl.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__getenv__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "s" defined at s-crtl.ads:165, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__getenv__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "getenv" defined at s-crtl.ads:165, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__getenv
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        System__address

 function getenv 
   (s : Standard__string.string)  :System__address.__split

end

(* Module for defining the constant "handle" defined at s-crtl.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__isatty__handle
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function handle "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "handle" defined at s-crtl.ads:168, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__isatty__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "isatty" defined at s-crtl.ads:168, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__isatty
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function isatty 
   (handle : int)  :System__crtl__int.__split

end

(* Module for defining the constant "fd" defined at s-crtl.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__lseek__fd
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function fd "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "fd" defined at s-crtl.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__lseek__fd__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offset" defined at s-crtl.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__lseek__offset
 use import "_gnatprove_standard".Main
 use        System__crtl__off_t

 function offset "GP_CE_Relevant" 
   :System__crtl__off_t.__split

end

(* Module giving an empty axiom for the entity "offset" defined at s-crtl.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__lseek__offset__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "direction" defined at s-crtl.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__lseek__direction
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function direction "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "direction" defined at s-crtl.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__lseek__direction__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "lseek" defined at s-crtl.ads:171, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__lseek
 use import "_gnatprove_standard".Main
 use        System__crtl__off_t

 function lseek 
   (fd : int) (offset : int) (direction : int)  :System__crtl__off_t.__split

end

(* Module for defining the constant "size" defined at s-crtl.ads:174, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__malloc__size
 use import "_gnatprove_standard".Main
 use        System__crtl__size_t

 function size "GP_CE_Relevant" 
   :System__crtl__size_t.__split

end

(* Module giving an empty axiom for the entity "size" defined at s-crtl.ads:174, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__malloc__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "malloc" defined at s-crtl.ads:174, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__malloc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address

 function malloc 
   (size : BV64.t)  :System__address.__split

end

(* Module for defining the constant "s1" defined at s-crtl.ads:177, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memcpy__s1
 use import "_gnatprove_standard".Main
 use        System__address

 function s1 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "s1" defined at s-crtl.ads:177, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memcpy__s1__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s2" defined at s-crtl.ads:177, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memcpy__s2
 use import "_gnatprove_standard".Main
 use        System__address

 function s2 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "s2" defined at s-crtl.ads:177, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memcpy__s2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at s-crtl.ads:177, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memcpy__n
 use import "_gnatprove_standard".Main
 use        System__crtl__size_t

 function n "GP_CE_Relevant" 
   :System__crtl__size_t.__split

end

(* Module giving an empty axiom for the entity "n" defined at s-crtl.ads:177, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memcpy__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s1" defined at s-crtl.ads:180, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memmove__s1
 use import "_gnatprove_standard".Main
 use        System__address

 function s1 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "s1" defined at s-crtl.ads:180, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memmove__s1__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s2" defined at s-crtl.ads:180, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memmove__s2
 use import "_gnatprove_standard".Main
 use        System__address

 function s2 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "s2" defined at s-crtl.ads:180, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memmove__s2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at s-crtl.ads:180, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memmove__n
 use import "_gnatprove_standard".Main
 use        System__crtl__size_t

 function n "GP_CE_Relevant" 
   :System__crtl__size_t.__split

end

(* Module giving an empty axiom for the entity "n" defined at s-crtl.ads:180, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memmove__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "template" defined at s-crtl.ads:183, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__mktemp__template
 use import "_gnatprove_standard".Main
 use        System__crtl__chars

 function template 
   :System__crtl__chars.__split

end

(* Module giving an empty axiom for the entity "template" defined at s-crtl.ads:183, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__mktemp__template__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__pclose__stream
 use import "_gnatprove_standard".Main
 use        System__address

 function stream 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__pclose__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "pclose" defined at s-crtl.ads:186, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__pclose
 use import "_gnatprove_standard".Main
 use        System__address
 use        System__crtl__int

 function pclose 
   (stream : System__address.__split)  :System__crtl__int.__split

end

(* Module for defining the constant "command" defined at s-crtl.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__popen__command
 use import "_gnatprove_standard".Main
 use        System__address

 function command 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "command" defined at s-crtl.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__popen__command__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__popen__mode
 use import "_gnatprove_standard".Main
 use        System__address

 function mode 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__popen__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "popen" defined at s-crtl.ads:189, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__popen
 use import "_gnatprove_standard".Main
 use        System__address

 function popen 
   (command : System__address.__split) (mode : System__address.__split)  :System__address.__split

end

(* Module for defining the constant "ptr" defined at s-crtl.ads:193, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__realloc__ptr
 use import "_gnatprove_standard".Main
 use        System__address

 function ptr 
   :System__address.__split

end

(* Module giving an empty axiom for the entity "ptr" defined at s-crtl.ads:193, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__realloc__ptr__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at s-crtl.ads:193, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__realloc__size
 use import "_gnatprove_standard".Main
 use        System__crtl__size_t

 function size "GP_CE_Relevant" 
   :System__crtl__size_t.__split

end

(* Module giving an empty axiom for the entity "size" defined at s-crtl.ads:193, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__realloc__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "realloc" defined at s-crtl.ads:192, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__realloc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address

 function realloc 
   (ptr : System__address.__split) (size : BV64.t)  :System__address.__split

end

(* Module for defining the constant "stream" defined at s-crtl.ads:196, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__rewind__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 function stream 
   :System__crtl__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:196, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__rewind__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "dir_name" defined at s-crtl.ads:199, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__rmdir__dir_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function dir_name 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "dir_name" defined at s-crtl.ads:199, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__rmdir__dir_name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "rmdir" defined at s-crtl.ads:199, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__rmdir
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        System__crtl__int

 function rmdir 
   (dir_name : Standard__string.string)  :System__crtl__int.__split

end

(* Module for defining the constant "dir_name" defined at s-crtl.ads:202, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__chdir__dir_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function dir_name 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "dir_name" defined at s-crtl.ads:202, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__chdir__dir_name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "chdir" defined at s-crtl.ads:202, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__chdir
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        System__crtl__int

 function chdir 
   (dir_name : Standard__string.string)  :System__crtl__int.__split

end

(* Module for defining the constant "dir_name" defined at s-crtl.ads:206, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__mkdir__dir_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function dir_name 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "dir_name" defined at s-crtl.ads:206, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__mkdir__dir_name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "encoding" defined at s-crtl.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__mkdir__encoding
 use import "_gnatprove_standard".Main
 use        System__crtl__filename_encoding

 function encoding "GP_CE_Relevant" 
   :System__crtl__filename_encoding.__split

end

(* Module giving an empty axiom for the entity "encoding" defined at s-crtl.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__mkdir__encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "mkdir" defined at s-crtl.ads:205, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__mkdir
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        System__crtl__int

 function mkdir 
   (dir_name : Standard__string.string) (encoding : int)  :System__crtl__int.__split

end

(* Module for defining the constant "stream" defined at s-crtl.ads:211, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__setvbuf__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 function stream 
   :System__crtl__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:211, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__setvbuf__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at s-crtl.ads:212, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__setvbuf__buffer
 use import "_gnatprove_standard".Main
 use        System__crtl__chars

 function buffer 
   :System__crtl__chars.__split

end

(* Module giving an empty axiom for the entity "buffer" defined at s-crtl.ads:212, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__setvbuf__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:213, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__setvbuf__mode
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function mode "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__setvbuf__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at s-crtl.ads:214, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__setvbuf__size
 use import "_gnatprove_standard".Main
 use        System__crtl__size_t

 function size "GP_CE_Relevant" 
   :System__crtl__size_t.__split

end

(* Module giving an empty axiom for the entity "size" defined at s-crtl.ads:214, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__setvbuf__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "setvbuf" defined at s-crtl.ads:210, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__setvbuf
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__int

 function setvbuf 
   (stream : System__crtl__files.__split) (buffer : System__crtl__chars.__split) (mode : int) (size : BV64.t)  :System__crtl__int.__split

end

(* Module for defining the constant "str" defined at s-crtl.ads:217, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__tmpnam__str
 use import "_gnatprove_standard".Main
 use        System__crtl__chars

 function str 
   :System__crtl__chars.__split

end

(* Module giving an empty axiom for the entity "str" defined at s-crtl.ads:217, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__tmpnam__str__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "tmpfile" defined at s-crtl.ads:220, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__tmpfile
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 function tmpfile 
   (__void_param : unit)  :System__crtl__files.__split

end

(* Module for defining the constant "c" defined at s-crtl.ads:223, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__ungetc__c
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function c "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "c" defined at s-crtl.ads:223, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ungetc__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:223, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__ungetc__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 function stream 
   :System__crtl__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:223, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ungetc__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "ungetc" defined at s-crtl.ads:223, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__ungetc
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int

 function ungetc 
   (c : int) (stream : System__crtl__files.__split)  :System__crtl__int.__split

end

(* Module for defining the constant "filename" defined at s-crtl.ads:226, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__unlink__filename
 use import "_gnatprove_standard".Main
 use        System__crtl__chars

 function filename 
   :System__crtl__chars.__split

end

(* Module giving an empty axiom for the entity "filename" defined at s-crtl.ads:226, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__unlink__filename__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "unlink" defined at s-crtl.ads:226, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__unlink
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__int

 function unlink 
   (filename : System__crtl__chars.__split)  :System__crtl__int.__split

end

(* Module for defining the constant "filename" defined at s-crtl.ads:229, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__open__filename
 use import "_gnatprove_standard".Main
 use        System__crtl__chars

 function filename 
   :System__crtl__chars.__split

end

(* Module giving an empty axiom for the entity "filename" defined at s-crtl.ads:229, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__open__filename__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "oflag" defined at s-crtl.ads:229, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__open__oflag
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function oflag "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "oflag" defined at s-crtl.ads:229, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__open__oflag__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "open" defined at s-crtl.ads:229, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__open
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__int

 function open 
   (filename : System__crtl__chars.__split) (oflag : int)  :System__crtl__int.__split

end

(* Module for defining the constant "fd" defined at s-crtl.ads:232, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__close__fd
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function fd "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "fd" defined at s-crtl.ads:232, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__close__fd__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "close" defined at s-crtl.ads:232, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__close
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function close 
   (fd : int)  :System__crtl__int.__split

end

(* Module for defining the constant "fd" defined at s-crtl.ads:235, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__read__fd
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function fd "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "fd" defined at s-crtl.ads:235, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__read__fd__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at s-crtl.ads:235, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__read__buffer
 use import "_gnatprove_standard".Main
 use        System__crtl__chars

 function buffer 
   :System__crtl__chars.__split

end

(* Module giving an empty axiom for the entity "buffer" defined at s-crtl.ads:235, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__read__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at s-crtl.ads:235, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__read__count
 use import "_gnatprove_standard".Main
 use        System__crtl__size_t

 function count "GP_CE_Relevant" 
   :System__crtl__size_t.__split

end

(* Module giving an empty axiom for the entity "count" defined at s-crtl.ads:235, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__read__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "read" defined at s-crtl.ads:235, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__read
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__crtl__chars
 use        System__crtl__ssize_t

 function read 
   (fd : int) (buffer : System__crtl__chars.__split) (count : BV64.t)  :System__crtl__ssize_t.__split

end

(* Module for defining the constant "fd" defined at s-crtl.ads:238, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__write__fd
 use import "_gnatprove_standard".Main
 use        System__crtl__int

 function fd "GP_CE_Relevant" 
   :System__crtl__int.__split

end

(* Module giving an empty axiom for the entity "fd" defined at s-crtl.ads:238, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__write__fd__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at s-crtl.ads:238, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__write__buffer
 use import "_gnatprove_standard".Main
 use        System__crtl__chars

 function buffer 
   :System__crtl__chars.__split

end

(* Module giving an empty axiom for the entity "buffer" defined at s-crtl.ads:238, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__write__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at s-crtl.ads:238, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__write__count
 use import "_gnatprove_standard".Main
 use        System__crtl__size_t

 function count "GP_CE_Relevant" 
   :System__crtl__size_t.__split

end

(* Module giving an empty axiom for the entity "count" defined at s-crtl.ads:238, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__write__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "write" defined at s-crtl.ads:238, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__write
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__crtl__chars
 use        System__crtl__ssize_t

 function write 
   (fd : int) (buffer : System__crtl__chars.__split) (count : BV64.t)  :System__crtl__ssize_t.__split

end

(* Module for axiomatizing type "Tinteger_8B" defined at interfac.ads:45, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_8B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_8B 
 
 function first 
   :int =
  ( -128 )
 
 function last 
   :int =
  127
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_8B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer_8" defined at interfac.ads:45, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_8
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_8 
 
 function first 
   :int =
  ( -128 )
 
 function last 
   :int =
  127
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Tinteger_16B" defined at interfac.ads:48, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_16B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_16B 
 
 function first 
   :int =
  ( -32768 )
 
 function last 
   :int =
  32767
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_16B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer_16" defined at interfac.ads:48, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_16
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_16 
 
 function first 
   :int =
  ( -32768 )
 
 function last 
   :int =
  32767
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Tinteger_32B" defined at interfac.ads:51, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_32B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_32B 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_32B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer_32" defined at interfac.ads:51, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_32
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_32 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Tinteger_64B" defined at interfac.ads:54, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_64B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_64B 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_64B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer_64" defined at interfac.ads:54, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_64 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "unsigned_8" defined at interfac.ads:62, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_8
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type unsigned_8 
 
 function first 
   :BV8.t =
  ( BV8.of_int 0 )
 
 function last 
   :BV8.t =
  ( BV8.of_int 255 )
 
 function first_int 
   :int =
  0
 
 function last_int 
   :int =
  255
 
 predicate in_range
   (x : BV8.t)  =
  ( (BV8.ule first x) /\ (BV8.ule x last) )
 
 predicate in_range_int
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_8 with
 type t = unsigned_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int

end

(* Module for axiomatizing type "unsigned_16" defined at interfac.ads:65, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_16
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV16

 type unsigned_16 
 
 function first 
   :BV16.t =
  ( BV16.of_int 0 )
 
 function last 
   :BV16.t =
  ( BV16.of_int 65535 )
 
 function first_int 
   :int =
  0
 
 function last_int 
   :int =
  65535
 
 predicate in_range
   (x : BV16.t)  =
  ( (BV16.ule first x) /\ (BV16.ule x last) )
 
 predicate in_range_int
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_16 with
 type t = unsigned_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int

end

(* Module for axiomatizing type "unsigned_32" defined at interfac.ads:68, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_32
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type unsigned_32 
 
 function first 
   :BV32.t =
  ( BV32.of_int 0 )
 
 function last 
   :BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int 
   :int =
  0
 
 function last_int 
   :int =
  4294967295
 
 predicate in_range
   (x : BV32.t)  =
  ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_32 with
 type t = unsigned_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int

end

(* Module for axiomatizing type "unsigned_64" defined at interfac.ads:71, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_64
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type unsigned_64 
 
 function first 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function last 
   :BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int 
   :int =
  0
 
 function last_int 
   :int =
  18446744073709551615
 
 predicate in_range
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_64 with
 type t = unsigned_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int

end

(* Module for defining the constant "value" defined at interfac.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_8

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_8.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_8

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_8.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:84, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_8

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_8.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:84, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_8

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_8.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:89, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:89, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:92, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_8

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_8.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:92, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:93, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:93, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__2__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_16

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_16.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:96, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__2__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__2__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__2__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:100, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__2__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_16

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_16.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__2__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:101, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__2__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:101, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__2__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__2__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_16

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_16.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__2__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__2__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__2__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:108, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__2__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_16

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_16.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:108, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__2__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__2__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__2__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__2__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_16

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_16.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__2__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__2__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__2__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:116, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__3__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_32

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_32.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:116, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__3__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:117, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__3__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:117, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__3__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:120, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__3__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_32

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_32.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:120, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__3__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__3__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:121, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__3__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:124, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__3__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_32

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_32.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:124, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__3__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__3__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:125, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__3__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__3__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_32

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_32.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:128, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__3__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__3__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:129, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__3__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:132, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__3__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_32

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_32.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:132, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__3__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:133, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__3__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:133, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__3__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:136, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__4__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_64

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_64.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:136, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__4__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__4__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:137, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__4__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:140, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__4__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_64

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_64.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:140, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__4__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:141, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__4__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:141, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__4__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__4__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_64

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_64.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:144, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__4__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__4__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__4__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:148, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__4__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_64

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_64.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:148, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__4__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__4__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:149, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__4__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__4__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_64

 function value "GP_CE_Relevant" 
   :Interfaces__unsigned_64.__split

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__4__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:153, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__4__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural

 function amount "GP_CE_Relevant" 
   :Standard__natural.__split

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:153, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__4__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tieee_float_32B" defined at interfac.ads:163, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_float_32B
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type tieee_float_32B 
 
 function first 
   :real =
  (-.340282346638528859811704183484516925440.0)
 
 function last 
   :real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tieee_float_32B, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "ieee_float_32" defined at interfac.ads:163, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_float_32
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type ieee_float_32 
 
 function first 
   :real =
  (-.340282346638528859811704183484516925440.0)
 
 function last 
   :real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = ieee_float_32, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Tieee_float_64B" defined at interfac.ads:166, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_float_64B
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type tieee_float_64B 
 
 function first 
   :real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last 
   :real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tieee_float_64B, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "ieee_float_64" defined at interfac.ads:166, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_float_64
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type ieee_float_64 
 
 function first 
   :real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last 
   :real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = ieee_float_64, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Tieee_extended_floatB" defined at interfac.ads:176, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_extended_floatB
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type tieee_extended_floatB 
 
 function first 
   :real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last 
   :real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tieee_extended_floatB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "ieee_extended_float" defined at interfac.ads:176, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_extended_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type ieee_extended_float 
 
 function first 
   :real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last 
   :real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = ieee_extended_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "chars" defined at i-cstrea.ads:40, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__chars
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type chars 
 
 function first 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function last 
   :BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function attr__ATTRIBUTE_MODULUS 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function first_int 
   :int =
  0
 
 function last_int 
   :int =
  18446744073709551615
 
 predicate in_range
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt64 with
 type t = chars, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int

end

(* Module for axiomatizing type "files" defined at i-cstrea.ads:41, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__files
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type files 
 
 function first 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function last 
   :BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function attr__ATTRIBUTE_MODULUS 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function first_int 
   :int =
  0
 
 function last_int 
   :int =
  18446744073709551615
 
 predicate in_range
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt64 with
 type t = files, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int

end

(* Module for axiomatizing type "int" defined at i-cstrea.ads:42, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__int
 use import "_gnatprove_standard".Main
 use import "int".Int

 type int__ 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = int__, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "long" defined at i-cstrea.ads:43, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__long
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "size_t" defined at i-cstrea.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__size_t
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type size_t 
 
 function first 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function last 
   :BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int 
   :int =
  0
 
 function last_int 
   :int =
  18446744073709551615
 
 predicate in_range
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_64 with
 type t = size_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int

end

(* Module for axiomatizing type "ssize_t" defined at i-cstrea.ads:45, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__ssize_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ssize_t 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ssize_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "int64" defined at i-cstrea.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__int64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type int64 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = int64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "voids" defined at i-cstrea.ads:47, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__voids
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type voids 
 
 function first 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function last 
   :BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function attr__ATTRIBUTE_MODULUS 
   :BV64.t =
  ( BV64.of_int 0 )
 
 function first_int 
   :int =
  0
 
 function last_int 
   :int =
  18446744073709551615
 
 predicate in_range
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt64 with
 type t = voids, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int

end

(* Module for defining the constant "null_stream" defined at i-cstrea.ads:49, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__null_stream
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files

 function null_stream 
   :Interfaces__c_streams__files.__split

end

(* Module for defining the constant "eof" defined at i-cstrea.ads:56, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__eof
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int

 function eof "GP_CE_Relevant" 
   :Interfaces__c_streams__int.__split

end

(* Module for defining the constant "iofbf" defined at i-cstrea.ads:59, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__iofbf
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int

 function iofbf "GP_CE_Relevant" 
   :Interfaces__c_streams__int.__split

end

(* Module for defining the constant "iolbf" defined at i-cstrea.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__iolbf
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int

 function iolbf "GP_CE_Relevant" 
   :Interfaces__c_streams__int.__split

end

(* Module for defining the constant "ionbf" defined at i-cstrea.ads:61, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__ionbf
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int

 function ionbf "GP_CE_Relevant" 
   :Interfaces__c_streams__int.__split

end

(* Module for defining the constant "l_tmpnam" defined at i-cstrea.ads:64, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__l_tmpnam
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int

 function l_tmpnam "GP_CE_Relevant" 
   :Interfaces__c_streams__int.__split

end

(* Module for defining the constant "seek_cur" defined at i-cstrea.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__seek_cur
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int

 function seek_cur "GP_CE_Relevant" 
   :Interfaces__c_streams__int.__split

end

(* Module for defining the constant "seek_end" defined at i-cstrea.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__seek_end
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int

 function seek_end "GP_CE_Relevant" 
   :Interfaces__c_streams__int.__split

end

(* Module for defining the constant "seek_set" defined at i-cstrea.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__seek_set
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int

 function seek_set "GP_CE_Relevant" 
   :Interfaces__c_streams__int.__split

end

(* Module for possibly declaring a logic function for "stdin" defined at i-cstrea.ads:72, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__stdin
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files

 function stdin 
   (__void_param : unit)  :Interfaces__c_streams__files.__split

end

(* Module for possibly declaring a logic function for "stdout" defined at i-cstrea.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__stdout
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files

 function stdout 
   (__void_param : unit)  :Interfaces__c_streams__files.__split

end

(* Module for possibly declaring a logic function for "stderr" defined at i-cstrea.ads:74, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__stderr
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files

 function stderr 
   (__void_param : unit)  :Interfaces__c_streams__files.__split

end

(* Module for defining the constant "stream" defined at i-cstrea.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__feof__stream
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files

 function stream 
   :Interfaces__c_streams__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__feof__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "feof" defined at i-cstrea.ads:95, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__feof
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__int

 function feof 
   (stream : Interfaces__c_streams__files.__split)  :Interfaces__c_streams__int.__split

end

(* Module for defining the constant "stream" defined at i-cstrea.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__ferror__stream
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files

 function stream 
   :Interfaces__c_streams__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__ferror__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "ferror" defined at i-cstrea.ads:97, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__ferror
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__int

 function ferror 
   (stream : Interfaces__c_streams__files.__split)  :Interfaces__c_streams__int.__split

end

(* Module for defining the constant "stream" defined at i-cstrea.ads:106, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fileno__stream
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files

 function stream 
   :Interfaces__c_streams__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fileno__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fileno" defined at i-cstrea.ads:106, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__fileno
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__int

 function fileno 
   (stream : Interfaces__c_streams__files.__split)  :Interfaces__c_streams__int.__split

end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__buffer
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__voids

 function buffer 
   :Interfaces__c_streams__voids.__split

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:129, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at i-cstrea.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__size
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t

 function size "GP_CE_Relevant" 
   :Interfaces__c_streams__size_t.__split

end

(* Module giving an empty axiom for the entity "size" defined at i-cstrea.ads:130, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at i-cstrea.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__count
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t

 function count "GP_CE_Relevant" 
   :Interfaces__c_streams__size_t.__split

end

(* Module giving an empty axiom for the entity "count" defined at i-cstrea.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at i-cstrea.ads:132, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__stream
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files

 function stream 
   :Interfaces__c_streams__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:132, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fread" defined at i-cstrea.ads:128, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__fread
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__size_t
 use        Interfaces__c_streams__voids

 function fread 
   (buffer : Interfaces__c_streams__voids.__split) (size : BV64.t) (count : BV64.t) (stream : Interfaces__c_streams__files.__split)  :Interfaces__c_streams__size_t.__split

end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__buffer
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__voids

 function buffer 
   :Interfaces__c_streams__voids.__split

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:135, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "index" defined at i-cstrea.ads:136, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__index
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t

 function index "GP_CE_Relevant" 
   :Interfaces__c_streams__size_t.__split

end

(* Module giving an empty axiom for the entity "index" defined at i-cstrea.ads:136, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__index__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at i-cstrea.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__size
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t

 function size "GP_CE_Relevant" 
   :Interfaces__c_streams__size_t.__split

end

(* Module giving an empty axiom for the entity "size" defined at i-cstrea.ads:137, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at i-cstrea.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__count
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t

 function count "GP_CE_Relevant" 
   :Interfaces__c_streams__size_t.__split

end

(* Module giving an empty axiom for the entity "count" defined at i-cstrea.ads:138, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at i-cstrea.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__stream
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files

 function stream 
   :Interfaces__c_streams__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:139, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fread__2" defined at i-cstrea.ads:134, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__fread__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__size_t
 use        Interfaces__c_streams__voids

 function fread__2 
   (buffer : Interfaces__c_streams__voids.__split) (index : BV64.t) (size : BV64.t) (count : BV64.t) (stream : Interfaces__c_streams__files.__split)  :Interfaces__c_streams__size_t.__split

end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:172, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fwrite__buffer
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__voids

 function buffer 
   :Interfaces__c_streams__voids.__split

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:172, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fwrite__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at i-cstrea.ads:173, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fwrite__size
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t

 function size "GP_CE_Relevant" 
   :Interfaces__c_streams__size_t.__split

end

(* Module giving an empty axiom for the entity "size" defined at i-cstrea.ads:173, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fwrite__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at i-cstrea.ads:174, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fwrite__count
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t

 function count "GP_CE_Relevant" 
   :Interfaces__c_streams__size_t.__split

end

(* Module giving an empty axiom for the entity "count" defined at i-cstrea.ads:174, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fwrite__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at i-cstrea.ads:175, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fwrite__stream
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files

 function stream 
   :Interfaces__c_streams__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:175, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fwrite__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fwrite" defined at i-cstrea.ads:171, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__fwrite
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__size_t
 use        Interfaces__c_streams__voids

 function fwrite 
   (buffer : Interfaces__c_streams__voids.__split) (size : BV64.t) (count : BV64.t) (stream : Interfaces__c_streams__files.__split)  :Interfaces__c_streams__size_t.__split

end

(* Module for defining the constant "stream" defined at i-cstrea.ads:185, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__setvbuf__stream
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files

 function stream 
   :Interfaces__c_streams__files.__split

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:185, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__setvbuf__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__setvbuf__buffer
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__chars

 function buffer 
   :Interfaces__c_streams__chars.__split

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__setvbuf__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at i-cstrea.ads:187, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__setvbuf__mode
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int

 function mode "GP_CE_Relevant" 
   :Interfaces__c_streams__int.__split

end

(* Module giving an empty axiom for the entity "mode" defined at i-cstrea.ads:187, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__setvbuf__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at i-cstrea.ads:188, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__setvbuf__size
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t

 function size "GP_CE_Relevant" 
   :Interfaces__c_streams__size_t.__split

end

(* Module giving an empty axiom for the entity "size" defined at i-cstrea.ads:188, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__setvbuf__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "setvbuf" defined at i-cstrea.ads:184, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__setvbuf
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c_streams__chars
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__int

 function setvbuf 
   (stream : Interfaces__c_streams__files.__split) (buffer : Interfaces__c_streams__chars.__split) (mode : int) (size : BV64.t)  :Interfaces__c_streams__int.__split

end

(* Module for defining the constant "name" defined at i-cstrea.ads:212, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__file_exists__name
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__chars

 function name 
   :Interfaces__c_streams__chars.__split

end

(* Module giving an empty axiom for the entity "name" defined at i-cstrea.ads:212, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__file_exists__name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "file_exists" defined at i-cstrea.ads:212, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__file_exists
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__chars
 use        Interfaces__c_streams__int

 function file_exists 
   (name : Interfaces__c_streams__chars.__split)  :Interfaces__c_streams__int.__split

end

(* Module for defining the constant "handle" defined at i-cstrea.ads:215, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__is_regular_file__handle
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int

 function handle "GP_CE_Relevant" 
   :Interfaces__c_streams__int.__split

end

(* Module giving an empty axiom for the entity "handle" defined at i-cstrea.ads:215, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__is_regular_file__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_regular_file" defined at i-cstrea.ads:215, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__is_regular_file
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int

 function is_regular_file 
   (handle : int)  :Interfaces__c_streams__int.__split

end

(* Module for defining the constant "handle" defined at i-cstrea.ads:223, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__set_binary_mode__handle
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int

 function handle "GP_CE_Relevant" 
   :Interfaces__c_streams__int.__split

end

(* Module giving an empty axiom for the entity "handle" defined at i-cstrea.ads:223, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_binary_mode__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "handle" defined at i-cstrea.ads:224, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__set_text_mode__handle
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int

 function handle "GP_CE_Relevant" 
   :Interfaces__c_streams__int.__split

end

(* Module giving an empty axiom for the entity "handle" defined at i-cstrea.ads:224, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_text_mode__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "content_encoding" defined at i-cstrea.ads:230, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__content_encoding
 use import "_gnatprove_standard".Main
 use import "int".Int

 type content_encoding 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  5
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = content_encoding, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "text_content_encoding" defined at i-cstrea.ads:248, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__text_content_encoding
 use import "_gnatprove_standard".Main
 use import "int".Int

 type text_content_encoding 
 
 function first 
   :int =
  1
 
 function last 
   :int =
  5
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = text_content_encoding, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "non_default_text_content_encoding" defined at i-cstrea.ads:251, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__non_default_text_content_encoding
 use import "_gnatprove_standard".Main
 use import "int".Int

 type non_default_text_content_encoding 
 
 function first 
   :int =
  2
 
 function last 
   :int =
  5
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = non_default_text_content_encoding, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "handle" defined at i-cstrea.ads:254, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__set_mode__handle
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int

 function handle "GP_CE_Relevant" 
   :Interfaces__c_streams__int.__split

end

(* Module giving an empty axiom for the entity "handle" defined at i-cstrea.ads:254, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_mode__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at i-cstrea.ads:254, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__set_mode__mode
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__content_encoding

 function mode "GP_CE_Relevant" 
   :Interfaces__c_streams__content_encoding.__split

end

(* Module giving an empty axiom for the entity "mode" defined at i-cstrea.ads:254, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_mode__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "nam" defined at i-cstrea.ads:262, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__full_name__nam
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__chars

 function nam 
   :Interfaces__c_streams__chars.__split

end

(* Module giving an empty axiom for the entity "nam" defined at i-cstrea.ads:262, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__full_name__nam__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:262, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__full_name__buffer
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__chars

 function buffer 
   :Interfaces__c_streams__chars.__split

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:262, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__full_name__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "max_path_len" defined at i-cstrea.ads:270, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__max_path_len
 use import "_gnatprove_standard".Main
 use        Standard__integer

 function max_path_len "GP_CE_Relevant" 
   :Standard__integer.__split

end

(* Module for axiomatizing type "file_mode" defined at s-ficobl.ads:63, created in Gnat2Why.Types.Translate_Type *)
module System__file_control_block__file_mode
 use import "_gnatprove_standard".Main
 use import "int".Int

 type file_mode 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  3
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = file_mode, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "read_file_mode" defined at s-ficobl.ads:64, created in Gnat2Why.Types.Translate_Type *)
module System__file_control_block__read_file_mode
 use import "_gnatprove_standard".Main
 use import "int".Int

 type read_file_mode 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  1
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = read_file_mode, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "shared_status_type" defined at s-ficobl.ads:69, created in Gnat2Why.Types.Translate_Type *)
module System__file_control_block__shared_status_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type shared_status_type 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = shared_status_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Twc_encoding_methodB" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_encoding_methodB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type twc_encoding_methodB 
 
 function first 
   :int =
  ( -128 )
 
 function last 
   :int =
  127
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = twc_encoding_methodB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "wc_encoding_method" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__wc_encoding_method
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wc_encoding_method 
 
 function first 
   :int =
  1
 
 function last 
   :int =
  6
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wc_encoding_method, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "wcem_hex" defined at s-wchcon.ads:100, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_hex
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method

 function wcem_hex "GP_CE_Relevant" 
   :System__wch_con__wc_encoding_method.__split

end

(* Module for defining the constant "wcem_upper" defined at s-wchcon.ads:108, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_upper
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method

 function wcem_upper "GP_CE_Relevant" 
   :System__wch_con__wc_encoding_method.__split

end

(* Module for defining the constant "wcem_shift_jis" defined at s-wchcon.ads:117, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_shift_jis
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method

 function wcem_shift_jis "GP_CE_Relevant" 
   :System__wch_con__wc_encoding_method.__split

end

(* Module for defining the constant "wcem_euc" defined at s-wchcon.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_euc
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method

 function wcem_euc "GP_CE_Relevant" 
   :System__wch_con__wc_encoding_method.__split

end

(* Module for defining the constant "wcem_utf8" defined at s-wchcon.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_utf8
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method

 function wcem_utf8 "GP_CE_Relevant" 
   :System__wch_con__wc_encoding_method.__split

end

(* Module for defining the constant "wcem_brackets" defined at s-wchcon.ads:156, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_brackets
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method

 function wcem_brackets "GP_CE_Relevant" 
   :System__wch_con__wc_encoding_method.__split

end

(* Module for axiomatizing type "Twc_encoding_lettersB" defined at s-wchcon.ads:169, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_encoding_lettersB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int
 use        System__wch_con__Twc_encoding_methodB
 use        System__wch_con__wc_encoding_method

 type component_type  = 
  Standard__character.character
 
 function index_1_id 
   (x : int)  :int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 type index_base_type = System__wch_con__Twc_encoding_methodB.twc_encoding_methodB, 
 type index_rep_type = int, 
 function to_rep = System__wch_con__Twc_encoding_methodB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = System__wch_con__Twc_encoding_methodB.in_range, 
 predicate index_dynamic_property = System__wch_con__wc_encoding_method.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type twc_encoding_lettersB  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__character.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "Twc_encoding_lettersT" defined at s-wchcon.ads:169, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_encoding_lettersT
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int

 type component_type  = 
  Standard__character.character
 
 function first 
   :int =
  1
 
 function last 
   :int =
  6
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type twc_encoding_lettersT  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__character.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "T3s" defined at s-wchcon.ads:170, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t3s 
 
 function first 
   :int =
  1
 
 function last 
   :int =
  6
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t3s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T4s" defined at s-wchcon.ads:170, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int

 type component_type  = 
  Standard__character.character
 
 function first 
   :int =
  1
 
 function last 
   :int =
  6
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t4s  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__character.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for defining the constant "wc_encoding_letters" defined at s-wchcon.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wc_encoding_letters
 use import "_gnatprove_standard".Main
 use        System__wch_con__Twc_encoding_lettersT

 function wc_encoding_letters 
   :System__wch_con__Twc_encoding_lettersT.twc_encoding_lettersT

end

(* Module for axiomatizing type "wc_esc_encoding_method" defined at s-wchcon.ads:180, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__wc_esc_encoding_method
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wc_esc_encoding_method 
 
 function first 
   :int =
  1
 
 function last 
   :int =
  1
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wc_esc_encoding_method, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "wc_upper_half_encoding_method" defined at s-wchcon.ads:184, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__wc_upper_half_encoding_method
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wc_upper_half_encoding_method 
 
 function first 
   :int =
  2
 
 function last 
   :int =
  5
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wc_upper_half_encoding_method, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Twc_longest_sequencesB" defined at s-wchcon.ads:193, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_longest_sequencesB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Array__Int
 use        System__wch_con__Twc_encoding_methodB
 use        System__wch_con__wc_encoding_method

 type component_type  = 
  Standard__natural.natural
 
 function index_1_id 
   (x : int)  :int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 type index_base_type = System__wch_con__Twc_encoding_methodB.twc_encoding_methodB, 
 type index_rep_type = int, 
 function to_rep = System__wch_con__Twc_encoding_methodB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = System__wch_con__Twc_encoding_methodB.in_range, 
 predicate index_dynamic_property = System__wch_con__wc_encoding_method.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type twc_longest_sequencesB  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__natural.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "Twc_longest_sequencesT" defined at s-wchcon.ads:193, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_longest_sequencesT
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Array__Int

 type component_type  = 
  Standard__natural.natural
 
 function first 
   :int =
  1
 
 function last 
   :int =
  6
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type twc_longest_sequencesT  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__natural.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "T7s" defined at s-wchcon.ads:194, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T7s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t7s 
 
 function first 
   :int =
  1
 
 function last 
   :int =
  6
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t7s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T8s" defined at s-wchcon.ads:194, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T8s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Array__Int

 type component_type  = 
  Standard__natural.natural
 
 function first 
   :int =
  1
 
 function last 
   :int =
  6
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t8s  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__natural.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for defining the constant "wc_longest_sequences" defined at s-wchcon.ads:193, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wc_longest_sequences
 use import "_gnatprove_standard".Main
 use        System__wch_con__Twc_longest_sequencesT

 function wc_longest_sequences 
   :System__wch_con__Twc_longest_sequencesT.twc_longest_sequencesT

end

(* Module for defining the constant "c" defined at s-wchcon.ads:203, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__get_wc_encoding_method__c
 use import "_gnatprove_standard".Main
 use        Standard__character

 function c "GP_CE_Relevant" 
   :Standard__character.__split

end

(* Module giving an empty axiom for the entity "c" defined at s-wchcon.ads:203, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__get_wc_encoding_method__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_wc_encoding_method" defined at s-wchcon.ads:203, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__wch_con__get_wc_encoding_method
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method

 function get_wc_encoding_method 
   (c : int)  :System__wch_con__wc_encoding_method.__split

end

(* Module for defining the constant "s" defined at s-wchcon.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__get_wc_encoding_method__2__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "s" defined at s-wchcon.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__get_wc_encoding_method__2__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_wc_encoding_method__2" defined at s-wchcon.ads:207, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__wch_con__get_wc_encoding_method__2
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        System__wch_con__wc_encoding_method

 function get_wc_encoding_method__2 
   (s : Standard__string.string)  :System__wch_con__wc_encoding_method.__split

end

(* Module for defining the constant "c" defined at s-wchcon.ads:213, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__is_start_of_encoding__c
 use import "_gnatprove_standard".Main
 use        Standard__character

 function c "GP_CE_Relevant" 
   :Standard__character.__split

end

(* Module giving an empty axiom for the entity "c" defined at s-wchcon.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__is_start_of_encoding__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "em" defined at s-wchcon.ads:214, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__is_start_of_encoding__em
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method

 function em "GP_CE_Relevant" 
   :System__wch_con__wc_encoding_method.__split

end

(* Module giving an empty axiom for the entity "em" defined at s-wchcon.ads:214, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__is_start_of_encoding__em__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_start_of_encoding" defined at s-wchcon.ads:212, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__wch_con__is_start_of_encoding
 use import "_gnatprove_standard".Main

 function is_start_of_encoding 
   (c : int) (em : int)  :bool

end

(* Module for axiomatizing type "file_type" defined at a-textio.ads:52, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__file_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields  = 
  { rec__main__ : Main.__private }
 
 type file_type  = 
  { __split_fields : __split_fields }
 
 function bool_eq 
   (a : file_type) (b : file_type)  :bool =
  (if ((a.__split_fields.rec__main__ = b.__split_fields.rec__main__)) then (
   True) else (
   False))
 
 function user_eq 
   (a : file_type) (b : file_type)  :bool
 
 function value__size 
   :int
 
 function object__size 
   (a : file_type)  :int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a  : file_type.
   ((object__size a) >= 0))

end

(* Module for axiomatizing type "file_mode" defined at a-textio.ads:53, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__file_mode
 use import "_gnatprove_standard".Main
 use import "int".Int

 type file_mode 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = file_mode, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "TcountB" defined at a-textio.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__TcountB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tcountB 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tcountB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "count" defined at a-textio.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__count
 use import "_gnatprove_standard".Main
 use import "int".Int

 type count 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "positive_count" defined at a-textio.ads:68, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__positive_count
 use import "_gnatprove_standard".Main
 use import "int".Int

 type positive_count 
 
 function first 
   :int =
  1
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive_count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "unbounded" defined at a-textio.ads:70, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__unbounded
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count

 function unbounded "GP_CE_Relevant" 
   :Ada__text_io__count.__split

end

(* Module for axiomatizing type "field" defined at a-textio.ads:73, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__field
 use import "_gnatprove_standard".Main
 use import "int".Int

 type field 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  255
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = field, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "number_base" defined at a-textio.ads:78, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__number_base
 use import "_gnatprove_standard".Main
 use import "int".Int

 type number_base 
 
 function first 
   :int =
  2
 
 function last 
   :int =
  16
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = number_base, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "type_set" defined at a-textio.ads:80, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__type_set
 use import "_gnatprove_standard".Main
 use import "int".Int

 type type_set 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  1
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = type_set, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "mode" defined at a-textio.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__create__mode
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_mode

 function mode "GP_CE_Relevant" 
   :Ada__text_io__file_mode.__split

end

(* Module giving an empty axiom for the entity "mode" defined at a-textio.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__create__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "name" defined at a-textio.ads:89, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__create__name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function name 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "name" defined at a-textio.ads:89, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__create__name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "form" defined at a-textio.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__create__form
 use import "_gnatprove_standard".Main
 use        Standard__string

 function form 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "form" defined at a-textio.ads:90, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__create__form__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at a-textio.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__open__mode
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_mode

 function mode "GP_CE_Relevant" 
   :Ada__text_io__file_mode.__split

end

(* Module giving an empty axiom for the entity "mode" defined at a-textio.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__open__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "name" defined at a-textio.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__open__name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function name 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "name" defined at a-textio.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__open__name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "form" defined at a-textio.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__open__form
 use import "_gnatprove_standard".Main
 use        Standard__string

 function form 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "form" defined at a-textio.ads:96, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__open__form__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at a-textio.ads:100, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__reset__mode
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_mode

 function mode "GP_CE_Relevant" 
   :Ada__text_io__file_mode.__split

end

(* Module giving an empty axiom for the entity "mode" defined at a-textio.ads:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__reset__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__mode__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__mode__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "mode" defined at a-textio.ads:103, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__mode
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_mode

 function mode 
   (file : Ada__text_io__file_type.file_type)  :Ada__text_io__file_mode.__split

end

(* Module for defining the constant "file" defined at a-textio.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__name__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__name__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "name" defined at a-textio.ads:104, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__name
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 function name 
   (file : Ada__text_io__file_type.file_type)  :Standard__string.string

end

(* Module for defining the constant "file" defined at a-textio.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__form__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__form__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "form" defined at a-textio.ads:105, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__form
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 function form 
   (file : Ada__text_io__file_type.file_type)  :Standard__string.string

end

(* Module for defining the constant "file" defined at a-textio.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__is_open__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__is_open__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_open" defined at a-textio.ads:107, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__is_open
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function is_open 
   (file : Ada__text_io__file_type.file_type)  :bool

end

(* Module for defining the constant "file" defined at a-textio.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_input__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_input__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_output__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_output__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:115, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_error__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:115, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_error__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "standard_input" defined at a-textio.ads:117, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function standard_input 
   (__void_param : unit)  :Ada__text_io__file_type.file_type

end

(* Module for possibly declaring a logic function for "standard_output" defined at a-textio.ads:118, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function standard_output 
   (__void_param : unit)  :Ada__text_io__file_type.file_type

end

(* Module for possibly declaring a logic function for "standard_error" defined at a-textio.ads:119, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__standard_error
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function standard_error 
   (__void_param : unit)  :Ada__text_io__file_type.file_type

end

(* Module for possibly declaring a logic function for "current_input" defined at a-textio.ads:121, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__current_input
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function current_input 
   (__void_param : unit)  :Ada__text_io__file_type.file_type

end

(* Module for possibly declaring a logic function for "current_output" defined at a-textio.ads:122, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__current_output
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function current_output 
   (__void_param : unit)  :Ada__text_io__file_type.file_type

end

(* Module for possibly declaring a logic function for "current_error" defined at a-textio.ads:123, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__current_error
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function current_error 
   (__void_param : unit)  :Ada__text_io__file_type.file_type

end

(* Module for defining the constant "file" defined at a-textio.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__flush__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:142, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__flush__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line_length__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:149, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line_length__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line_length__to
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count

 function to__ "GP_CE_Relevant" 
   :Ada__text_io__count.__split

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:149, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line_length__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line_length__2__to
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count

 function to__ "GP_CE_Relevant" 
   :Ada__text_io__count.__split

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:150, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line_length__2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_page_length__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_page_length__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_page_length__to
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count

 function to__ "GP_CE_Relevant" 
   :Ada__text_io__count.__split

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_page_length__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:153, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_page_length__2__to
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count

 function to__ "GP_CE_Relevant" 
   :Ada__text_io__count.__split

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:153, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_page_length__2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__line_length__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:155, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__line_length__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "line_length" defined at a-textio.ads:155, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__line_length
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__count

 function line_length 
   (file : Ada__text_io__file_type.file_type)  :Ada__text_io__count.__split

end

(* Module for possibly declaring a logic function for "line_length__2" defined at a-textio.ads:156, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__line_length__2
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count

 function line_length__2 
   (__void_param : unit)  :Ada__text_io__count.__split

end

(* Module for defining the constant "file" defined at a-textio.ads:158, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__page_length__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:158, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__page_length__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "page_length" defined at a-textio.ads:158, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__page_length
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__count

 function page_length 
   (file : Ada__text_io__file_type.file_type)  :Ada__text_io__count.__split

end

(* Module for possibly declaring a logic function for "page_length__2" defined at a-textio.ads:159, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__page_length__2
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count

 function page_length__2 
   (__void_param : unit)  :Ada__text_io__count.__split

end

(* Module for defining the constant "file" defined at a-textio.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__new_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:165, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at a-textio.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__new_line__spacing
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count

 function spacing "GP_CE_Relevant" 
   :Ada__text_io__positive_count.__split

end

(* Module giving an empty axiom for the entity "spacing" defined at a-textio.ads:165, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_line__spacing__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at a-textio.ads:166, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__new_line__2__spacing
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count

 function spacing "GP_CE_Relevant" 
   :Ada__text_io__positive_count.__split

end

(* Module giving an empty axiom for the entity "spacing" defined at a-textio.ads:166, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_line__2__spacing__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__skip_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:168, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at a-textio.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__skip_line__spacing
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count

 function spacing "GP_CE_Relevant" 
   :Ada__text_io__positive_count.__split

end

(* Module giving an empty axiom for the entity "spacing" defined at a-textio.ads:168, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_line__spacing__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at a-textio.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__skip_line__2__spacing
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count

 function spacing "GP_CE_Relevant" 
   :Ada__text_io__positive_count.__split

end

(* Module giving an empty axiom for the entity "spacing" defined at a-textio.ads:169, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_line__2__spacing__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__end_of_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "end_of_line" defined at a-textio.ads:171, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_line
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function end_of_line 
   (file : Ada__text_io__file_type.file_type)  :bool

end

(* Module for possibly declaring a logic function for "end_of_line__2" defined at a-textio.ads:172, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_line__2
 use import "_gnatprove_standard".Main

 function end_of_line__2 
   (__void_param : unit)  :bool

end

(* Module for defining the constant "file" defined at a-textio.ads:174, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__new_page__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:174, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_page__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:177, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__skip_page__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:177, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_page__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:180, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__end_of_page__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:180, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_page__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "end_of_page" defined at a-textio.ads:180, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_page
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function end_of_page 
   (file : Ada__text_io__file_type.file_type)  :bool

end

(* Module for possibly declaring a logic function for "end_of_page__2" defined at a-textio.ads:181, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_page__2
 use import "_gnatprove_standard".Main

 function end_of_page__2 
   (__void_param : unit)  :bool

end

(* Module for defining the constant "file" defined at a-textio.ads:183, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__end_of_file__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:183, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_file__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "end_of_file" defined at a-textio.ads:183, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function end_of_file 
   (file : Ada__text_io__file_type.file_type)  :bool

end

(* Module for possibly declaring a logic function for "end_of_file__2" defined at a-textio.ads:184, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_file__2
 use import "_gnatprove_standard".Main

 function end_of_file__2 
   (__void_param : unit)  :bool

end

(* Module for defining the constant "file" defined at a-textio.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_col__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_col__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_col__to
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count

 function to__ "GP_CE_Relevant" 
   :Ada__text_io__positive_count.__split

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_col__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:187, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_col__2__to
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count

 function to__ "GP_CE_Relevant" 
   :Ada__text_io__positive_count.__split

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:187, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_col__2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line__to
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count

 function to__ "GP_CE_Relevant" 
   :Ada__text_io__positive_count.__split

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:190, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line__2__to
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count

 function to__ "GP_CE_Relevant" 
   :Ada__text_io__positive_count.__split

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:190, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line__2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:192, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__col__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:192, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__col__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "col" defined at a-textio.ads:192, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__col
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__positive_count

 function col 
   (file : Ada__text_io__file_type.file_type)  :Ada__text_io__positive_count.__split

end

(* Module for possibly declaring a logic function for "col__2" defined at a-textio.ads:193, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__col__2
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count

 function col__2 
   (__void_param : unit)  :Ada__text_io__positive_count.__split

end

(* Module for defining the constant "file" defined at a-textio.ads:195, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:195, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "line" defined at a-textio.ads:195, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__line
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__positive_count

 function line 
   (file : Ada__text_io__file_type.file_type)  :Ada__text_io__positive_count.__split

end

(* Module for possibly declaring a logic function for "line__2" defined at a-textio.ads:196, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__line__2
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count

 function line__2 
   (__void_param : unit)  :Ada__text_io__positive_count.__split

end

(* Module for defining the constant "file" defined at a-textio.ads:198, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__page__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:198, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__page__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "page" defined at a-textio.ads:198, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__page
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__positive_count

 function page 
   (file : Ada__text_io__file_type.file_type)  :Ada__text_io__positive_count.__split

end

(* Module for possibly declaring a logic function for "page__2" defined at a-textio.ads:199, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__page__2
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count

 function page__2 
   (__void_param : unit)  :Ada__text_io__positive_count.__split

end

(* Module for defining the constant "file" defined at a-textio.ads:205, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:205, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__item
 use import "_gnatprove_standard".Main
 use        Standard__character

 function item "GP_CE_Relevant" 
   :Standard__character.__split

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:208, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__2__item
 use import "_gnatprove_standard".Main
 use        Standard__character

 function item "GP_CE_Relevant" 
   :Standard__character.__split

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:208, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:211, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__look_ahead__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:211, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:220, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get_immediate__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:220, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:227, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get_immediate__3__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:227, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:239, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get__3__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:239, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:241, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__3__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:241, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:241, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__3__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:241, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__3__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:242, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__4__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:242, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__4__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:245, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:245, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:253, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get_line__3__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:253, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_line__3" defined at a-textio.ads:253, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_line__3
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 function get_line__3 
   (file : Ada__text_io__file_type.file_type)  :Standard__string.string

end

(* Module for possibly declaring a logic function for "get_line__4" defined at a-textio.ads:256, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_line__4
 use import "_gnatprove_standard".Main
 use        Standard__string

 function get_line__4 
   (__void_param : unit)  :Standard__string.string

end

(* Module for defining the constant "file" defined at a-textio.ads:260, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:260, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:261, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put_line__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:261, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put_line__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:264, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put_line__2__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:264, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put_line__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:439, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__write__2__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array

 function item 
   :Ada__streams__stream_element_array.stream_element_array

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:439, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__write__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "eof_char" defined at a-textio.ads:460, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__eof_char
 use import "_gnatprove_standard".Main
 use        Standard__integer

 function eof_char 
   (__void_param : unit)  :Standard__integer.__split

end

(* Module for axiomatizing type "file_status" defined at spark.ads:41, created in Gnat2Why.Types.Translate_Type *)
module Spark__file_status
 use import "_gnatprove_standard".Main
 use import "int".Int

 type file_status 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  10
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = file_status, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "text_io_file_type" defined at spark.ads:53, created in Gnat2Why.Types.Translate_Type *)
module Spark__text_io_file_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields  = 
  { rec__main__ : Main.__private }
 
 type text_io_file_type  = 
  { __split_fields : __split_fields }
 
 function bool_eq 
   (a : text_io_file_type) (b : text_io_file_type)  :bool =
  (if ((a.__split_fields.rec__main__ = b.__split_fields.rec__main__)) then (
   True) else (
   False))
 
 function user_eq 
   (a : text_io_file_type) (b : text_io_file_type)  :bool
 
 function value__size 
   :int
 
 function object__size 
   (a : text_io_file_type)  :int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a  : text_io_file_type.
   ((object__size a) >= 0))

end

(* Module for axiomatizing type "file_type" defined at spark-text_io.ads:55, created in Gnat2Why.Types.Translate_Type *)
module Spark__text_io__file_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Spark__text_io_file_type

 type __split_fields  = 
  { rec__main__ : Main.__private }
 
 type file_type  = 
  { __split_fields : __split_fields }
 
 function to_base 
   (a : file_type)  :Spark__text_io_file_type.text_io_file_type =
  { Spark__text_io_file_type.__split_fields = { Spark__text_io_file_type.rec__main__ = a.__split_fields.rec__main__ } }
 
 function of_base 
   (r : Spark__text_io_file_type.text_io_file_type)  :file_type =
  { __split_fields = { rec__main__ = r.Spark__text_io_file_type.__split_fields.Spark__text_io_file_type.rec__main__ } }
 
 function bool_eq 
   (a : file_type) (b : file_type)  :bool =
  (if ((a.__split_fields.rec__main__ = b.__split_fields.rec__main__)) then (
   True) else (
   False))
 
 function user_eq 
   (a : file_type) (b : file_type)  :bool
 
 function value__size 
   :int
 
 function object__size 
   (a : file_type)  :int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a  : file_type.
   ((object__size a) >= 0))

end

(* Module for axiomatizing type "file_statusB" defined at spark-text_io.ads:56, created in Gnat2Why.Types.Translate_Type *)
module Spark__text_io__file_statusB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type file_statusB 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  10
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = file_statusB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "file_status" defined at spark-text_io.ads:56, created in Gnat2Why.Types.Translate_Type *)
module Spark__text_io__file_status
 use import "_gnatprove_standard".Main
 use import "int".Int

 type file_status 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  10
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = file_status, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "file_modeB" defined at spark-text_io.ads:57, created in Gnat2Why.Types.Translate_Type *)
module Spark__text_io__file_modeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type file_modeB 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = file_modeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "file_mode" defined at spark-text_io.ads:57, created in Gnat2Why.Types.Translate_Type *)
module Spark__text_io__file_mode
 use import "_gnatprove_standard".Main
 use import "int".Int

 type file_mode 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = file_mode, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "TcountB" defined at spark-text_io.ads:58, created in Gnat2Why.Types.Translate_Type *)
module Spark__text_io__TcountB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tcountB 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tcountB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "count" defined at spark-text_io.ads:58, created in Gnat2Why.Types.Translate_Type *)
module Spark__text_io__count
 use import "_gnatprove_standard".Main
 use import "int".Int

 type count 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "positive_count" defined at spark-text_io.ads:59, created in Gnat2Why.Types.Translate_Type *)
module Spark__text_io__positive_count
 use import "_gnatprove_standard".Main
 use import "int".Int

 type positive_count 
 
 function first 
   :int =
  1
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive_count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "field" defined at spark-text_io.ads:61, created in Gnat2Why.Types.Translate_Type *)
module Spark__text_io__field
 use import "_gnatprove_standard".Main
 use import "int".Int

 type field 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  255
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = field, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "number_base" defined at spark-text_io.ads:62, created in Gnat2Why.Types.Translate_Type *)
module Spark__text_io__number_base
 use import "_gnatprove_standard".Main
 use import "int".Int

 type number_base 
 
 function first 
   :int =
  2
 
 function last 
   :int =
  16
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = number_base, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "type_setB" defined at spark-text_io.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Spark__text_io__type_setB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type type_setB 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  1
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = type_setB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "type_set" defined at spark-text_io.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Spark__text_io__type_set
 use import "_gnatprove_standard".Main
 use import "int".Int

 type type_set 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  1
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = type_set, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "count_result" defined at spark-text_io.ads:66, created in Gnat2Why.Types.Translate_Type *)
module Spark__text_io__count_result
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Spark__text_io__file_status
 use        Spark__text_io__count

 type __split_discrs  = 
  { rec__status : Spark__text_io__file_status.file_status }
 
 type __split_fields  = 
  { rec__value : Spark__text_io__count.count }
 
 type count_result  = 
  { __split_discrs : __split_discrs; __split_fields : __split_fields; attr__constrained : bool }
 
 val rec__status_ 
   (a : count_result)  :Spark__text_io__file_status.file_status
  requires { true }
  ensures { (result = a.__split_discrs.rec__status) }

 
 predicate value__pred
   (a : count_result)  =
  ((Spark__text_io__file_status.to_rep a.__split_discrs.rec__status) = 1)
 
 val rec__value_ 
   (a : count_result)  :Spark__text_io__count.count
  requires { (value__pred a) }
  ensures { (result = a.__split_fields.rec__value) }

 
 function bool_eq 
   (a : count_result) (b : count_result)  :bool =
  (if (( ((Spark__text_io__file_status.to_rep a.__split_discrs.rec__status) = (Spark__text_io__file_status.to_rep b.__split_discrs.rec__status)) /\ ( (value__pred a) -> ((Spark__text_io__count.to_rep a.__split_fields.rec__value) = (Spark__text_io__count.to_rep b.__split_fields.rec__value)) ) )) then (
   True) else (
   False))
 
 function user_eq 
   (a : count_result) (b : count_result)  :bool
 
 function value__size 
   :int
 
 function object__size 
   (a : count_result)  :int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a  : count_result.
   ((object__size a) >= 0))
 
 function dummy 
   :count_result

end

(* Module for axiomatizing type "character_result" defined at spark-text_io.ads:73, created in Gnat2Why.Types.Translate_Type *)
module Spark__text_io__character_result
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Spark__text_io__file_status

 type __split_discrs  = 
  { rec__status : Spark__text_io__file_status.file_status }
 
 type __split_fields  = 
  { rec__item : Standard__character.character }
 
 type character_result  = 
  { __split_discrs : __split_discrs; __split_fields : __split_fields; attr__constrained : bool }
 
 val rec__status_ 
   (a : character_result)  :Spark__text_io__file_status.file_status
  requires { true }
  ensures { (result = a.__split_discrs.rec__status) }

 
 predicate item__pred
   (a : character_result)  =
  ((Spark__text_io__file_status.to_rep a.__split_discrs.rec__status) = 1)
 
 val rec__item_ 
   (a : character_result)  :Standard__character.character
  requires { (item__pred a) }
  ensures { (result = a.__split_fields.rec__item) }

 
 function bool_eq 
   (a : character_result) (b : character_result)  :bool =
  (if (( ((Spark__text_io__file_status.to_rep a.__split_discrs.rec__status) = (Spark__text_io__file_status.to_rep b.__split_discrs.rec__status)) /\ ( (item__pred a) -> ((Standard__character.to_rep a.__split_fields.rec__item) = (Standard__character.to_rep b.__split_fields.rec__item)) ) )) then (
   True) else (
   False))
 
 function user_eq 
   (a : character_result) (b : character_result)  :bool
 
 function value__size 
   :int
 
 function object__size 
   (a : character_result)  :int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a  : character_result.
   ((object__size a) >= 0))
 
 function dummy 
   :character_result

end

(* Module for axiomatizing type "immediate_result" defined at spark-text_io.ads:80, created in Gnat2Why.Types.Translate_Type *)
module Spark__text_io__immediate_result
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__character
 use        Spark__text_io__file_status

 type __split_discrs  = 
  { rec__status : Spark__text_io__file_status.file_status; rec__available : bool }
 
 type __split_fields  = 
  { rec__item : Standard__character.character }
 
 type immediate_result  = 
  { __split_discrs : __split_discrs; __split_fields : __split_fields; attr__constrained : bool }
 
 val rec__status_ 
   (a : immediate_result)  :Spark__text_io__file_status.file_status
  requires { true }
  ensures { (result = a.__split_discrs.rec__status) }

 
 val rec__available_ 
   (a : immediate_result)  :bool
  requires { true }
  ensures { (result = a.__split_discrs.rec__available) }

 
 predicate item__pred
   (a : immediate_result)  =
  ( ((Boolean.to_int a.__split_discrs.rec__available) = 1) /\ ((Spark__text_io__file_status.to_rep a.__split_discrs.rec__status) = 1) )
 
 val rec__item_ 
   (a : immediate_result)  :Standard__character.character
  requires { (item__pred a) }
  ensures { (result = a.__split_fields.rec__item) }

 
 function bool_eq 
   (a : immediate_result) (b : immediate_result)  :bool =
  (if (( ( ((Spark__text_io__file_status.to_rep a.__split_discrs.rec__status) = (Spark__text_io__file_status.to_rep b.__split_discrs.rec__status)) /\ (a.__split_discrs.rec__available = b.__split_discrs.rec__available) ) /\ ( (item__pred a) -> ((Standard__character.to_rep a.__split_fields.rec__item) = (Standard__character.to_rep b.__split_fields.rec__item)) ) )) then (
   True) else (
   False))
 
 function user_eq 
   (a : immediate_result) (b : immediate_result)  :bool
 
 function value__size 
   :int
 
 function object__size 
   (a : immediate_result)  :int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a  : immediate_result.
   ((object__size a) >= 0))
 
 function dummy 
   :immediate_result

end

(* Module for defining the constant "file" defined at spark-text_io.ads:187, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__is_readable__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:187, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__is_readable__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_readable" defined at spark-text_io.ads:187, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__is_readable
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function is_readable 
   (file : Spark__text_io__file_type.file_type)  :bool

end

(* Module for defining the constant "file" defined at spark-text_io.ads:192, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__is_writable__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:192, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__is_writable__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_writable" defined at spark-text_io.ads:192, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__is_writable
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function is_writable 
   (file : Spark__text_io__file_type.file_type)  :bool

end

(* Module for defining the constant "file" defined at spark-text_io.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__status__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:138, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__status__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "status" defined at spark-text_io.ads:138, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__status
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__file_status

 function status 
   (file : Spark__text_io__file_type.file_type)  :Spark__text_io__file_status.__split

end

(* Module for defining the constant "file" defined at spark-text_io.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__is_standard_input__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:144, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__is_standard_input__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_standard_input" defined at spark-text_io.ads:144, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__is_standard_input
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function is_standard_input 
   (file : Spark__text_io__file_type.file_type)  :bool

end

(* Module for defining the constant "file" defined at spark-text_io.ads:148, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__is_standard_output__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:148, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__is_standard_output__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_standard_output" defined at spark-text_io.ads:148, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__is_standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function is_standard_output 
   (file : Spark__text_io__file_type.file_type)  :bool

end

(* Module for defining the constant "file" defined at spark-text_io.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__is_standard_error__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__is_standard_error__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_standard_error" defined at spark-text_io.ads:152, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__is_standard_error
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function is_standard_error 
   (file : Spark__text_io__file_type.file_type)  :bool

end

(* Module for defining the constant "file" defined at spark-text_io.ads:156, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__is_standard_writable__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:156, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__is_standard_writable__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_standard_writable" defined at spark-text_io.ads:156, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__is_standard_writable
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function is_standard_writable 
   (file : Spark__text_io__file_type.file_type)  :bool

end

(* Module for defining the constant "file" defined at spark-text_io.ads:161, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__is_standard_file__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:161, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__is_standard_file__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_standard_file" defined at spark-text_io.ads:161, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__is_standard_file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function is_standard_file 
   (file : Spark__text_io__file_type.file_type)  :bool

end

(* Module for defining the constant "file" defined at spark-text_io.ads:167, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__is_open__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:167, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__is_open__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_open" defined at spark-text_io.ads:167, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__is_open
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function is_open 
   (file : Spark__text_io__file_type.file_type)  :bool

end

(* Module for defining the constant "file" defined at spark-text_io.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__mode__2__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__mode__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "mode__2" defined at spark-text_io.ads:171, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__mode__2
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__file_mode

 function mode__2 
   (file : Spark__text_io__file_type.file_type)  :Spark__text_io__file_mode.__split

end

(* Module for defining the constant "file" defined at spark-text_io.ads:178, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__name__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:178, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__name__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "name" defined at spark-text_io.ads:178, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__name
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Spark__text_io__file_type

 function name 
   (file : Spark__text_io__file_type.file_type)  :Standard__string.string

end

(* Module for defining the constant "file" defined at spark-text_io.ads:182, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__form__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:182, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__form__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "form" defined at spark-text_io.ads:182, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__form
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Spark__text_io__file_type

 function form 
   (file : Spark__text_io__file_type.file_type)  :Standard__string.string

end

(* Module for defining the constant "the_mode" defined at spark-text_io.ads:202, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__create__2__the_mode
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_mode

 function the_mode "GP_CE_Relevant" 
   :Spark__text_io__file_mode.__split

end

(* Module giving an empty axiom for the entity "the_mode" defined at spark-text_io.ads:202, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__create__2__the_mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "the_name" defined at spark-text_io.ads:203, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__create__2__the_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function the_name 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "the_name" defined at spark-text_io.ads:203, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__create__2__the_name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "the_form" defined at spark-text_io.ads:204, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__create__2__the_form
 use import "_gnatprove_standard".Main
 use        Standard__string

 function the_form 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "the_form" defined at spark-text_io.ads:204, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__create__2__the_form__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "the_mode" defined at spark-text_io.ads:223, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__open__2__the_mode
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_mode

 function the_mode "GP_CE_Relevant" 
   :Spark__text_io__file_mode.__split

end

(* Module giving an empty axiom for the entity "the_mode" defined at spark-text_io.ads:223, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__open__2__the_mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "the_name" defined at spark-text_io.ads:224, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__open__2__the_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function the_name 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "the_name" defined at spark-text_io.ads:224, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__open__2__the_name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "the_form" defined at spark-text_io.ads:225, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__open__2__the_form
 use import "_gnatprove_standard".Main
 use        Standard__string

 function the_form 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "the_form" defined at spark-text_io.ads:225, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__open__2__the_form__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "the_mode" defined at spark-text_io.ads:255, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__reset__2__the_mode
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_mode

 function the_mode "GP_CE_Relevant" 
   :Spark__text_io__file_mode.__split

end

(* Module giving an empty axiom for the entity "the_mode" defined at spark-text_io.ads:255, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__reset__2__the_mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at spark-text_io.ads:317, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__set_line_length__2__to
 use import "_gnatprove_standard".Main
 use        Spark__text_io__count

 function to__ "GP_CE_Relevant" 
   :Spark__text_io__count.__split

end

(* Module giving an empty axiom for the entity "to" defined at spark-text_io.ads:317, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__set_line_length__2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at spark-text_io.ads:329, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__set_line_length__3__to
 use import "_gnatprove_standard".Main
 use        Spark__text_io__count

 function to__ "GP_CE_Relevant" 
   :Spark__text_io__count.__split

end

(* Module giving an empty axiom for the entity "to" defined at spark-text_io.ads:329, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__set_line_length__3__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at spark-text_io.ads:343, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__set_page_length__2__to
 use import "_gnatprove_standard".Main
 use        Spark__text_io__count

 function to__ "GP_CE_Relevant" 
   :Spark__text_io__count.__split

end

(* Module giving an empty axiom for the entity "to" defined at spark-text_io.ads:343, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__set_page_length__2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at spark-text_io.ads:354, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__set_page_length__3__to
 use import "_gnatprove_standard".Main
 use        Spark__text_io__count

 function to__ "GP_CE_Relevant" 
   :Spark__text_io__count.__split

end

(* Module giving an empty axiom for the entity "to" defined at spark-text_io.ads:354, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__set_page_length__3__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at spark-text_io.ads:366, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__line_length__2__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:366, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__line_length__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "line_length__2" defined at spark-text_io.ads:366, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__line_length__2
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count

 function line_length__2 
   (file : Spark__text_io__file_type.file_type)  :Spark__text_io__count.__split

end

(* Module for defining the constant "file" defined at spark-text_io.ads:373, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__page_length__2__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:373, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__page_length__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "page_length__2" defined at spark-text_io.ads:373, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__page_length__2
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count

 function page_length__2 
   (file : Spark__text_io__file_type.file_type)  :Spark__text_io__count.__split

end

(* Module for defining the constant "spacing" defined at spark-text_io.ads:384, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__new_line__2__spacing
 use import "_gnatprove_standard".Main
 use        Spark__text_io__positive_count

 function spacing "GP_CE_Relevant" 
   :Spark__text_io__positive_count.__split

end

(* Module giving an empty axiom for the entity "spacing" defined at spark-text_io.ads:384, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__new_line__2__spacing__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at spark-text_io.ads:395, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__new_line__3__spacing
 use import "_gnatprove_standard".Main
 use        Spark__text_io__positive_count

 function spacing "GP_CE_Relevant" 
   :Spark__text_io__positive_count.__split

end

(* Module giving an empty axiom for the entity "spacing" defined at spark-text_io.ads:395, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__new_line__3__spacing__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at spark-text_io.ads:411, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__skip_line__2__spacing
 use import "_gnatprove_standard".Main
 use        Spark__text_io__positive_count

 function spacing "GP_CE_Relevant" 
   :Spark__text_io__positive_count.__split

end

(* Module giving an empty axiom for the entity "spacing" defined at spark-text_io.ads:411, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__skip_line__2__spacing__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at spark-text_io.ads:486, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__end_of_file__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:486, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__end_of_file__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "end_of_file" defined at spark-text_io.ads:486, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__end_of_file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function end_of_file 
   (file : Spark__text_io__file_type.file_type)  :bool

end

(* Module for defining the constant "spacing" defined at spark-text_io.ads:420, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__skip_line__3__spacing
 use import "_gnatprove_standard".Main
 use        Spark__text_io__positive_count

 function spacing "GP_CE_Relevant" 
   :Spark__text_io__positive_count.__split

end

(* Module giving an empty axiom for the entity "spacing" defined at spark-text_io.ads:420, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__skip_line__3__spacing__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at spark-text_io.ads:429, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__end_of_line__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:429, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__end_of_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "end_of_line" defined at spark-text_io.ads:429, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__end_of_line
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function end_of_line 
   (file : Spark__text_io__file_type.file_type)  :bool

end

(* Module for defining the constant "file" defined at spark-text_io.ads:479, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__end_of_page__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:479, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__end_of_page__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "end_of_page" defined at spark-text_io.ads:479, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__end_of_page
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function end_of_page 
   (file : Spark__text_io__file_type.file_type)  :bool

end

(* Module for defining the constant "to" defined at spark-text_io.ads:495, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__set_col__2__to
 use import "_gnatprove_standard".Main
 use        Spark__text_io__positive_count

 function to__ "GP_CE_Relevant" 
   :Spark__text_io__positive_count.__split

end

(* Module giving an empty axiom for the entity "to" defined at spark-text_io.ads:495, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__set_col__2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at spark-text_io.ads:511, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__set_col__3__to
 use import "_gnatprove_standard".Main
 use        Spark__text_io__positive_count

 function to__ "GP_CE_Relevant" 
   :Spark__text_io__positive_count.__split

end

(* Module giving an empty axiom for the entity "to" defined at spark-text_io.ads:511, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__set_col__3__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at spark-text_io.ads:529, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__set_line__2__to
 use import "_gnatprove_standard".Main
 use        Spark__text_io__positive_count

 function to__ "GP_CE_Relevant" 
   :Spark__text_io__positive_count.__split

end

(* Module giving an empty axiom for the entity "to" defined at spark-text_io.ads:529, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__set_line__2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at spark-text_io.ads:545, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__set_line__3__to
 use import "_gnatprove_standard".Main
 use        Spark__text_io__positive_count

 function to__ "GP_CE_Relevant" 
   :Spark__text_io__positive_count.__split

end

(* Module giving an empty axiom for the entity "to" defined at spark-text_io.ads:545, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__set_line__3__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at spark-text_io.ads:562, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__col__3__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:562, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__col__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "col__3" defined at spark-text_io.ads:562, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__col__3
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count_result

 function col__3 
   (file : Spark__text_io__file_type.file_type)  :Spark__text_io__count_result.count_result

end

(* Module for defining the constant "file" defined at spark-text_io.ads:569, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__line__3__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:569, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__line__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "line__3" defined at spark-text_io.ads:569, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__line__3
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count_result

 function line__3 
   (file : Spark__text_io__file_type.file_type)  :Spark__text_io__count_result.count_result

end

(* Module for defining the constant "file" defined at spark-text_io.ads:576, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__page__3__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function file 
   :Spark__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:576, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__page__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "page__3" defined at spark-text_io.ads:576, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__page__3
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count_result

 function page__3 
   (file : Spark__text_io__file_type.file_type)  :Spark__text_io__count_result.count_result

end

(* Module for defining the constant "item" defined at spark-text_io.ads:609, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__put__item
 use import "_gnatprove_standard".Main
 use        Standard__character

 function item "GP_CE_Relevant" 
   :Standard__character.__split

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:609, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__put__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at spark-text_io.ads:622, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__put__2__item
 use import "_gnatprove_standard".Main
 use        Standard__character

 function item "GP_CE_Relevant" 
   :Standard__character.__split

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:622, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__put__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at spark-text_io.ads:719, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__put__3__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:719, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__put__3__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at spark-text_io.ads:732, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__put__4__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:732, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__put__4__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at spark-text_io.ads:779, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__put_line__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:779, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__put_line__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at spark-text_io.ads:793, created in Gnat2Why.Decls.Translate_Constant *)
module Spark__text_io__put_line__2__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:793, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__put_line__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at as_io_wrapper.ads:46, created in Gnat2Why.Decls.Translate_Constant *)
module As_io_wrapper__as_put__item
 use import "_gnatprove_standard".Main
 use        Standard__character

 function item "GP_CE_Relevant" 
   :Standard__character.__split

end

(* Module giving an empty axiom for the entity "item" defined at as_io_wrapper.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module As_io_wrapper__as_put__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at as_io_wrapper.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module As_io_wrapper__as_put__2__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "item" defined at as_io_wrapper.ads:60, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module As_io_wrapper__as_put__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at as_io_wrapper.ads:84, created in Gnat2Why.Decls.Translate_Constant *)
module As_io_wrapper__as_put_line__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "item" defined at as_io_wrapper.ads:84, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module As_io_wrapper__as_put_line__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "prompt_try_again_when_not_integer" defined at as_io_wrapper.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module As_io_wrapper__as_get__2__prompt_try_again_when_not_integer
 use import "_gnatprove_standard".Main
 use        Standard__string

 function prompt_try_again_when_not_integer 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "prompt_try_again_when_not_integer" defined at as_io_wrapper.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module As_io_wrapper__as_get__2__prompt_try_again_when_not_integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at as_io_wrapper.ads:115, created in Gnat2Why.Decls.Translate_Constant *)
module As_io_wrapper__as_put__3__item
 use import "_gnatprove_standard".Main
 use        Standard__integer

 function item "GP_CE_Relevant" 
   :Standard__integer.__split

end

(* Module giving an empty axiom for the entity "item" defined at as_io_wrapper.ads:115, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module As_io_wrapper__as_put__3__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at as_io_wrapper.ads:120, created in Gnat2Why.Decls.Translate_Constant *)
module As_io_wrapper__as_put_line__3__item
 use import "_gnatprove_standard".Main
 use        Standard__integer

 function item "GP_CE_Relevant" 
   :Standard__integer.__split

end

(* Module giving an empty axiom for the entity "item" defined at as_io_wrapper.ads:120, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module As_io_wrapper__as_put_line__3__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-tiinau.ads:42, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__get_int__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-tiinau.ads:42, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__get_int__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "width" defined at a-tiinau.ads:44, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__get_int__width
 use import "_gnatprove_standard".Main
 use        Ada__text_io__field

 function width "GP_CE_Relevant" 
   :Ada__text_io__field.__split

end

(* Module giving an empty axiom for the entity "width" defined at a-tiinau.ads:44, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__get_int__width__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-tiinau.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__get_lli__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-tiinau.ads:47, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__get_lli__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "width" defined at a-tiinau.ads:49, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__get_lli__width
 use import "_gnatprove_standard".Main
 use        Ada__text_io__field

 function width "GP_CE_Relevant" 
   :Ada__text_io__field.__split

end

(* Module giving an empty axiom for the entity "width" defined at a-tiinau.ads:49, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__get_lli__width__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-tiinau.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__put_int__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-tiinau.ads:52, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__put_int__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-tiinau.ads:53, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__put_int__item
 use import "_gnatprove_standard".Main
 use        Standard__integer

 function item "GP_CE_Relevant" 
   :Standard__integer.__split

end

(* Module giving an empty axiom for the entity "item" defined at a-tiinau.ads:53, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__put_int__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "width" defined at a-tiinau.ads:54, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__put_int__width
 use import "_gnatprove_standard".Main
 use        Ada__text_io__field

 function width "GP_CE_Relevant" 
   :Ada__text_io__field.__split

end

(* Module giving an empty axiom for the entity "width" defined at a-tiinau.ads:54, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__put_int__width__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "base" defined at a-tiinau.ads:55, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__put_int__base
 use import "_gnatprove_standard".Main
 use        Ada__text_io__number_base

 function base "GP_CE_Relevant" 
   :Ada__text_io__number_base.__split

end

(* Module giving an empty axiom for the entity "base" defined at a-tiinau.ads:55, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__put_int__base__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-tiinau.ads:58, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__put_lli__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file 
   :Ada__text_io__file_type.file_type

end

(* Module giving an empty axiom for the entity "file" defined at a-tiinau.ads:58, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__put_lli__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-tiinau.ads:59, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__put_lli__item
 use import "_gnatprove_standard".Main
 use        Standard__long_long_integer

 function item "GP_CE_Relevant" 
   :Standard__long_long_integer.__split

end

(* Module giving an empty axiom for the entity "item" defined at a-tiinau.ads:59, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__put_lli__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "width" defined at a-tiinau.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__put_lli__width
 use import "_gnatprove_standard".Main
 use        Ada__text_io__field

 function width "GP_CE_Relevant" 
   :Ada__text_io__field.__split

end

(* Module giving an empty axiom for the entity "width" defined at a-tiinau.ads:60, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__put_lli__width__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "base" defined at a-tiinau.ads:61, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__put_lli__base
 use import "_gnatprove_standard".Main
 use        Ada__text_io__number_base

 function base "GP_CE_Relevant" 
   :Ada__text_io__number_base.__split

end

(* Module giving an empty axiom for the entity "base" defined at a-tiinau.ads:61, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__put_lli__base__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "from" defined at a-tiinau.ads:64, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__gets_int__from
 use import "_gnatprove_standard".Main
 use        Standard__string

 function from 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "from" defined at a-tiinau.ads:64, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__gets_int__from__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "from" defined at a-tiinau.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__gets_lli__from
 use import "_gnatprove_standard".Main
 use        Standard__string

 function from 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "from" defined at a-tiinau.ads:69, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__gets_lli__from__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-tiinau.ads:75, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__puts_int__item
 use import "_gnatprove_standard".Main
 use        Standard__integer

 function item "GP_CE_Relevant" 
   :Standard__integer.__split

end

(* Module giving an empty axiom for the entity "item" defined at a-tiinau.ads:75, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__puts_int__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "base" defined at a-tiinau.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__puts_int__base
 use import "_gnatprove_standard".Main
 use        Ada__text_io__number_base

 function base "GP_CE_Relevant" 
   :Ada__text_io__number_base.__split

end

(* Module giving an empty axiom for the entity "base" defined at a-tiinau.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__puts_int__base__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-tiinau.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__puts_lli__item
 use import "_gnatprove_standard".Main
 use        Standard__long_long_integer

 function item "GP_CE_Relevant" 
   :Standard__long_long_integer.__split

end

(* Module giving an empty axiom for the entity "item" defined at a-tiinau.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__puts_lli__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "base" defined at a-tiinau.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__integer_aux__puts_lli__base
 use import "_gnatprove_standard".Main
 use        Ada__text_io__number_base

 function base "GP_CE_Relevant" 
   :Ada__text_io__number_base.__split

end

(* Module giving an empty axiom for the entity "base" defined at a-tiinau.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__puts_lli__base__axiom
 use import "_gnatprove_standard".Main


end
(* Module for defining a ref holding the value of variable "stream" defined at a-stream.ads:58, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__read__stream
 use import "_gnatprove_standard".Main
 use        Ada__streams__root_stream_type

 val stream__split_fields  : ref Ada__streams__root_stream_type.__split_fields
 
 function stream__attr__tag 
   :int
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "stream" defined at a-stream.ads:58, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__read__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-stream.ads:59, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__read__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__Tstream_element_offsetB
 use        Ada__streams__stream_element_array

 val item  : ref Ada__streams__stream_element_array.__split
 
 function item__first 
   :Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function item__last 
   :Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-stream.ads:59, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__read__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at a-stream.ads:60, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__read__last
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_offset

 val last "GP_CE_Relevant"  : ref Ada__streams__stream_element_offset.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "last" defined at a-stream.ads:60, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__read__last__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "stream" defined at a-stream.ads:64, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__write__stream
 use import "_gnatprove_standard".Main
 use        Ada__streams__root_stream_type

 val stream__split_fields  : ref Ada__streams__root_stream_type.__split_fields
 
 function stream__attr__tag 
   :int
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "stream" defined at a-stream.ads:64, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__write__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "v" defined at a-stream.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__read_sea__v
 use import "_gnatprove_standard".Main
 use        Ada__streams__Tstream_element_offsetB
 use        Ada__streams__stream_element_array

 val v  : ref Ada__streams__stream_element_array.__split
 
 function v__first 
   :Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function v__last 
   :Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "v" defined at a-stream.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__read_sea__v__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "v" defined at a-stream.ads:84, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__stream_element_arraySR__v
 use import "_gnatprove_standard".Main
 use        Ada__streams__Tstream_element_offsetB
 use        Ada__streams__stream_element_array

 val v  : ref Ada__streams__stream_element_array.__split
 
 function v__first 
   :Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function v__last 
   :Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "v" defined at a-stream.ads:84, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__stream_element_arraySR__v__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:87, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__create__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file  : ref Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__create__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:93, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__open__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file  : ref Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:93, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__open__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:98, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__close__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file  : ref Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__close__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:99, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__delete__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file  : ref Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__delete__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:100, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__reset__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file  : ref Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__reset__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:101, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__reset__2__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file  : ref Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:101, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__reset__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:205, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get__item
 use import "_gnatprove_standard".Main
 use        Standard__character

 val item "GP_CE_Relevant"  : ref Standard__character.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:205, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:206, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get__2__item
 use import "_gnatprove_standard".Main
 use        Standard__character

 val item "GP_CE_Relevant"  : ref Standard__character.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:206, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:212, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__look_ahead__item
 use import "_gnatprove_standard".Main
 use        Standard__character

 val item "GP_CE_Relevant"  : ref Standard__character.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:212, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "end_of_line" defined at a-textio.ads:213, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__look_ahead__end_of_line
 use import "_gnatprove_standard".Main

 val end_of_line "GP_CE_Relevant"  : ref bool
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "end_of_line" defined at a-textio.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__end_of_line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:216, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__look_ahead__2__item
 use import "_gnatprove_standard".Main
 use        Standard__character

 val item "GP_CE_Relevant"  : ref Standard__character.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:216, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "end_of_line" defined at a-textio.ads:217, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__look_ahead__2__end_of_line
 use import "_gnatprove_standard".Main

 val end_of_line "GP_CE_Relevant"  : ref bool
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "end_of_line" defined at a-textio.ads:217, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__2__end_of_line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:221, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__item
 use import "_gnatprove_standard".Main
 use        Standard__character

 val item "GP_CE_Relevant"  : ref Standard__character.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:221, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:224, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__2__item
 use import "_gnatprove_standard".Main
 use        Standard__character

 val item "GP_CE_Relevant"  : ref Standard__character.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:224, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:228, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__3__item
 use import "_gnatprove_standard".Main
 use        Standard__character

 val item "GP_CE_Relevant"  : ref Standard__character.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:228, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__3__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "available" defined at a-textio.ads:229, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__3__available
 use import "_gnatprove_standard".Main

 val available "GP_CE_Relevant"  : ref bool
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "available" defined at a-textio.ads:229, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__3__available__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:232, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__4__item
 use import "_gnatprove_standard".Main
 use        Standard__character

 val item "GP_CE_Relevant"  : ref Standard__character.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:232, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__4__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "available" defined at a-textio.ads:233, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__4__available
 use import "_gnatprove_standard".Main

 val available "GP_CE_Relevant"  : ref bool
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "available" defined at a-textio.ads:233, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__4__available__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:239, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get__3__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer

 val item  : ref Standard__string.__split
 
 function item__first 
   :Standard__integer.integer
 
 function item__last 
   :Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:239, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__3__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:240, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get__4__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer

 val item  : ref Standard__string.__split
 
 function item__first 
   :Standard__integer.integer
 
 function item__last 
   :Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:240, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__4__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:246, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_line__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer

 val item  : ref Standard__string.__split
 
 function item__first 
   :Standard__integer.integer
 
 function item__last 
   :Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:246, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at a-textio.ads:247, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_line__last
 use import "_gnatprove_standard".Main
 use        Standard__natural

 val last "GP_CE_Relevant"  : ref Standard__natural.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "last" defined at a-textio.ads:247, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__last__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:250, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_line__2__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer

 val item  : ref Standard__string.__split
 
 function item__first 
   :Standard__integer.integer
 
 function item__last 
   :Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:250, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at a-textio.ads:251, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_line__2__last
 use import "_gnatprove_standard".Main
 use        Standard__natural

 val last "GP_CE_Relevant"  : ref Standard__natural.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "last" defined at a-textio.ads:251, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__2__last__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "default_wcem" defined at a-textio.ads:362, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__default_wcem
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method

 val default_wcem "GP_CE_Relevant"  : ref System__wch_con__wc_encoding_method.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "default_wcem" defined at a-textio.ads:362, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__default_wcem__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:432, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__read__2__file
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val file  : ref Main.__private
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:432, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__read__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:433, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__read__2__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__Tstream_element_offsetB
 use        Ada__streams__stream_element_array

 val item  : ref Ada__streams__stream_element_array.__split
 
 function item__first 
   :Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function item__last 
   :Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:433, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__read__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at a-textio.ads:434, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__read__2__last
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_offset

 val last "GP_CE_Relevant"  : ref Ada__streams__stream_element_offset.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "last" defined at a-textio.ads:434, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__read__2__last__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:438, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__write__2__file
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val file  : ref Main.__private
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:438, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__write__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_in_afcb" defined at a-textio.ads:446, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_in_afcb
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val standard_in_afcb  : ref Main.__private
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "standard_in_afcb" defined at a-textio.ads:446, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_in_afcb__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_out_afcb" defined at a-textio.ads:447, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_out_afcb
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val standard_out_afcb  : ref Main.__private
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "standard_out_afcb" defined at a-textio.ads:447, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_out_afcb__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_err_afcb" defined at a-textio.ads:448, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_err_afcb
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val standard_err_afcb  : ref Main.__private
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "standard_err_afcb" defined at a-textio.ads:448, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_err_afcb__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_in" defined at a-textio.ads:450, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_in
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val standard_in  : ref Main.__private
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "standard_in" defined at a-textio.ads:450, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_in__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_out" defined at a-textio.ads:451, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_out
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val standard_out  : ref Main.__private
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "standard_out" defined at a-textio.ads:451, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_out__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_err" defined at a-textio.ads:452, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_err
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val standard_err  : ref Main.__private
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "standard_err" defined at a-textio.ads:452, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_err__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "current_in" defined at a-textio.ads:455, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__current_in
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val current_in  : ref Main.__private
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "current_in" defined at a-textio.ads:455, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__current_in__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "current_out" defined at a-textio.ads:456, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__current_out
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val current_out  : ref Main.__private
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "current_out" defined at a-textio.ads:456, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__current_out__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "current_err" defined at a-textio.ads:457, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__current_err
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val current_err  : ref Main.__private
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "current_err" defined at a-textio.ads:457, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__current_err__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_input" defined at spark-text_io.ads:100, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val standard_input__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "standard_input" defined at spark-text_io.ads:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__standard_input__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_output" defined at spark-text_io.ads:101, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val standard_output__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "standard_output" defined at spark-text_io.ads:101, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__standard_output__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_error" defined at spark-text_io.ads:102, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__standard_error
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val standard_error__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "standard_error" defined at spark-text_io.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__standard_error__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "the_file" defined at spark-text_io.ads:201, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__create__2__the_file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val the_file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "the_file" defined at spark-text_io.ads:201, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__create__2__the_file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "the_file" defined at spark-text_io.ads:222, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__open__2__the_file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val the_file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "the_file" defined at spark-text_io.ads:222, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__open__2__the_file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:241, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__close__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:241, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__close__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:248, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__delete__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:248, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__delete__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:255, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__reset__2__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:255, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__reset__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:267, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__reset__3__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:267, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__reset__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:288, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__flush__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:288, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__flush__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:317, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__set_line_length__2__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:317, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__set_line_length__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:343, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__set_page_length__2__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:343, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__set_page_length__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:383, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__new_line__2__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:383, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__new_line__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:410, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__skip_line__2__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:410, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__skip_line__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:437, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__new_page__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:437, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__new_page__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:462, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__skip_page__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:462, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__skip_page__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:495, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__set_col__2__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:495, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__set_col__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:529, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__set_line__2__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:529, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__set_line__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:586, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:586, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at spark-text_io.ads:586, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get__item
 use import "_gnatprove_standard".Main
 use        Spark__text_io__character_result

 val item__split_fields  : ref Spark__text_io__character_result.__split_fields
 
 val item__split_discrs  : ref Spark__text_io__character_result.__split_discrs
 
 function item__attr__constrained 
   :bool
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:586, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at spark-text_io.ads:595, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get__2__item
 use import "_gnatprove_standard".Main
 use        Spark__text_io__character_result

 val item__split_fields  : ref Spark__text_io__character_result.__split_fields
 
 val item__split_discrs  : ref Spark__text_io__character_result.__split_discrs
 
 function item__attr__constrained 
   :bool
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:595, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:609, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__put__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:609, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__put__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:637, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__look_ahead__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:637, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__look_ahead__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at spark-text_io.ads:638, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__look_ahead__item
 use import "_gnatprove_standard".Main
 use        Spark__text_io__character_result

 val item__split_fields  : ref Spark__text_io__character_result.__split_fields
 
 val item__split_discrs  : ref Spark__text_io__character_result.__split_discrs
 
 function item__attr__constrained 
   :bool
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:638, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__look_ahead__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "end_of_line" defined at spark-text_io.ads:639, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__look_ahead__end_of_line
 use import "_gnatprove_standard".Main

 val end_of_line "GP_CE_Relevant"  : ref bool
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "end_of_line" defined at spark-text_io.ads:639, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__look_ahead__end_of_line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at spark-text_io.ads:647, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__look_ahead__2__item
 use import "_gnatprove_standard".Main
 use        Spark__text_io__character_result

 val item__split_fields  : ref Spark__text_io__character_result.__split_fields
 
 val item__split_discrs  : ref Spark__text_io__character_result.__split_discrs
 
 function item__attr__constrained 
   :bool
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:647, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__look_ahead__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "end_of_line" defined at spark-text_io.ads:648, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__look_ahead__2__end_of_line
 use import "_gnatprove_standard".Main

 val end_of_line "GP_CE_Relevant"  : ref bool
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "end_of_line" defined at spark-text_io.ads:648, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__look_ahead__2__end_of_line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:655, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get_immediate__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:655, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get_immediate__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at spark-text_io.ads:656, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get_immediate__item
 use import "_gnatprove_standard".Main
 use        Spark__text_io__character_result

 val item__split_fields  : ref Spark__text_io__character_result.__split_fields
 
 val item__split_discrs  : ref Spark__text_io__character_result.__split_discrs
 
 function item__attr__constrained 
   :bool
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:656, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get_immediate__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at spark-text_io.ads:664, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get_immediate__2__item
 use import "_gnatprove_standard".Main
 use        Spark__text_io__character_result

 val item__split_fields  : ref Spark__text_io__character_result.__split_fields
 
 val item__split_discrs  : ref Spark__text_io__character_result.__split_discrs
 
 function item__attr__constrained 
   :bool
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:664, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get_immediate__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:673, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get_immediate__3__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:673, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get_immediate__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at spark-text_io.ads:674, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get_immediate__3__item
 use import "_gnatprove_standard".Main
 use        Spark__text_io__immediate_result

 val item__split_fields  : ref Spark__text_io__immediate_result.__split_fields
 
 val item__split_discrs  : ref Spark__text_io__immediate_result.__split_discrs
 
 function item__attr__constrained 
   :bool
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:674, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get_immediate__3__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "available" defined at spark-text_io.ads:675, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get_immediate__3__available
 use import "_gnatprove_standard".Main

 val available "GP_CE_Relevant"  : ref bool
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "available" defined at spark-text_io.ads:675, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get_immediate__3__available__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at spark-text_io.ads:683, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get_immediate__4__item
 use import "_gnatprove_standard".Main
 use        Spark__text_io__immediate_result

 val item__split_fields  : ref Spark__text_io__immediate_result.__split_fields
 
 val item__split_discrs  : ref Spark__text_io__immediate_result.__split_discrs
 
 function item__attr__constrained 
   :bool
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:683, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get_immediate__4__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "available" defined at spark-text_io.ads:684, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get_immediate__4__available
 use import "_gnatprove_standard".Main

 val available "GP_CE_Relevant"  : ref bool
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "available" defined at spark-text_io.ads:684, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get_immediate__4__available__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:696, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get__3__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:696, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at spark-text_io.ads:697, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get__3__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer

 val item  : ref Standard__string.__split
 
 function item__first 
   :Standard__integer.integer
 
 function item__last 
   :Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:697, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get__3__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at spark-text_io.ads:708, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get__4__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer

 val item  : ref Standard__string.__split
 
 function item__first 
   :Standard__integer.integer
 
 function item__last 
   :Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:708, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get__4__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:719, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__put__3__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:719, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__put__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:751, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get_line__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:751, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at spark-text_io.ads:752, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get_line__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer

 val item  : ref Standard__string.__split
 
 function item__first 
   :Standard__integer.integer
 
 function item__last 
   :Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:752, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get_line__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at spark-text_io.ads:753, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get_line__last
 use import "_gnatprove_standard".Main
 use        Standard__natural

 val last "GP_CE_Relevant"  : ref Standard__natural.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "last" defined at spark-text_io.ads:753, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get_line__last__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at spark-text_io.ads:767, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get_line__2__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer

 val item  : ref Standard__string.__split
 
 function item__first 
   :Standard__integer.integer
 
 function item__last 
   :Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at spark-text_io.ads:767, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get_line__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at spark-text_io.ads:767, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__get_line__2__last
 use import "_gnatprove_standard".Main
 use        Standard__natural

 val last "GP_CE_Relevant"  : ref Standard__natural.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "last" defined at spark-text_io.ads:767, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__get_line__2__last__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at spark-text_io.ads:779, created in Gnat2Why.Decls.Translate_Variable *)
module Spark__text_io__put_line__file
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val file__split_fields  : ref Spark__text_io__file_type.__split_fields
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "file" defined at spark-text_io.ads:779, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Spark__text_io__put_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at as_io_wrapper.ads:54, created in Gnat2Why.Decls.Translate_Variable *)
module As_io_wrapper__as_get__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer

 val item  : ref Standard__string.__split
 
 function item__first 
   :Standard__integer.integer
 
 function item__last 
   :Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at as_io_wrapper.ads:54, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module As_io_wrapper__as_get__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at as_io_wrapper.ads:77, created in Gnat2Why.Decls.Translate_Variable *)
module As_io_wrapper__as_get_line__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer

 val item  : ref Standard__string.__split
 
 function item__first 
   :Standard__integer.integer
 
 function item__last 
   :Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at as_io_wrapper.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module As_io_wrapper__as_get_line__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at as_io_wrapper.ads:77, created in Gnat2Why.Decls.Translate_Variable *)
module As_io_wrapper__as_get_line__last
 use import "_gnatprove_standard".Main
 use        Standard__natural

 val last "GP_CE_Relevant"  : ref Standard__natural.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "last" defined at as_io_wrapper.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module As_io_wrapper__as_get_line__last__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at as_io_wrapper.ads:107, created in Gnat2Why.Decls.Translate_Variable *)
module As_io_wrapper__as_get__2__item
 use import "_gnatprove_standard".Main
 use        Standard__integer

 val item "GP_CE_Relevant"  : ref Standard__integer.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at as_io_wrapper.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module As_io_wrapper__as_get__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-tiinau.ads:43, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__integer_aux__get_int__item
 use import "_gnatprove_standard".Main
 use        Standard__integer

 val item "GP_CE_Relevant"  : ref Standard__integer.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-tiinau.ads:43, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__get_int__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-tiinau.ads:48, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__integer_aux__get_lli__item
 use import "_gnatprove_standard".Main
 use        Standard__long_long_integer

 val item "GP_CE_Relevant"  : ref Standard__long_long_integer.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-tiinau.ads:48, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__get_lli__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-tiinau.ads:65, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__integer_aux__gets_int__item
 use import "_gnatprove_standard".Main
 use        Standard__integer

 val item "GP_CE_Relevant"  : ref Standard__integer.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-tiinau.ads:65, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__gets_int__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at a-tiinau.ads:66, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__integer_aux__gets_int__last
 use import "_gnatprove_standard".Main
 use        Standard__positive

 val last "GP_CE_Relevant"  : ref Standard__positive.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "last" defined at a-tiinau.ads:66, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__gets_int__last__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-tiinau.ads:70, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__integer_aux__gets_lli__item
 use import "_gnatprove_standard".Main
 use        Standard__long_long_integer

 val item "GP_CE_Relevant"  : ref Standard__long_long_integer.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "item" defined at a-tiinau.ads:70, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__gets_lli__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at a-tiinau.ads:71, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__integer_aux__gets_lli__last
 use import "_gnatprove_standard".Main
 use        Standard__positive

 val last "GP_CE_Relevant"  : ref Standard__positive.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "last" defined at a-tiinau.ads:71, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__gets_lli__last__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "to" defined at a-tiinau.ads:74, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__integer_aux__puts_int__to
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer

 val to__  : ref Standard__string.__split
 
 function to____first 
   :Standard__integer.integer
 
 function to____last 
   :Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "to" defined at a-tiinau.ads:74, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__puts_int__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "to" defined at a-tiinau.ads:79, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__integer_aux__puts_lli__to
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer

 val to__  : ref Standard__string.__split
 
 function to____first 
   :Standard__integer.integer
 
 function to____last 
   :Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "to" defined at a-tiinau.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__integer_aux__puts_lli__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "as_io_wrapper__integer_io__ada_integer_io__get__3__item," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__integer_io__ada_integer_io__get__3__item
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val item  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__integer_io__ada_integer_io__get__3__last," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__integer_io__ada_integer_io__get__3__last
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val last  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__integer_io__ada_integer_io__put__3__to," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__integer_io__ada_integer_io__put__3__to
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val to__  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__integer_io__get__3__int," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__integer_io__get__3__int
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val int__  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__integer_io__get__3__last," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__integer_io__get__3__last
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val last  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__integer_io__get__3__item," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__integer_io__get__3__item
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val item  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__as_get__2__input_by_user," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__as_get__2__input_by_user
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val input_by_user  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__as_get__2__length_input," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__as_get__2__length_input
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val length_input  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__as_get__2__converted_result," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__as_get__2__converted_result
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val converted_result  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__as_get__2__length_input_used," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__as_get__2__length_input_used
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val length_input_used  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__integer_io__get__item," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__integer_io__get__item
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val item  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__integer_io__get__int," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__integer_io__get__int
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val int__  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__integer_io__get__file," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__integer_io__get__file
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val file  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__integer_io__get__2__int," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__integer_io__get__2__int
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val int__  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__integer_io__get__2__item," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__integer_io__get__2__item
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val item  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__integer_io__put__file," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__integer_io__put__file
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val file  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__integer_io__put__3__to," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__integer_io__put__3__to
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val to__  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__integer_io__ada_integer_io__default_width," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__integer_io__ada_integer_io__default_width
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val default_width  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__integer_io__ada_integer_io__default_base," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__integer_io__ada_integer_io__default_base
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val default_base  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__integer_io__ada_integer_io__get__2__item," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__integer_io__ada_integer_io__get__2__item
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val item  : ref Main.__private

end

(* Module declaring the external object "spark__text_io__get__ch," created in Gnat2Why.Decls.Translate_External_Object *)
module Spark__text_io__get__ch
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ch  : ref Main.__private

end

(* Module declaring the external object "spark__text_io__get__2__ch," created in Gnat2Why.Decls.Translate_External_Object *)
module Spark__text_io__get__2__ch
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ch  : ref Main.__private

end

(* Module declaring the external object "spark__text_io__look_ahead__ch," created in Gnat2Why.Decls.Translate_External_Object *)
module Spark__text_io__look_ahead__ch
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ch  : ref Main.__private

end

(* Module declaring the external object "spark__text_io__look_ahead__2__ch," created in Gnat2Why.Decls.Translate_External_Object *)
module Spark__text_io__look_ahead__2__ch
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ch  : ref Main.__private

end

(* Module declaring the external object "spark__text_io__get_immediate__ch," created in Gnat2Why.Decls.Translate_External_Object *)
module Spark__text_io__get_immediate__ch
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ch  : ref Main.__private

end

(* Module declaring the external object "spark__text_io__get_immediate__2__ch," created in Gnat2Why.Decls.Translate_External_Object *)
module Spark__text_io__get_immediate__2__ch
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ch  : ref Main.__private

end

(* Module declaring the external object "spark__text_io__get_immediate__3__ch," created in Gnat2Why.Decls.Translate_External_Object *)
module Spark__text_io__get_immediate__3__ch
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ch  : ref Main.__private

end

(* Module declaring the external object "spark__text_io__get_immediate__4__ch," created in Gnat2Why.Decls.Translate_External_Object *)
module Spark__text_io__get_immediate__4__ch
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ch  : ref Main.__private

end

(* Module declaring the external object "as_io_wrapper__integer_io__ada_integer_io__get__item," created in Gnat2Why.Decls.Translate_External_Object *)
module As_io_wrapper__integer_io__ada_integer_io__get__item
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val item  : ref Main.__private

end
(* Module for possibly declaring a logic function for "read" defined at a-stream.ads:57, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__streams__read
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "write" defined at a-stream.ads:63, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__streams__write
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "min_int" defined at system.ads:51, created in Gnat2Why.Decls.Translate_Constant *)
module System__min_int
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer

 function min_int "GP_CE_Relevant" 
   :Standard__universal_integer.__split

end

(* Module for defining the constant "max_int" defined at system.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_int
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer

 function max_int "GP_CE_Relevant" 
   :Standard__universal_integer.__split

end

(* Module for defining the constant "max_binary_modulus" defined at system.ads:54, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_binary_modulus
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer

 function max_binary_modulus "GP_CE_Relevant" 
   :Standard__universal_integer.__split

end

(* Module for defining the constant "max_nonbinary_modulus" defined at system.ads:55, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_nonbinary_modulus
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer

 function max_nonbinary_modulus "GP_CE_Relevant" 
   :Standard__universal_integer.__split

end

(* Module for defining the constant "max_base_digits" defined at system.ads:57, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_base_digits
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer

 function max_base_digits "GP_CE_Relevant" 
   :Standard__universal_integer.__split

end

(* Module for defining the constant "max_digits" defined at system.ads:58, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_digits
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer

 function max_digits "GP_CE_Relevant" 
   :Standard__universal_integer.__split

end

(* Module for defining the constant "max_mantissa" defined at system.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_mantissa
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer

 function max_mantissa "GP_CE_Relevant" 
   :Standard__universal_integer.__split

end

(* Module for defining the constant "fine_delta" defined at system.ads:61, created in Gnat2Why.Decls.Translate_Constant *)
module System__fine_delta
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 function fine_delta "GP_CE_Relevant" 
   :Standard__universal_real.universal_real

end

(* Module for defining the constant "tick" defined at system.ads:63, created in Gnat2Why.Decls.Translate_Constant *)
module System__tick
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 function tick "GP_CE_Relevant" 
   :Standard__universal_real.universal_real

end

(* Module for defining the constant "storage_unit" defined at system.ads:71, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_unit
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer

 function storage_unit "GP_CE_Relevant" 
   :Standard__universal_integer.__split

end

(* Module for defining the constant "memory_size" defined at system.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module System__memory_size
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer

 function memory_size "GP_CE_Relevant" 
   :Standard__universal_integer.__split

end

(* Module for defining the constant "long_bits" defined at s-parame.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__long_bits
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer

 function long_bits "GP_CE_Relevant" 
   :Standard__universal_integer.__split

end

(* Module for defining a value for string literal  defined at s-parame.ads:119, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___standard__as_io_wrapper_0
 use import "_gnatprove_standard".Main
 use        System__parameters__T1s

 function temp___standard__as_io_wrapper_0 
   :System__parameters__T1s.t1s

end

(* Module for defining the constant "max_attribute_count" defined at s-parame.ads:183, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__max_attribute_count
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer

 function max_attribute_count "GP_CE_Relevant" 
   :Standard__universal_integer.__split

end

(* Module for defining the constant "max_task_image_length" defined at s-parame.ads:199, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__max_task_image_length
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer

 function max_task_image_length "GP_CE_Relevant" 
   :Standard__universal_integer.__split

end

(* Module for defining the constant "default_exception_msg_max_length" defined at s-parame.ads:206, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__default_exception_msg_max_length
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer

 function default_exception_msg_max_length "GP_CE_Relevant" 
   :Standard__universal_integer.__split

end

(* Module for possibly declaring a logic function for "strncpy" defined at s-crtl.ads:88, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__strncpy
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "clearerr" defined at s-crtl.ads:98, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__clearerr
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "free" defined at s-crtl.ads:137, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__free
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "memcpy" defined at s-crtl.ads:177, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__memcpy
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "memmove" defined at s-crtl.ads:180, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__memmove
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "mktemp" defined at s-crtl.ads:183, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__mktemp
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "rewind" defined at s-crtl.ads:196, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__rewind
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "tmpnam" defined at s-crtl.ads:217, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__tmpnam
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_binary_mode" defined at i-cstrea.ads:223, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__set_binary_mode
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_text_mode" defined at i-cstrea.ads:224, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__set_text_mode
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_mode" defined at i-cstrea.ads:254, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__set_mode
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "full_name" defined at i-cstrea.ads:262, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__full_name
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of the aggregate at s-wchcon.ads:170, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__as_io_wrapper_1
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int
 use        System__wch_con__T4s

 function temp___standard__as_io_wrapper_1 
   (temp___standard__as_io_wrapper_3 : Standard__character.__split) (temp___standard__as_io_wrapper_4 : Standard__character.__split) (temp___standard__as_io_wrapper_5 : Standard__character.__split) (temp___standard__as_io_wrapper_6 : Standard__character.__split) (temp___standard__as_io_wrapper_7 : Standard__character.__split) (temp___standard__as_io_wrapper_8 : Standard__character.__split)  :System__wch_con__T4s.t4s
 
 axiom def_axiom :
  (forall temp___standard__as_io_wrapper_3 temp___standard__as_io_wrapper_4 temp___standard__as_io_wrapper_5 temp___standard__as_io_wrapper_6 temp___standard__as_io_wrapper_7 temp___standard__as_io_wrapper_8  : Standard__character.__split [(temp___standard__as_io_wrapper_1 temp___standard__as_io_wrapper_3 temp___standard__as_io_wrapper_4 temp___standard__as_io_wrapper_5 temp___standard__as_io_wrapper_6 temp___standard__as_io_wrapper_7 temp___standard__as_io_wrapper_8)].
   (let temp___standard__as_io_wrapper_2 = (temp___standard__as_io_wrapper_1 temp___standard__as_io_wrapper_3 temp___standard__as_io_wrapper_4 temp___standard__as_io_wrapper_5 temp___standard__as_io_wrapper_6 temp___standard__as_io_wrapper_7 temp___standard__as_io_wrapper_8) in (
    ( ( ( ( ( ((Array__Int.get temp___standard__as_io_wrapper_2 1) = (Standard__character.of_rep temp___standard__as_io_wrapper_3)) /\ ((Array__Int.get temp___standard__as_io_wrapper_2 2) = (Standard__character.of_rep temp___standard__as_io_wrapper_4)) ) /\ ((Array__Int.get temp___standard__as_io_wrapper_2 3) = (Standard__character.of_rep temp___standard__as_io_wrapper_5)) ) /\ ((Array__Int.get temp___standard__as_io_wrapper_2 4) = (Standard__character.of_rep temp___standard__as_io_wrapper_6)) ) /\ ((Array__Int.get temp___standard__as_io_wrapper_2 5) = (Standard__character.of_rep temp___standard__as_io_wrapper_7)) ) /\ ((Array__Int.get temp___standard__as_io_wrapper_2 6) = (Standard__character.of_rep temp___standard__as_io_wrapper_8)) )))
  )

end

(* Module for defining the constant "wc_longest_sequence" defined at s-wchcon.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wc_longest_sequence
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer

 function wc_longest_sequence "GP_CE_Relevant" 
   :Standard__universal_integer.__split

end

(* Module for defining the value of the aggregate at s-wchcon.ads:194, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__as_io_wrapper_10
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Array__Int
 use        System__wch_con__T8s

 function temp___standard__as_io_wrapper_10 
   (temp___standard__as_io_wrapper_12 : Standard__natural.__split) (temp___standard__as_io_wrapper_13 : Standard__natural.__split) (temp___standard__as_io_wrapper_14 : Standard__natural.__split) (temp___standard__as_io_wrapper_15 : Standard__natural.__split) (temp___standard__as_io_wrapper_16 : Standard__natural.__split) (temp___standard__as_io_wrapper_17 : Standard__natural.__split)  :System__wch_con__T8s.t8s
 
 axiom def_axiom :
  (forall temp___standard__as_io_wrapper_12 temp___standard__as_io_wrapper_13 temp___standard__as_io_wrapper_14 temp___standard__as_io_wrapper_15 temp___standard__as_io_wrapper_16 temp___standard__as_io_wrapper_17  : Standard__natural.__split [(temp___standard__as_io_wrapper_10 temp___standard__as_io_wrapper_12 temp___standard__as_io_wrapper_13 temp___standard__as_io_wrapper_14 temp___standard__as_io_wrapper_15 temp___standard__as_io_wrapper_16 temp___standard__as_io_wrapper_17)].
   (let temp___standard__as_io_wrapper_11 = (temp___standard__as_io_wrapper_10 temp___standard__as_io_wrapper_12 temp___standard__as_io_wrapper_13 temp___standard__as_io_wrapper_14 temp___standard__as_io_wrapper_15 temp___standard__as_io_wrapper_16 temp___standard__as_io_wrapper_17) in (
    ( ( ( ( ( ((Array__Int.get temp___standard__as_io_wrapper_11 1) = (Standard__natural.of_rep temp___standard__as_io_wrapper_12)) /\ ((Array__Int.get temp___standard__as_io_wrapper_11 2) = (Standard__natural.of_rep temp___standard__as_io_wrapper_13)) ) /\ ((Array__Int.get temp___standard__as_io_wrapper_11 3) = (Standard__natural.of_rep temp___standard__as_io_wrapper_14)) ) /\ ((Array__Int.get temp___standard__as_io_wrapper_11 4) = (Standard__natural.of_rep temp___standard__as_io_wrapper_15)) ) /\ ((Array__Int.get temp___standard__as_io_wrapper_11 5) = (Standard__natural.of_rep temp___standard__as_io_wrapper_16)) ) /\ ((Array__Int.get temp___standard__as_io_wrapper_11 6) = (Standard__natural.of_rep temp___standard__as_io_wrapper_17)) )))
  )

end

(* Module for possibly declaring a logic function for "create" defined at a-textio.ads:86, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__create
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "open" defined at a-textio.ads:92, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__open
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "close" defined at a-textio.ads:98, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__close
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete" defined at a-textio.ads:99, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__delete
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reset" defined at a-textio.ads:100, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__reset
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reset__2" defined at a-textio.ads:101, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__reset__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_input" defined at a-textio.ads:113, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_input
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_output" defined at a-textio.ads:114, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_output
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_error" defined at a-textio.ads:115, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_error
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "flush" defined at a-textio.ads:142, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__flush
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "flush__2" defined at a-textio.ads:143, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__flush__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_line_length" defined at a-textio.ads:149, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_line_length
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_line_length__2" defined at a-textio.ads:150, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_line_length__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_page_length" defined at a-textio.ads:152, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_page_length
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_page_length__2" defined at a-textio.ads:153, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_page_length__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "new_line" defined at a-textio.ads:165, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__new_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "new_line__2" defined at a-textio.ads:166, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__new_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "skip_line" defined at a-textio.ads:168, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__skip_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "skip_line__2" defined at a-textio.ads:169, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__skip_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "new_page" defined at a-textio.ads:174, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__new_page
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "new_page__2" defined at a-textio.ads:175, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__new_page__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "skip_page" defined at a-textio.ads:177, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__skip_page
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "skip_page__2" defined at a-textio.ads:178, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__skip_page__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_col" defined at a-textio.ads:186, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_col
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_col__2" defined at a-textio.ads:187, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_col__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_line" defined at a-textio.ads:189, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_line__2" defined at a-textio.ads:190, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get" defined at a-textio.ads:205, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get__2" defined at a-textio.ads:206, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put" defined at a-textio.ads:207, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put__2" defined at a-textio.ads:208, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "look_ahead" defined at a-textio.ads:210, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__look_ahead
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "look_ahead__2" defined at a-textio.ads:215, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__look_ahead__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_immediate" defined at a-textio.ads:219, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_immediate
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_immediate__2" defined at a-textio.ads:223, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_immediate__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_immediate__3" defined at a-textio.ads:226, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_immediate__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_immediate__4" defined at a-textio.ads:231, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_immediate__4
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get__3" defined at a-textio.ads:239, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get__4" defined at a-textio.ads:240, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get__4
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put__3" defined at a-textio.ads:241, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put__4" defined at a-textio.ads:242, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put__4
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_line" defined at a-textio.ads:244, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_line__2" defined at a-textio.ads:249, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put_line" defined at a-textio.ads:259, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put_line__2" defined at a-textio.ads:263, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put_line__2
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "lm" defined at a-textio.ads:352, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__lm
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer

 function lm "GP_CE_Relevant" 
   :Standard__universal_integer.__split

end

(* Module for defining the constant "pm" defined at a-textio.ads:355, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__pm
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer

 function pm "GP_CE_Relevant" 
   :Standard__universal_integer.__split

end

(* Module for possibly declaring a logic function for "initialize_standard_files" defined at a-textio.ads:466, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__initialize_standard_files
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init_standard_input" defined at spark-text_io.ads:114, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__init_standard_input
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init_standard_output" defined at spark-text_io.ads:121, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__init_standard_output
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init_standard_error" defined at spark-text_io.ads:128, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__init_standard_error
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "create__2" defined at spark-text_io.ads:201, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__create__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "open__2" defined at spark-text_io.ads:222, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__open__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "close" defined at spark-text_io.ads:241, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__close
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete" defined at spark-text_io.ads:248, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__delete
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reset__2" defined at spark-text_io.ads:255, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__reset__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reset__3" defined at spark-text_io.ads:267, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__reset__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "flush" defined at spark-text_io.ads:288, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__flush
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "flush__2" defined at spark-text_io.ads:300, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__flush__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_line_length__2" defined at spark-text_io.ads:317, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__set_line_length__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_line_length__3" defined at spark-text_io.ads:329, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__set_line_length__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_page_length__2" defined at spark-text_io.ads:343, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__set_page_length__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_page_length__3" defined at spark-text_io.ads:354, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__set_page_length__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "line_length__3" defined at spark-text_io.ads:370, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__line_length__3
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count

 function line_length__3 
   (spark__text_io__standard_output : Spark__text_io__file_type.file_type)  :Spark__text_io__count.__split

end

(* Module for possibly declaring a logic function for "page_length__3" defined at spark-text_io.ads:377, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__page_length__3
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count

 function page_length__3 
   (spark__text_io__standard_output : Spark__text_io__file_type.file_type)  :Spark__text_io__count.__split

end

(* Module for possibly declaring a logic function for "new_line__2" defined at spark-text_io.ads:383, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__new_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "new_line__3" defined at spark-text_io.ads:395, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__new_line__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "skip_line__2" defined at spark-text_io.ads:410, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__skip_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "skip_line__3" defined at spark-text_io.ads:420, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__skip_line__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "end_of_line__2" defined at spark-text_io.ads:433, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__end_of_line__2
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function end_of_line__2 
   (spark__text_io__standard_input : Spark__text_io__file_type.file_type)  :bool

end

(* Module for possibly declaring a logic function for "new_page" defined at spark-text_io.ads:437, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__new_page
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "new_page__2" defined at spark-text_io.ads:448, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__new_page__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "skip_page" defined at spark-text_io.ads:462, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__skip_page
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "skip_page__2" defined at spark-text_io.ads:470, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__skip_page__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "end_of_page__2" defined at spark-text_io.ads:483, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__end_of_page__2
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function end_of_page__2 
   (spark__text_io__standard_input : Spark__text_io__file_type.file_type)  :bool

end

(* Module for possibly declaring a logic function for "end_of_file__2" defined at spark-text_io.ads:490, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__end_of_file__2
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 function end_of_file__2 
   (spark__text_io__standard_input : Spark__text_io__file_type.file_type)  :bool

end

(* Module for possibly declaring a logic function for "set_col__2" defined at spark-text_io.ads:495, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__set_col__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_col__3" defined at spark-text_io.ads:511, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__set_col__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_line__2" defined at spark-text_io.ads:529, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__set_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_line__3" defined at spark-text_io.ads:545, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__set_line__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "col__4" defined at spark-text_io.ads:566, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__col__4
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count_result

 function col__4 
   (spark__text_io__standard_output : Spark__text_io__file_type.file_type)  :Spark__text_io__count_result.count_result

end

(* Module for possibly declaring a logic function for "line__4" defined at spark-text_io.ads:573, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__line__4
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count_result

 function line__4 
   (spark__text_io__standard_output : Spark__text_io__file_type.file_type)  :Spark__text_io__count_result.count_result

end

(* Module for possibly declaring a logic function for "page__4" defined at spark-text_io.ads:580, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__page__4
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count_result

 function page__4 
   (spark__text_io__standard_output : Spark__text_io__file_type.file_type)  :Spark__text_io__count_result.count_result

end

(* Module for possibly declaring a logic function for "get" defined at spark-text_io.ads:586, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__get
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get__2" defined at spark-text_io.ads:595, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__get__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put" defined at spark-text_io.ads:609, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__put
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put__2" defined at spark-text_io.ads:622, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__put__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "look_ahead" defined at spark-text_io.ads:637, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__look_ahead
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "look_ahead__2" defined at spark-text_io.ads:647, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__look_ahead__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_immediate" defined at spark-text_io.ads:655, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__get_immediate
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_immediate__2" defined at spark-text_io.ads:664, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__get_immediate__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_immediate__3" defined at spark-text_io.ads:673, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__get_immediate__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_immediate__4" defined at spark-text_io.ads:683, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__get_immediate__4
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get__3" defined at spark-text_io.ads:696, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__get__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get__4" defined at spark-text_io.ads:708, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__get__4
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put__3" defined at spark-text_io.ads:719, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__put__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put__4" defined at spark-text_io.ads:732, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__put__4
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_line" defined at spark-text_io.ads:751, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__get_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_line__2" defined at spark-text_io.ads:767, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__get_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put_line" defined at spark-text_io.ads:779, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__put_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put_line__2" defined at spark-text_io.ads:793, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Spark__text_io__put_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "as_init_standard_input" defined at as_io_wrapper.ads:26, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module As_io_wrapper__as_init_standard_input
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "as_init_standard_output" defined at as_io_wrapper.ads:33, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module As_io_wrapper__as_init_standard_output
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "as_put" defined at as_io_wrapper.ads:46, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module As_io_wrapper__as_put
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "as_get" defined at as_io_wrapper.ads:54, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module As_io_wrapper__as_get
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "as_put__2" defined at as_io_wrapper.ads:60, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module As_io_wrapper__as_put__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "as_get_line" defined at as_io_wrapper.ads:77, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module As_io_wrapper__as_get_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "as_put_line" defined at as_io_wrapper.ads:84, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module As_io_wrapper__as_put_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "as_put_line__2" defined at as_io_wrapper.ads:89, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module As_io_wrapper__as_put_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "as_get__2" defined at as_io_wrapper.ads:107, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module As_io_wrapper__as_get__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "as_put__3" defined at as_io_wrapper.ads:115, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module As_io_wrapper__as_put__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "as_put_line__3" defined at as_io_wrapper.ads:120, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module As_io_wrapper__as_put_line__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_int" defined at a-tiinau.ads:41, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__integer_aux__get_int
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_lli" defined at a-tiinau.ads:46, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__integer_aux__get_lli
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put_int" defined at a-tiinau.ads:51, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__integer_aux__put_int
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put_lli" defined at a-tiinau.ads:57, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__integer_aux__put_lli
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "gets_int" defined at a-tiinau.ads:63, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__integer_aux__gets_int
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "gets_lli" defined at a-tiinau.ads:68, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__integer_aux__gets_lli
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "puts_int" defined at a-tiinau.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__integer_aux__puts_int
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "puts_lli" defined at a-tiinau.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__integer_aux__puts_lli
 use import "_gnatprove_standard".Main


end

(* Module giving a program function and a defining axiom for the expression function "is_standard_writable" defined at spark-text_io.ads:156, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Spark__text_io__is_standard_writable__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_standard_output
 use        Spark__text_io__is_standard_error
 use        Spark__text_io__is_standard_writable

 val is_standard_writable 
   (file : Spark__text_io__file_type.file_type)  :bool
  requires { true }
  ensures { (result = (Spark__text_io__is_standard_writable.is_standard_writable file)) }

 
 axiom is_standard_writable__def_axiom :
  (forall file  : Spark__text_io__file_type.file_type [(Spark__text_io__is_standard_writable.is_standard_writable file)].
   ( ((Spark__text_io__is_standard_writable.is_standard_writable file) = True) <-> ( ((Spark__text_io__is_standard_output.is_standard_output file) = True) \/ ((Spark__text_io__is_standard_error.is_standard_error file) = True) ) ))

end

(* Module giving a program function and a defining axiom for the expression function "is_standard_file" defined at spark-text_io.ads:161, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Spark__text_io__is_standard_file__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_standard_input
 use        Spark__text_io__is_standard_output
 use        Spark__text_io__is_standard_error
 use        Spark__text_io__is_standard_file

 val is_standard_file 
   (file : Spark__text_io__file_type.file_type)  :bool
  requires { true }
  ensures { (result = (Spark__text_io__is_standard_file.is_standard_file file)) }

 
 axiom is_standard_file__def_axiom :
  (forall file  : Spark__text_io__file_type.file_type [(Spark__text_io__is_standard_file.is_standard_file file)].
   ( ((Spark__text_io__is_standard_file.is_standard_file file) = True) <-> ( ( ((Spark__text_io__is_standard_input.is_standard_input file) = True) \/ ((Spark__text_io__is_standard_output.is_standard_output file) = True) ) \/ ((Spark__text_io__is_standard_error.is_standard_error file) = True) ) ))

end

(* Module giving a program function and a defining axiom for the expression function "is_readable" defined at spark-text_io.ads:187, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Spark__text_io__is_readable__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_readable
 use        Spark__text_io__is_open

 val is_readable 
   (file : Spark__text_io__file_type.file_type)  :bool
  requires { true }
  ensures { (result = (Spark__text_io__is_readable.is_readable file)) }

 
 axiom is_readable__def_axiom :
  (forall file  : Spark__text_io__file_type.file_type [(Spark__text_io__is_readable.is_readable file)].
   ( ((Spark__text_io__is_readable.is_readable file) = True) <-> ((Spark__text_io__is_open.is_open file) = True) ))

end

(* Module giving a program function and a defining axiom for the expression function "is_writable" defined at spark-text_io.ads:192, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Spark__text_io__is_writable__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_writable
 use        Spark__text_io__is_open

 val is_writable 
   (file : Spark__text_io__file_type.file_type)  :bool
  requires { true }
  ensures { (result = (Spark__text_io__is_writable.is_writable file)) }

 
 axiom is_writable__def_axiom :
  (forall file  : Spark__text_io__file_type.file_type [(Spark__text_io__is_writable.is_writable file)].
   ( ((Spark__text_io__is_writable.is_writable file) = True) <-> ((Spark__text_io__is_open.is_open file) = True) ))

end
(* Module giving axioms for the type entity "short_short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_short_integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "long_long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "short_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_float__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__float__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_float__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "long_long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_float__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_character__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "wide_wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_character__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_string__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "wide_wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_string__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "duration", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__duration__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_8", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_8__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_16", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_16__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_32", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_32__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_64", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_64__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "universal_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "universal_real", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_real__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "root_stream_type" defined at a-stream.ads:70, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__root_stream_type__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "stream_element" defined at a-stream.ads:42, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__stream_element__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tstream_element_offsetB" defined at a-stream.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__Tstream_element_offsetB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "stream_element_offset" defined at a-stream.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__stream_element_offset__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "stream_element_count" defined at a-stream.ads:51, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__stream_element_count__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "stream_element_array" defined at a-stream.ads:54, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__stream_element_array__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Troot_stream_typeC" defined at a-stream.ads:39, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__Troot_stream_typeC__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "name" defined at system.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "system_name" defined at system.ads:47, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__system_name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__system_name

 axiom system_name__def_axiom :
  ((System__system_name.system_name ) = 0)

end

(* Module for defining the value of constant "min_int" defined at system.ads:51, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__min_int__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__min_int

 axiom min_int__def_axiom :
  ((System__min_int.min_int ) = ( -9223372036854775808 ))

end

(* Module for defining the value of constant "max_int" defined at system.ads:52, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_int__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_int

 axiom max_int__def_axiom :
  ((System__max_int.max_int ) = 9223372036854775807)

end

(* Module for defining the value of constant "max_binary_modulus" defined at system.ads:54, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_binary_modulus__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_binary_modulus

 axiom max_binary_modulus__def_axiom :
  ((System__max_binary_modulus.max_binary_modulus ) = 18446744073709551616)

end

(* Module for defining the value of constant "max_nonbinary_modulus" defined at system.ads:55, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_nonbinary_modulus__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_nonbinary_modulus

 axiom max_nonbinary_modulus__def_axiom :
  ((System__max_nonbinary_modulus.max_nonbinary_modulus ) = 4294967295)

end

(* Module for defining the value of constant "max_base_digits" defined at system.ads:57, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_base_digits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_base_digits

 axiom max_base_digits__def_axiom :
  ((System__max_base_digits.max_base_digits ) = 18)

end

(* Module for defining the value of constant "max_digits" defined at system.ads:58, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_digits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_digits

 axiom max_digits__def_axiom :
  ((System__max_digits.max_digits ) = 18)

end

(* Module for defining the value of constant "max_mantissa" defined at system.ads:60, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_mantissa__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_mantissa

 axiom max_mantissa__def_axiom :
  ((System__max_mantissa.max_mantissa ) = 63)

end

(* Module for defining the value of constant "fine_delta" defined at system.ads:61, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__fine_delta__axiom
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        Standard__universal_real
 use        System__fine_delta

 axiom fine_delta__def_axiom :
  ((System__fine_delta.fine_delta ) = (Standard__universal_real.of_real (0.000000000000000000108420217248550443400745280086994171142578125)))

end

(* Module for defining the value of constant "tick" defined at system.ads:63, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tick__axiom
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        Standard__universal_real
 use        System__tick

 axiom tick__def_axiom :
  ((System__tick.tick ) = (Standard__universal_real.of_real (1.0E-6)))

end

(* Module giving axioms for the type entity "address" defined at system.ads:116, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__address__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "storage_unit" defined at system.ads:71, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__storage_unit__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__storage_unit

 axiom storage_unit__def_axiom :
  ((System__storage_unit.storage_unit ) = 8)

end

(* Module for defining the value of constant "memory_size" defined at system.ads:73, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__memory_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__memory_size

 axiom memory_size__def_axiom :
  ((System__memory_size.memory_size ) = 18446744073709551616)

end

(* Module giving axioms for the type entity "bit_order" defined at system.ads:91, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__bit_order__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "default_bit_order" defined at system.ads:92, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_bit_order__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__default_bit_order

 axiom default_bit_order__def_axiom :
  ((System__default_bit_order.default_bit_order ) = 1)

end

(* Module for defining the value of constant "max_priority" defined at system.ads:105, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_priority

 axiom max_priority__def_axiom :
  ((System__max_priority.max_priority ) = 97)

end

(* Module for defining the value of constant "max_interrupt_priority" defined at system.ads:106, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_interrupt_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_interrupt_priority

 axiom max_interrupt_priority__def_axiom :
  ((System__max_interrupt_priority.max_interrupt_priority ) = 98)

end

(* Module giving axioms for the type entity "any_priority" defined at system.ads:108, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__any_priority__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "priority" defined at system.ads:109, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__priority__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "interrupt_priority" defined at system.ads:110, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__interrupt_priority__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "default_priority" defined at system.ads:112, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__default_priority

 axiom default_priority__def_axiom :
  ((System__default_priority.default_priority ) = 48)

end

(* Module for defining the value of constant "null_address" defined at system.ads:117, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__null_address__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64
 use        System__null_address

 axiom null_address__def_axiom :
  ((System__null_address.null_address ) = (BV64.of_int 0))

end

(* Module for defining the value of constant "backend_divide_checks" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_divide_checks__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__backend_divide_checks

 axiom backend_divide_checks__def_axiom :
  ((System__backend_divide_checks.backend_divide_checks ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "backend_overflow_checks" defined at system.ads:130, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_overflow_checks__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__backend_overflow_checks

 axiom backend_overflow_checks__def_axiom :
  ((System__backend_overflow_checks.backend_overflow_checks ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "command_line_args" defined at system.ads:131, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__command_line_args__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__command_line_args

 axiom command_line_args__def_axiom :
  ((System__command_line_args.command_line_args ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "configurable_run_time" defined at system.ads:132, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__configurable_run_time__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__configurable_run_time

 axiom configurable_run_time__def_axiom :
  ((System__configurable_run_time.configurable_run_time ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "denorm" defined at system.ads:133, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__denorm__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__denorm

 axiom denorm__def_axiom :
  ((System__denorm.denorm ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "duration_32_bits" defined at system.ads:134, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__duration_32_bits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__duration_32_bits

 axiom duration_32_bits__def_axiom :
  ((System__duration_32_bits.duration_32_bits ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "exit_status_supported" defined at system.ads:135, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__exit_status_supported__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__exit_status_supported

 axiom exit_status_supported__def_axiom :
  ((System__exit_status_supported.exit_status_supported ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "fractional_fixed_ops" defined at system.ads:136, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__fractional_fixed_ops__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__fractional_fixed_ops

 axiom fractional_fixed_ops__def_axiom :
  ((System__fractional_fixed_ops.fractional_fixed_ops ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "frontend_layout" defined at system.ads:137, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__frontend_layout__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__frontend_layout

 axiom frontend_layout__def_axiom :
  ((System__frontend_layout.frontend_layout ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "machine_overflows" defined at system.ads:138, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_overflows__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__machine_overflows

 axiom machine_overflows__def_axiom :
  ((System__machine_overflows.machine_overflows ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "machine_rounds" defined at system.ads:139, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_rounds__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__machine_rounds

 axiom machine_rounds__def_axiom :
  ((System__machine_rounds.machine_rounds ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "preallocated_stacks" defined at system.ads:140, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__preallocated_stacks__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__preallocated_stacks

 axiom preallocated_stacks__def_axiom :
  ((System__preallocated_stacks.preallocated_stacks ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "signed_zeros" defined at system.ads:141, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__signed_zeros__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__signed_zeros

 axiom signed_zeros__def_axiom :
  ((System__signed_zeros.signed_zeros ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "stack_check_default" defined at system.ads:142, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_default__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_default

 axiom stack_check_default__def_axiom :
  ((System__stack_check_default.stack_check_default ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "stack_check_probes" defined at system.ads:143, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_probes__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_probes

 axiom stack_check_probes__def_axiom :
  ((System__stack_check_probes.stack_check_probes ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "stack_check_limits" defined at system.ads:144, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_limits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_limits

 axiom stack_check_limits__def_axiom :
  ((System__stack_check_limits.stack_check_limits ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "support_aggregates" defined at system.ads:145, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_aggregates__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_aggregates

 axiom support_aggregates__def_axiom :
  ((System__support_aggregates.support_aggregates ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_atomic_primitives" defined at system.ads:146, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_atomic_primitives__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_atomic_primitives

 axiom support_atomic_primitives__def_axiom :
  ((System__support_atomic_primitives.support_atomic_primitives ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_composite_assign" defined at system.ads:147, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_assign__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_composite_assign

 axiom support_composite_assign__def_axiom :
  ((System__support_composite_assign.support_composite_assign ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_composite_compare" defined at system.ads:148, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_compare__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_composite_compare

 axiom support_composite_compare__def_axiom :
  ((System__support_composite_compare.support_composite_compare ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_long_shifts" defined at system.ads:149, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_long_shifts__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_long_shifts

 axiom support_long_shifts__def_axiom :
  ((System__support_long_shifts.support_long_shifts ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "always_compatible_rep" defined at system.ads:150, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__always_compatible_rep__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__always_compatible_rep

 axiom always_compatible_rep__def_axiom :
  ((System__always_compatible_rep.always_compatible_rep ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "suppress_standard_library" defined at system.ads:151, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__suppress_standard_library__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__suppress_standard_library

 axiom suppress_standard_library__def_axiom :
  ((System__suppress_standard_library.suppress_standard_library ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "use_ada_main_program_name" defined at system.ads:152, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__use_ada_main_program_name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__use_ada_main_program_name

 axiom use_ada_main_program_name__def_axiom :
  ((System__use_ada_main_program_name.use_ada_main_program_name ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "zcx_by_default" defined at system.ads:153, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__zcx_by_default__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__zcx_by_default

 axiom zcx_by_default__def_axiom :
  ((System__zcx_by_default.zcx_by_default ) = (Boolean.of_int 1))

end

(* Module giving axioms for the type entity "Ttask_storage_sizeB" defined at s-parame.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__Ttask_storage_sizeB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "task_storage_size" defined at s-parame.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__task_storage_size__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tsize_typeB" defined at s-parame.ads:61, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__Tsize_typeB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "size_type" defined at s-parame.ads:61, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__size_type__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "unspecified_size" defined at s-parame.ads:64, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__unspecified_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__unspecified_size

 axiom unspecified_size__def_axiom :
  ((System__parameters__unspecified_size.unspecified_size ) = ( -2147483648 ))

end

(* Module giving axioms for the type entity "percentage" defined at s-parame.ads:67, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__percentage__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "dynamic" defined at s-parame.ads:68, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__dynamic__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__dynamic

 axiom dynamic__def_axiom :
  ((System__parameters__dynamic.dynamic ) = ( -1 ))

end

(* Module for defining the value of constant "sec_stack_percentage" defined at s-parame.ads:75, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__sec_stack_percentage__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__sec_stack_percentage

 axiom sec_stack_percentage__def_axiom :
  ((System__parameters__sec_stack_percentage.sec_stack_percentage ) = ( -1 ))

end

(* Module for defining the value of constant "sec_stack_dynamic" defined at s-parame.ads:78, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__sec_stack_dynamic__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__sec_stack_dynamic

 axiom sec_stack_dynamic__def_axiom :
  ((System__parameters__sec_stack_dynamic.sec_stack_dynamic ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "default_env_stack_size" defined at s-parame.ads:96, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__default_env_stack_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__default_env_stack_size

 axiom default_env_stack_size__def_axiom :
  ((System__parameters__default_env_stack_size.default_env_stack_size ) = 8192000)

end

(* Module for defining the value of constant "stack_grows_down" defined at s-parame.ads:101, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__stack_grows_down__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__stack_grows_down

 axiom stack_grows_down__def_axiom :
  ((System__parameters__stack_grows_down.stack_grows_down ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "long_bits" defined at s-parame.ads:110, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__long_bits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__long_bits

 axiom long_bits__def_axiom :
  ((System__parameters__long_bits.long_bits ) = 64)

end

(* Module giving axioms for the type entity "c_address" defined at s-parame.ads:116, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__c_address__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T1s" defined at s-parame.ads:119, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__T1s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "c_malloc_linkname" defined at s-parame.ads:119, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__c_malloc_linkname__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__parameters__c_malloc_linkname
 use        Temp___standard__as_io_wrapper_0

 axiom c_malloc_linkname__def_axiom :
  ((System__parameters__c_malloc_linkname.c_malloc_linkname ) = (Standard__string.of_array Temp___standard__as_io_wrapper_0.temp___standard__as_io_wrapper_0 1 13))

end

(* Module for defining the value of constant "garbage_collected" defined at s-parame.ads:142, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__garbage_collected__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__garbage_collected

 axiom garbage_collected__def_axiom :
  ((System__parameters__garbage_collected.garbage_collected ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "single_lock" defined at s-parame.ads:157, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__single_lock__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__single_lock

 axiom single_lock__def_axiom :
  ((System__parameters__single_lock.single_lock ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "no_abort" defined at s-parame.ads:170, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__no_abort__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__no_abort

 axiom no_abort__def_axiom :
  ((System__parameters__no_abort.no_abort ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "max_attribute_count" defined at s-parame.ads:183, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__max_attribute_count__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__max_attribute_count

 axiom max_attribute_count__def_axiom :
  ((System__parameters__max_attribute_count.max_attribute_count ) = 32)

end

(* Module for defining the value of constant "runtime_traces" defined at s-parame.ads:190, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__runtime_traces__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__runtime_traces

 axiom runtime_traces__def_axiom :
  ((System__parameters__runtime_traces.runtime_traces ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "max_task_image_length" defined at s-parame.ads:199, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__max_task_image_length__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__max_task_image_length

 axiom max_task_image_length__def_axiom :
  ((System__parameters__max_task_image_length.max_task_image_length ) = 256)

end

(* Module for defining the value of constant "default_exception_msg_max_length" defined at s-parame.ads:206, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__default_exception_msg_max_length__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__default_exception_msg_max_length

 axiom default_exception_msg_max_length__def_axiom :
  ((System__parameters__default_exception_msg_max_length.default_exception_msg_max_length ) = 200)

end

(* Module giving axioms for the type entity "chars" defined at s-crtl.ads:41, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__chars__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "dirs" defined at s-crtl.ads:47, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__dirs__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "files" defined at s-crtl.ads:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__files__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "int" defined at s-crtl.ads:53, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__int__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "TlongB" defined at s-crtl.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__TlongB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "long" defined at s-crtl.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__long__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "off_t" defined at s-crtl.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__off_t__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "size_t" defined at s-crtl.ads:60, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__size_t__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tssize_tB" defined at s-crtl.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__Tssize_tB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "ssize_t" defined at s-crtl.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__ssize_t__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tint64B" defined at s-crtl.ads:65, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__Tint64B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "int64" defined at s-crtl.ads:65, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__int64__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "filename_encoding" defined at s-crtl.ads:72, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__filename_encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tinteger_8B" defined at interfac.ads:45, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_8B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_8" defined at interfac.ads:45, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_8__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tinteger_16B" defined at interfac.ads:48, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_16B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_16" defined at interfac.ads:48, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_16__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tinteger_32B" defined at interfac.ads:51, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_32B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_32" defined at interfac.ads:51, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_32__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tinteger_64B" defined at interfac.ads:54, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_64B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_64" defined at interfac.ads:54, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_64__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "unsigned_8" defined at interfac.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_8__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "unsigned_16" defined at interfac.ads:65, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_16__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "unsigned_32" defined at interfac.ads:68, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_32__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "unsigned_64" defined at interfac.ads:71, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_64__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tieee_float_32B" defined at interfac.ads:163, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tieee_float_32B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "ieee_float_32" defined at interfac.ads:163, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__ieee_float_32__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tieee_float_64B" defined at interfac.ads:166, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tieee_float_64B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "ieee_float_64" defined at interfac.ads:166, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__ieee_float_64__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tieee_extended_floatB" defined at interfac.ads:176, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tieee_extended_floatB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "ieee_extended_float" defined at interfac.ads:176, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__ieee_extended_float__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "chars" defined at i-cstrea.ads:40, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__chars__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "files" defined at i-cstrea.ads:41, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__files__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "int" defined at i-cstrea.ads:42, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__int__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "long" defined at i-cstrea.ads:43, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__long__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "size_t" defined at i-cstrea.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__size_t__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "ssize_t" defined at i-cstrea.ads:45, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__ssize_t__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "int64" defined at i-cstrea.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__int64__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "voids" defined at i-cstrea.ads:47, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__voids__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "eof" defined at i-cstrea.ads:56, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__eof__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "iofbf" defined at i-cstrea.ads:59, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__iofbf__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "iolbf" defined at i-cstrea.ads:60, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__iolbf__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "ionbf" defined at i-cstrea.ads:61, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__ionbf__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "l_tmpnam" defined at i-cstrea.ads:64, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__l_tmpnam__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "seek_cur" defined at i-cstrea.ads:67, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__seek_cur__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "seek_end" defined at i-cstrea.ads:68, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__seek_end__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "seek_set" defined at i-cstrea.ads:69, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__seek_set__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "content_encoding" defined at i-cstrea.ads:230, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__content_encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "text_content_encoding" defined at i-cstrea.ads:248, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__text_content_encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "non_default_text_content_encoding" defined at i-cstrea.ads:251, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__non_default_text_content_encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "max_path_len" defined at i-cstrea.ads:270, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__max_path_len__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "null_stream" defined at i-cstrea.ads:313, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__null_stream__axiom
 use import "_gnatprove_standard".Main
 use        System__null_address
 use        Interfaces__c_streams__null_stream

 axiom null_stream__def_axiom :
  ((Interfaces__c_streams__null_stream.null_stream ) = System__null_address.null_address)

end

(* Module giving axioms for the type entity "file_mode" defined at s-ficobl.ads:63, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__file_control_block__file_mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "read_file_mode" defined at s-ficobl.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__file_control_block__read_file_mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "shared_status_type" defined at s-ficobl.ads:69, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__file_control_block__shared_status_type__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Twc_encoding_methodB" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_encoding_methodB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "wc_encoding_method" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__wc_encoding_method__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "wcem_hex" defined at s-wchcon.ads:100, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_hex__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_hex

 axiom wcem_hex__def_axiom :
  ((System__wch_con__wcem_hex.wcem_hex ) = 1)

end

(* Module for defining the value of constant "wcem_upper" defined at s-wchcon.ads:108, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_upper__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_upper

 axiom wcem_upper__def_axiom :
  ((System__wch_con__wcem_upper.wcem_upper ) = 2)

end

(* Module for defining the value of constant "wcem_shift_jis" defined at s-wchcon.ads:117, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_shift_jis__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_shift_jis

 axiom wcem_shift_jis__def_axiom :
  ((System__wch_con__wcem_shift_jis.wcem_shift_jis ) = 3)

end

(* Module for defining the value of constant "wcem_euc" defined at s-wchcon.ads:126, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_euc__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_euc

 axiom wcem_euc__def_axiom :
  ((System__wch_con__wcem_euc.wcem_euc ) = 4)

end

(* Module for defining the value of constant "wcem_utf8" defined at s-wchcon.ads:134, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_utf8__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_utf8

 axiom wcem_utf8__def_axiom :
  ((System__wch_con__wcem_utf8.wcem_utf8 ) = 5)

end

(* Module for defining the value of constant "wcem_brackets" defined at s-wchcon.ads:156, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_brackets__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_brackets

 axiom wcem_brackets__def_axiom :
  ((System__wch_con__wcem_brackets.wcem_brackets ) = 6)

end

(* Module giving axioms for the type entity "Twc_encoding_lettersB" defined at s-wchcon.ads:169, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_encoding_lettersB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Twc_encoding_lettersT" defined at s-wchcon.ads:169, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_encoding_lettersT__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T3s" defined at s-wchcon.ads:170, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__T3s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T4s" defined at s-wchcon.ads:170, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "wc_encoding_letters" defined at s-wchcon.ads:169, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wc_encoding_letters__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__Twc_encoding_lettersT
 use        System__wch_con__T4s
 use        System__wch_con__wc_encoding_letters
 use        Temp___standard__as_io_wrapper_1

 axiom wc_encoding_letters__def_axiom :
  ((System__wch_con__wc_encoding_letters.wc_encoding_letters ) = (Temp___standard__as_io_wrapper_1.temp___standard__as_io_wrapper_1 104 117 115 101 56 98))

end

(* Module giving axioms for the type entity "wc_esc_encoding_method" defined at s-wchcon.ads:180, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__wc_esc_encoding_method__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "wc_upper_half_encoding_method" defined at s-wchcon.ads:184, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__wc_upper_half_encoding_method__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "wc_longest_sequence" defined at s-wchcon.ads:189, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wc_longest_sequence__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wc_longest_sequence

 axiom wc_longest_sequence__def_axiom :
  ((System__wch_con__wc_longest_sequence.wc_longest_sequence ) = 12)

end

(* Module giving axioms for the type entity "Twc_longest_sequencesB" defined at s-wchcon.ads:193, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_longest_sequencesB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Twc_longest_sequencesT" defined at s-wchcon.ads:193, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_longest_sequencesT__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T7s" defined at s-wchcon.ads:194, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__T7s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T8s" defined at s-wchcon.ads:194, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__T8s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "wc_longest_sequences" defined at s-wchcon.ads:193, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wc_longest_sequences__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__Twc_longest_sequencesT
 use        System__wch_con__T8s
 use        System__wch_con__wc_longest_sequences
 use        Temp___standard__as_io_wrapper_10

 axiom wc_longest_sequences__def_axiom :
  ((System__wch_con__wc_longest_sequences.wc_longest_sequences ) = (Temp___standard__as_io_wrapper_10.temp___standard__as_io_wrapper_10 5 2 2 2 6 12))

end

(* Module giving axioms for the type entity "file_type" defined at a-textio.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__file_type__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "file_mode" defined at a-textio.ads:53, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__file_mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "TcountB" defined at a-textio.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__TcountB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "count" defined at a-textio.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "positive_count" defined at a-textio.ads:68, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__positive_count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "unbounded" defined at a-textio.ads:70, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__text_io__unbounded__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__unbounded

 axiom unbounded__def_axiom :
  ((Ada__text_io__unbounded.unbounded ) = 0)

end

(* Module giving axioms for the type entity "field" defined at a-textio.ads:73, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__field__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "number_base" defined at a-textio.ads:78, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__number_base__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "type_set" defined at a-textio.ads:80, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__type_set__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "lm" defined at a-textio.ads:352, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__text_io__lm__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__lm

 axiom lm__def_axiom :
  ((Ada__text_io__lm.lm ) = 10)

end

(* Module for defining the value of constant "pm" defined at a-textio.ads:355, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__text_io__pm__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__pm

 axiom pm__def_axiom :
  ((Ada__text_io__pm.pm ) = 12)

end

(* Module giving axioms for the type entity "file_status" defined at spark.ads:41, created in Gnat2Why.Types.Generate_Type_Completion *)
module Spark__file_status__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "text_io_file_type" defined at spark.ads:53, created in Gnat2Why.Types.Generate_Type_Completion *)
module Spark__text_io_file_type__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "file_type" defined at spark-text_io.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module Spark__text_io__file_type__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "file_statusB" defined at spark-text_io.ads:56, created in Gnat2Why.Types.Generate_Type_Completion *)
module Spark__text_io__file_statusB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "file_status" defined at spark-text_io.ads:56, created in Gnat2Why.Types.Generate_Type_Completion *)
module Spark__text_io__file_status__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "file_modeB" defined at spark-text_io.ads:57, created in Gnat2Why.Types.Generate_Type_Completion *)
module Spark__text_io__file_modeB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "file_mode" defined at spark-text_io.ads:57, created in Gnat2Why.Types.Generate_Type_Completion *)
module Spark__text_io__file_mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "TcountB" defined at spark-text_io.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module Spark__text_io__TcountB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "count" defined at spark-text_io.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module Spark__text_io__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "positive_count" defined at spark-text_io.ads:59, created in Gnat2Why.Types.Generate_Type_Completion *)
module Spark__text_io__positive_count__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "field" defined at spark-text_io.ads:61, created in Gnat2Why.Types.Generate_Type_Completion *)
module Spark__text_io__field__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "number_base" defined at spark-text_io.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module Spark__text_io__number_base__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "type_setB" defined at spark-text_io.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module Spark__text_io__type_setB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "type_set" defined at spark-text_io.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module Spark__text_io__type_set__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "count_result" defined at spark-text_io.ads:66, created in Gnat2Why.Types.Generate_Type_Completion *)
module Spark__text_io__count_result__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "character_result" defined at spark-text_io.ads:73, created in Gnat2Why.Types.Generate_Type_Completion *)
module Spark__text_io__character_result__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "immediate_result" defined at spark-text_io.ads:80, created in Gnat2Why.Types.Generate_Type_Completion *)
module Spark__text_io__immediate_result__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly an axiom) for "read" defined at a-stream.ads:57, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__streams__read__axiom
 use import "_gnatprove_standard".Main
 use        Ada__streams__root_stream_type
 use        Ada__streams__stream_element_offset
 use        Ada__streams__stream_element_array

 val read 
   (stream__split_fields : ref Ada__streams__root_stream_type.__split_fields) (stream__attr__tag : int) (item : ref Ada__streams__stream_element_array.__split) (item__first : int) (item__last : int) (last : ref Ada__streams__stream_element_offset.__split)  :unit
  requires { true }
  ensures { (Ada__streams__stream_element_offset.dynamic_property Ada__streams__stream_element_offset.first Ada__streams__stream_element_offset.last !last) }
  writes {stream__split_fields, item, last }

 
 namespace Dispatch
  val read 
    (stream__split_fields : ref Ada__streams__root_stream_type.__split_fields) (stream__attr__tag : int) (item : ref Ada__streams__stream_element_array.__split) (item__first : int) (item__last : int) (last : ref Ada__streams__stream_element_offset.__split)  :unit
   requires { true }
   ensures { (Ada__streams__stream_element_offset.dynamic_property Ada__streams__stream_element_offset.first Ada__streams__stream_element_offset.last !last) }
   writes {stream__split_fields, item, last }


 end

end

(* Module for declaring a program function (and possibly an axiom) for "write" defined at a-stream.ads:63, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__streams__write__axiom
 use import "_gnatprove_standard".Main
 use        Ada__streams__root_stream_type
 use        Ada__streams__stream_element_array

 val write 
   (stream__split_fields : ref Ada__streams__root_stream_type.__split_fields) (stream__attr__tag : int) (item : Ada__streams__stream_element_array.stream_element_array)  :unit
  requires { true }
  ensures { true }
  writes {stream__split_fields }

 
 namespace Dispatch
  val write 
    (stream__split_fields : ref Ada__streams__root_stream_type.__split_fields) (stream__attr__tag : int) (item : Ada__streams__stream_element_array.stream_element_array)  :unit
   requires { true }
   ensures { true }
   writes {stream__split_fields }


 end

end

(* Module for declaring a program function (and possibly an axiom) for "Olt" defined at system.ads:77, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Olt__axiom
 use import "_gnatprove_standard".Main
 use        System__address
 use        System__Olt

 val olt 
   (left : System__address.__split) (right : System__address.__split)  :bool
  requires { true }
  ensures { (result = (System__Olt.olt left right)) }


end

(* Module for declaring a program function (and possibly an axiom) for "Ole" defined at system.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Ole__axiom
 use import "_gnatprove_standard".Main
 use        System__address
 use        System__Ole

 val ole 
   (left : System__address.__split) (right : System__address.__split)  :bool
  requires { true }
  ensures { (result = (System__Ole.ole left right)) }


end

(* Module for declaring a program function (and possibly an axiom) for "Ogt" defined at system.ads:79, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Ogt__axiom
 use import "_gnatprove_standard".Main
 use        System__address
 use        System__Ogt

 val ogt 
   (left : System__address.__split) (right : System__address.__split)  :bool
  requires { true }
  ensures { (result = (System__Ogt.ogt left right)) }


end

(* Module for declaring a program function (and possibly an axiom) for "Oge" defined at system.ads:80, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Oge__axiom
 use import "_gnatprove_standard".Main
 use        System__address
 use        System__Oge

 val oge 
   (left : System__address.__split) (right : System__address.__split)  :bool
  requires { true }
  ensures { (result = (System__Oge.oge left right)) }


end

(* Module for declaring a program function (and possibly an axiom) for "Oeq" defined at system.ads:81, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Oeq__axiom
 use import "_gnatprove_standard".Main
 use        System__address
 use        System__Oeq

 val oeq 
   (left : System__address.__split) (right : System__address.__split)  :bool
  requires { true }
  ensures { (result = (System__Oeq.oeq left right)) }


end

(* Module for declaring a program function (and possibly an axiom) for "default_stack_size" defined at s-parame.ads:81, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__parameters__default_stack_size__axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type
 use        System__parameters__default_stack_size

 val default_stack_size 
   (__void_param : unit)  :System__parameters__size_type.__split
  requires { true }
  ensures { ( (result = (System__parameters__default_stack_size.default_stack_size ())) /\ (System__parameters__size_type.dynamic_property System__parameters__size_type.first System__parameters__size_type.last result) ) }

 
 axiom default_stack_size__post_axiom :
  (forall __void_param  : unit [(System__parameters__default_stack_size.default_stack_size __void_param)].
   ( true -> (let result = (System__parameters__default_stack_size.default_stack_size __void_param) in (
    (System__parameters__size_type.dynamic_property System__parameters__size_type.first System__parameters__size_type.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "minimum_stack_size" defined at s-parame.ads:84, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__parameters__minimum_stack_size__axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type
 use        System__parameters__minimum_stack_size

 val minimum_stack_size 
   (__void_param : unit)  :System__parameters__size_type.__split
  requires { true }
  ensures { ( (result = (System__parameters__minimum_stack_size.minimum_stack_size ())) /\ (System__parameters__size_type.dynamic_property System__parameters__size_type.first System__parameters__size_type.last result) ) }

 
 axiom minimum_stack_size__post_axiom :
  (forall __void_param  : unit [(System__parameters__minimum_stack_size.minimum_stack_size __void_param)].
   ( true -> (let result = (System__parameters__minimum_stack_size.minimum_stack_size __void_param) in (
    (System__parameters__size_type.dynamic_property System__parameters__size_type.first System__parameters__size_type.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "adjust_storage_size" defined at s-parame.ads:87, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__parameters__adjust_storage_size__axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type
 use        System__parameters__adjust_storage_size

 val adjust_storage_size 
   (size : int)  :System__parameters__size_type.__split
  requires { true }
  ensures { ( (result = (System__parameters__adjust_storage_size.adjust_storage_size size)) /\ (System__parameters__size_type.dynamic_property System__parameters__size_type.first System__parameters__size_type.last result) ) }

 
 axiom adjust_storage_size__post_axiom :
  (forall size  : int [(System__parameters__adjust_storage_size.adjust_storage_size size)].
   ( (System__parameters__size_type.in_range size) -> (let result = (System__parameters__adjust_storage_size.adjust_storage_size size) in (
    (System__parameters__size_type.dynamic_property System__parameters__size_type.first System__parameters__size_type.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "strlen" defined at s-crtl.ads:85, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__strlen__axiom
 use import "_gnatprove_standard".Main
 use        System__address
 use        System__crtl__size_t
 use        System__crtl__strlen

 val strlen 
   (a : System__address.__split)  :System__crtl__size_t.__split
  requires { true }
  ensures { ( (result = (System__crtl__strlen.strlen a)) /\ (System__crtl__size_t.dynamic_property System__crtl__size_t.first System__crtl__size_t.last result) ) }

 
 axiom strlen__post_axiom :
  (forall a  : System__address.__split [(System__crtl__strlen.strlen a)].
   ( (System__address.dynamic_property System__address.first System__address.last a) -> (let result = (System__crtl__strlen.strlen a) in (
    (System__crtl__size_t.dynamic_property System__crtl__size_t.first System__crtl__size_t.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "strncpy" defined at s-crtl.ads:88, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__strncpy__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address

 val strncpy 
   (dest : System__address.__split) (src : System__address.__split) (n : BV64.t)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "atoi" defined at s-crtl.ads:95, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__atoi__axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        System__address
 use        System__crtl__atoi

 val atoi 
   (a : System__address.__split)  :Standard__integer.__split
  requires { true }
  ensures { ( (result = (System__crtl__atoi.atoi a)) /\ (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last result) ) }

 
 axiom atoi__post_axiom :
  (forall a  : System__address.__split [(System__crtl__atoi.atoi a)].
   ( (System__address.dynamic_property System__address.first System__address.last a) -> (let result = (System__crtl__atoi.atoi a) in (
    (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "clearerr" defined at s-crtl.ads:98, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__clearerr__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 val clearerr 
   (stream : System__crtl__files.__split)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "dup" defined at s-crtl.ads:101, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__dup__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__dup

 val dup 
   (handle : int)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__dup.dup handle)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom dup__post_axiom :
  (forall handle  : int [(System__crtl__dup.dup handle)].
   ( (System__crtl__int.in_range handle) -> (let result = (System__crtl__dup.dup handle) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "dup2" defined at s-crtl.ads:104, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__dup2__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__dup2

 val dup2 
   (from : int) (to__ : int)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__dup2.dup2 from to__)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom dup2__post_axiom :
  (forall from to__  : int [(System__crtl__dup2.dup2 from to__)].
   ( ( (System__crtl__int.in_range from) /\ (System__crtl__int.in_range to__) ) -> (let result = (System__crtl__dup2.dup2 from to__) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fclose" defined at s-crtl.ads:107, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fclose__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__fclose

 val fclose 
   (stream : System__crtl__files.__split)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__fclose.fclose stream)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom fclose__post_axiom :
  (forall stream  : System__crtl__files.__split [(System__crtl__fclose.fclose stream)].
   ( (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream) -> (let result = (System__crtl__fclose.fclose stream) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fdopen" defined at s-crtl.ads:110, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fdopen__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__fdopen

 val fdopen 
   (handle : int) (mode : System__crtl__chars.__split)  :System__crtl__files.__split
  requires { true }
  ensures { ( (result = (System__crtl__fdopen.fdopen handle mode)) /\ (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result) ) }

 
 axiom fdopen__post_axiom :
  (forall handle  : int.
  (forall mode  : System__crtl__chars.__split [(System__crtl__fdopen.fdopen handle mode)].
   ( ( (System__crtl__int.in_range handle) /\ (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last mode) ) -> (let result = (System__crtl__fdopen.fdopen handle mode) in (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fflush" defined at s-crtl.ads:113, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fflush__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__fflush

 val fflush 
   (stream : System__crtl__files.__split)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__fflush.fflush stream)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom fflush__post_axiom :
  (forall stream  : System__crtl__files.__split [(System__crtl__fflush.fflush stream)].
   ( (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream) -> (let result = (System__crtl__fflush.fflush stream) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fgetc" defined at s-crtl.ads:116, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fgetc__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__fgetc

 val fgetc 
   (stream : System__crtl__files.__split)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__fgetc.fgetc stream)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom fgetc__post_axiom :
  (forall stream  : System__crtl__files.__split [(System__crtl__fgetc.fgetc stream)].
   ( (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream) -> (let result = (System__crtl__fgetc.fgetc stream) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fgets" defined at s-crtl.ads:119, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fgets__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__fgets

 val fgets 
   (strng : System__crtl__chars.__split) (n : int) (stream : System__crtl__files.__split)  :System__crtl__chars.__split
  requires { true }
  ensures { ( (result = (System__crtl__fgets.fgets strng n stream)) /\ (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last result) ) }

 
 axiom fgets__post_axiom :
  (forall strng  : System__crtl__chars.__split.
  (forall n  : int.
  (forall stream  : System__crtl__files.__split [(System__crtl__fgets.fgets strng n stream)].
   ( ( ( (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last strng) /\ (System__crtl__int.in_range n) ) /\ (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream) ) -> (let result = (System__crtl__fgets.fgets strng n stream) in (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last result)))
    ))))

end

(* Module for declaring a program function (and possibly an axiom) for "fopen" defined at s-crtl.ads:122, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fopen__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__filename_encoding
 use        System__crtl__fopen

 val fopen 
   (filename : System__crtl__chars.__split) (mode : System__crtl__chars.__split) (encoding : int)  :System__crtl__files.__split
  requires { true }
  ensures { ( (result = (System__crtl__fopen.fopen filename mode encoding)) /\ (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result) ) }

 
 axiom fopen__post_axiom :
  (forall filename mode  : System__crtl__chars.__split.
  (forall encoding  : int [(System__crtl__fopen.fopen filename mode encoding)].
   ( ( ( (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last filename) /\ (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last mode) ) /\ (System__crtl__filename_encoding.in_range encoding) ) -> (let result = (System__crtl__fopen.fopen filename mode encoding) in (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fputc" defined at s-crtl.ads:128, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fputc__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__fputc

 val fputc 
   (c : int) (stream : System__crtl__files.__split)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__fputc.fputc c stream)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom fputc__post_axiom :
  (forall c  : int.
  (forall stream  : System__crtl__files.__split [(System__crtl__fputc.fputc c stream)].
   ( ( (System__crtl__int.in_range c) /\ (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream) ) -> (let result = (System__crtl__fputc.fputc c stream) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fputwc" defined at s-crtl.ads:131, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fputwc__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__fputwc

 val fputwc 
   (c : int) (stream : System__crtl__files.__split)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__fputwc.fputwc c stream)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom fputwc__post_axiom :
  (forall c  : int.
  (forall stream  : System__crtl__files.__split [(System__crtl__fputwc.fputwc c stream)].
   ( ( (System__crtl__int.in_range c) /\ (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream) ) -> (let result = (System__crtl__fputwc.fputwc c stream) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fputs" defined at s-crtl.ads:134, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fputs__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__fputs

 val fputs 
   (strng : System__crtl__chars.__split) (stream : System__crtl__files.__split)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__fputs.fputs strng stream)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom fputs__post_axiom :
  (forall strng  : System__crtl__chars.__split.
  (forall stream  : System__crtl__files.__split [(System__crtl__fputs.fputs strng stream)].
   ( ( (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last strng) /\ (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream) ) -> (let result = (System__crtl__fputs.fputs strng stream) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "free" defined at s-crtl.ads:137, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__free__axiom
 use import "_gnatprove_standard".Main
 use        System__address

 val free 
   (ptr : System__address.__split)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "freopen" defined at s-crtl.ads:140, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__freopen__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__filename_encoding
 use        System__crtl__freopen

 val freopen 
   (filename : System__crtl__chars.__split) (mode : System__crtl__chars.__split) (stream : System__crtl__files.__split) (encoding : int)  :System__crtl__files.__split
  requires { true }
  ensures { ( (result = (System__crtl__freopen.freopen filename mode stream encoding)) /\ (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result) ) }

 
 axiom freopen__post_axiom :
  (forall filename mode  : System__crtl__chars.__split.
  (forall stream  : System__crtl__files.__split.
  (forall encoding  : int [(System__crtl__freopen.freopen filename mode stream encoding)].
   ( ( ( ( (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last filename) /\ (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last mode) ) /\ (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream) ) /\ (System__crtl__filename_encoding.in_range encoding) ) -> (let result = (System__crtl__freopen.freopen filename mode stream encoding) in (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)))
    ))))

end

(* Module for declaring a program function (and possibly an axiom) for "fseek" defined at s-crtl.ads:147, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fseek__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__long
 use        System__crtl__fseek

 val fseek 
   (stream : System__crtl__files.__split) (offset : int) (origin : int)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__fseek.fseek stream offset origin)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom fseek__post_axiom :
  (forall stream  : System__crtl__files.__split.
  (forall offset origin  : int [(System__crtl__fseek.fseek stream offset origin)].
   ( ( ( (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream) /\ (System__crtl__long.in_range offset) ) /\ (System__crtl__int.in_range origin) ) -> (let result = (System__crtl__fseek.fseek stream offset origin) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fseek64" defined at s-crtl.ads:153, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fseek64__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__int64
 use        System__crtl__fseek64

 val fseek64 
   (stream : System__crtl__files.__split) (offset : int) (origin : int)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__fseek64.fseek64 stream offset origin)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom fseek64__post_axiom :
  (forall stream  : System__crtl__files.__split.
  (forall offset origin  : int [(System__crtl__fseek64.fseek64 stream offset origin)].
   ( ( ( (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream) /\ (System__crtl__int64.in_range offset) ) /\ (System__crtl__int.in_range origin) ) -> (let result = (System__crtl__fseek64.fseek64 stream offset origin) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "ftell" defined at s-crtl.ads:159, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__ftell__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__long
 use        System__crtl__ftell

 val ftell 
   (stream : System__crtl__files.__split)  :System__crtl__long.__split
  requires { true }
  ensures { ( (result = (System__crtl__ftell.ftell stream)) /\ (System__crtl__long.dynamic_property System__crtl__long.first System__crtl__long.last result) ) }

 
 axiom ftell__post_axiom :
  (forall stream  : System__crtl__files.__split [(System__crtl__ftell.ftell stream)].
   ( (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream) -> (let result = (System__crtl__ftell.ftell stream) in (
    (System__crtl__long.dynamic_property System__crtl__long.first System__crtl__long.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "ftell64" defined at s-crtl.ads:162, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__ftell64__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int64
 use        System__crtl__ftell64

 val ftell64 
   (stream : System__crtl__files.__split)  :System__crtl__int64.__split
  requires { true }
  ensures { ( (result = (System__crtl__ftell64.ftell64 stream)) /\ (System__crtl__int64.dynamic_property System__crtl__int64.first System__crtl__int64.last result) ) }

 
 axiom ftell64__post_axiom :
  (forall stream  : System__crtl__files.__split [(System__crtl__ftell64.ftell64 stream)].
   ( (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream) -> (let result = (System__crtl__ftell64.ftell64 stream) in (
    (System__crtl__int64.dynamic_property System__crtl__int64.first System__crtl__int64.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "getenv" defined at s-crtl.ads:165, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__getenv__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        System__address
 use        System__crtl__getenv

 val getenv 
   (s : Standard__string.string)  :System__address.__split
  requires { true }
  ensures { ( (result = (System__crtl__getenv.getenv s)) /\ (System__address.dynamic_property System__address.first System__address.last result) ) }

 
 axiom getenv__post_axiom :
  (forall s  : Standard__string.string [(System__crtl__getenv.getenv s)].
   ( true -> (let result = (System__crtl__getenv.getenv s) in (
    (System__address.dynamic_property System__address.first System__address.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "isatty" defined at s-crtl.ads:168, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__isatty__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__isatty

 val isatty 
   (handle : int)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__isatty.isatty handle)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom isatty__post_axiom :
  (forall handle  : int [(System__crtl__isatty.isatty handle)].
   ( (System__crtl__int.in_range handle) -> (let result = (System__crtl__isatty.isatty handle) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "lseek" defined at s-crtl.ads:171, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__lseek__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__off_t
 use        System__crtl__lseek

 val lseek 
   (fd : int) (offset : int) (direction : int)  :System__crtl__off_t.__split
  requires { true }
  ensures { ( (result = (System__crtl__lseek.lseek fd offset direction)) /\ (System__crtl__off_t.dynamic_property System__crtl__off_t.first System__crtl__off_t.last result) ) }

 
 axiom lseek__post_axiom :
  (forall fd offset direction  : int [(System__crtl__lseek.lseek fd offset direction)].
   ( ( ( (System__crtl__int.in_range fd) /\ (System__crtl__off_t.in_range offset) ) /\ (System__crtl__int.in_range direction) ) -> (let result = (System__crtl__lseek.lseek fd offset direction) in (
    (System__crtl__off_t.dynamic_property System__crtl__off_t.first System__crtl__off_t.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "malloc" defined at s-crtl.ads:174, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__malloc__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address
 use        System__crtl__size_t
 use        System__crtl__malloc

 val malloc 
   (size : BV64.t)  :System__address.__split
  requires { true }
  ensures { ( (result = (System__crtl__malloc.malloc size)) /\ (System__address.dynamic_property System__address.first System__address.last result) ) }

 
 axiom malloc__post_axiom :
  (forall size  : BV64.t [(System__crtl__malloc.malloc size)].
   ( (System__crtl__size_t.in_range size) -> (let result = (System__crtl__malloc.malloc size) in (
    (System__address.dynamic_property System__address.first System__address.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "memcpy" defined at s-crtl.ads:177, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__memcpy__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address

 val memcpy 
   (s1 : System__address.__split) (s2 : System__address.__split) (n : BV64.t)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "memmove" defined at s-crtl.ads:180, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__memmove__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address

 val memmove 
   (s1 : System__address.__split) (s2 : System__address.__split) (n : BV64.t)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "mktemp" defined at s-crtl.ads:183, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__mktemp__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__chars

 val mktemp 
   (template : System__crtl__chars.__split)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "pclose" defined at s-crtl.ads:186, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__pclose__axiom
 use import "_gnatprove_standard".Main
 use        System__address
 use        System__crtl__int
 use        System__crtl__pclose

 val pclose 
   (stream : System__address.__split)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__pclose.pclose stream)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom pclose__post_axiom :
  (forall stream  : System__address.__split [(System__crtl__pclose.pclose stream)].
   ( (System__address.dynamic_property System__address.first System__address.last stream) -> (let result = (System__crtl__pclose.pclose stream) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "popen" defined at s-crtl.ads:189, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__popen__axiom
 use import "_gnatprove_standard".Main
 use        System__address
 use        System__crtl__popen

 val popen 
   (command : System__address.__split) (mode : System__address.__split)  :System__address.__split
  requires { true }
  ensures { ( (result = (System__crtl__popen.popen command mode)) /\ (System__address.dynamic_property System__address.first System__address.last result) ) }

 
 axiom popen__post_axiom :
  (forall command mode  : System__address.__split [(System__crtl__popen.popen command mode)].
   ( ( (System__address.dynamic_property System__address.first System__address.last command) /\ (System__address.dynamic_property System__address.first System__address.last mode) ) -> (let result = (System__crtl__popen.popen command mode) in (
    (System__address.dynamic_property System__address.first System__address.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "realloc" defined at s-crtl.ads:192, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__realloc__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address
 use        System__crtl__size_t
 use        System__crtl__realloc

 val realloc 
   (ptr : System__address.__split) (size : BV64.t)  :System__address.__split
  requires { true }
  ensures { ( (result = (System__crtl__realloc.realloc ptr size)) /\ (System__address.dynamic_property System__address.first System__address.last result) ) }

 
 axiom realloc__post_axiom :
  (forall ptr  : System__address.__split.
  (forall size  : BV64.t [(System__crtl__realloc.realloc ptr size)].
   ( ( (System__address.dynamic_property System__address.first System__address.last ptr) /\ (System__crtl__size_t.in_range size) ) -> (let result = (System__crtl__realloc.realloc ptr size) in (
    (System__address.dynamic_property System__address.first System__address.last result)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "rewind" defined at s-crtl.ads:196, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__rewind__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__files

 val rewind 
   (stream : System__crtl__files.__split)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "rmdir" defined at s-crtl.ads:199, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__rmdir__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        System__crtl__int
 use        System__crtl__rmdir

 val rmdir 
   (dir_name : Standard__string.string)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__rmdir.rmdir dir_name)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom rmdir__post_axiom :
  (forall dir_name  : Standard__string.string [(System__crtl__rmdir.rmdir dir_name)].
   ( true -> (let result = (System__crtl__rmdir.rmdir dir_name) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "chdir" defined at s-crtl.ads:202, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__chdir__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        System__crtl__int
 use        System__crtl__chdir

 val chdir 
   (dir_name : Standard__string.string)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__chdir.chdir dir_name)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom chdir__post_axiom :
  (forall dir_name  : Standard__string.string [(System__crtl__chdir.chdir dir_name)].
   ( true -> (let result = (System__crtl__chdir.chdir dir_name) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "mkdir" defined at s-crtl.ads:205, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__mkdir__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        System__crtl__int
 use        System__crtl__filename_encoding
 use        System__crtl__mkdir

 val mkdir 
   (dir_name : Standard__string.string) (encoding : int)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__mkdir.mkdir dir_name encoding)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom mkdir__post_axiom :
  (forall dir_name  : Standard__string.string.
  (forall encoding  : int [(System__crtl__mkdir.mkdir dir_name encoding)].
   ( (System__crtl__filename_encoding.in_range encoding) -> (let result = (System__crtl__mkdir.mkdir dir_name encoding) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "setvbuf" defined at s-crtl.ads:210, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__setvbuf__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__size_t
 use        System__crtl__setvbuf

 val setvbuf 
   (stream : System__crtl__files.__split) (buffer : System__crtl__chars.__split) (mode : int) (size : BV64.t)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__setvbuf.setvbuf stream buffer mode size)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom setvbuf__post_axiom :
  (forall stream  : System__crtl__files.__split.
  (forall buffer  : System__crtl__chars.__split.
  (forall mode  : int.
  (forall size  : BV64.t [(System__crtl__setvbuf.setvbuf stream buffer mode size)].
   ( ( ( ( (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream) /\ (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last buffer) ) /\ (System__crtl__int.in_range mode) ) /\ (System__crtl__size_t.in_range size) ) -> (let result = (System__crtl__setvbuf.setvbuf stream buffer mode size) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    )))))

end

(* Module for declaring a program function (and possibly an axiom) for "tmpnam" defined at s-crtl.ads:217, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__tmpnam__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__chars

 val tmpnam 
   (str : System__crtl__chars.__split)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "tmpfile" defined at s-crtl.ads:220, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__tmpfile__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__tmpfile

 val tmpfile 
   (__void_param : unit)  :System__crtl__files.__split
  requires { true }
  ensures { ( (result = (System__crtl__tmpfile.tmpfile ())) /\ (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result) ) }

 
 axiom tmpfile__post_axiom :
  (forall __void_param  : unit [(System__crtl__tmpfile.tmpfile __void_param)].
   ( true -> (let result = (System__crtl__tmpfile.tmpfile __void_param) in (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "ungetc" defined at s-crtl.ads:223, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__ungetc__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__ungetc

 val ungetc 
   (c : int) (stream : System__crtl__files.__split)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__ungetc.ungetc c stream)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom ungetc__post_axiom :
  (forall c  : int.
  (forall stream  : System__crtl__files.__split [(System__crtl__ungetc.ungetc c stream)].
   ( ( (System__crtl__int.in_range c) /\ (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream) ) -> (let result = (System__crtl__ungetc.ungetc c stream) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "unlink" defined at s-crtl.ads:226, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__unlink__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__int
 use        System__crtl__unlink

 val unlink 
   (filename : System__crtl__chars.__split)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__unlink.unlink filename)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom unlink__post_axiom :
  (forall filename  : System__crtl__chars.__split [(System__crtl__unlink.unlink filename)].
   ( (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last filename) -> (let result = (System__crtl__unlink.unlink filename) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "open" defined at s-crtl.ads:229, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__open__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__int
 use        System__crtl__open

 val open 
   (filename : System__crtl__chars.__split) (oflag : int)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__open.open filename oflag)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom open__post_axiom :
  (forall filename  : System__crtl__chars.__split.
  (forall oflag  : int [(System__crtl__open.open filename oflag)].
   ( ( (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last filename) /\ (System__crtl__int.in_range oflag) ) -> (let result = (System__crtl__open.open filename oflag) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "close" defined at s-crtl.ads:232, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__close__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__close

 val close 
   (fd : int)  :System__crtl__int.__split
  requires { true }
  ensures { ( (result = (System__crtl__close.close fd)) /\ (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result) ) }

 
 axiom close__post_axiom :
  (forall fd  : int [(System__crtl__close.close fd)].
   ( (System__crtl__int.in_range fd) -> (let result = (System__crtl__close.close fd) in (
    (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "read" defined at s-crtl.ads:235, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__read__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__crtl__chars
 use        System__crtl__int
 use        System__crtl__size_t
 use        System__crtl__ssize_t
 use        System__crtl__read

 val read 
   (fd : int) (buffer : System__crtl__chars.__split) (count : BV64.t)  :System__crtl__ssize_t.__split
  requires { true }
  ensures { ( (result = (System__crtl__read.read fd buffer count)) /\ (System__crtl__ssize_t.dynamic_property System__crtl__ssize_t.first System__crtl__ssize_t.last result) ) }

 
 axiom read__post_axiom :
  (forall fd  : int.
  (forall buffer  : System__crtl__chars.__split.
  (forall count  : BV64.t [(System__crtl__read.read fd buffer count)].
   ( ( ( (System__crtl__int.in_range fd) /\ (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last buffer) ) /\ (System__crtl__size_t.in_range count) ) -> (let result = (System__crtl__read.read fd buffer count) in (
    (System__crtl__ssize_t.dynamic_property System__crtl__ssize_t.first System__crtl__ssize_t.last result)))
    ))))

end

(* Module for declaring a program function (and possibly an axiom) for "write" defined at s-crtl.ads:238, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__write__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__crtl__chars
 use        System__crtl__int
 use        System__crtl__size_t
 use        System__crtl__ssize_t
 use        System__crtl__write

 val write 
   (fd : int) (buffer : System__crtl__chars.__split) (count : BV64.t)  :System__crtl__ssize_t.__split
  requires { true }
  ensures { ( (result = (System__crtl__write.write fd buffer count)) /\ (System__crtl__ssize_t.dynamic_property System__crtl__ssize_t.first System__crtl__ssize_t.last result) ) }

 
 axiom write__post_axiom :
  (forall fd  : int.
  (forall buffer  : System__crtl__chars.__split.
  (forall count  : BV64.t [(System__crtl__write.write fd buffer count)].
   ( ( ( (System__crtl__int.in_range fd) /\ (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last buffer) ) /\ (System__crtl__size_t.in_range count) ) -> (let result = (System__crtl__write.write fd buffer count) in (
    (System__crtl__ssize_t.dynamic_property System__crtl__ssize_t.first System__crtl__ssize_t.last result)))
    ))))

end

(* Module for declaring a program function (and possibly an axiom) for "stdin" defined at i-cstrea.ads:72, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__stdin__axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__stdin

 val stdin 
   (__void_param : unit)  :Interfaces__c_streams__files.__split
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__stdin.stdin ())) /\ (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result) ) }

 
 axiom stdin__post_axiom :
  (forall __void_param  : unit [(Interfaces__c_streams__stdin.stdin __void_param)].
   ( true -> (let result = (Interfaces__c_streams__stdin.stdin __void_param) in (
    (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "stdout" defined at i-cstrea.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__stdout__axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__stdout

 val stdout 
   (__void_param : unit)  :Interfaces__c_streams__files.__split
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__stdout.stdout ())) /\ (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result) ) }

 
 axiom stdout__post_axiom :
  (forall __void_param  : unit [(Interfaces__c_streams__stdout.stdout __void_param)].
   ( true -> (let result = (Interfaces__c_streams__stdout.stdout __void_param) in (
    (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "stderr" defined at i-cstrea.ads:74, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__stderr__axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__stderr

 val stderr 
   (__void_param : unit)  :Interfaces__c_streams__files.__split
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__stderr.stderr ())) /\ (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result) ) }

 
 axiom stderr__post_axiom :
  (forall __void_param  : unit [(Interfaces__c_streams__stderr.stderr __void_param)].
   ( true -> (let result = (Interfaces__c_streams__stderr.stderr __void_param) in (
    (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "feof" defined at i-cstrea.ads:95, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__feof__axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__int
 use        Interfaces__c_streams__feof

 val feof 
   (stream : Interfaces__c_streams__files.__split)  :Interfaces__c_streams__int.__split
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__feof.feof stream)) /\ (Interfaces__c_streams__int.dynamic_property Interfaces__c_streams__int.first Interfaces__c_streams__int.last result) ) }

 
 axiom feof__post_axiom :
  (forall stream  : Interfaces__c_streams__files.__split [(Interfaces__c_streams__feof.feof stream)].
   ( (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream) -> (let result = (Interfaces__c_streams__feof.feof stream) in (
    (Interfaces__c_streams__int.dynamic_property Interfaces__c_streams__int.first Interfaces__c_streams__int.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "ferror" defined at i-cstrea.ads:97, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__ferror__axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__int
 use        Interfaces__c_streams__ferror

 val ferror 
   (stream : Interfaces__c_streams__files.__split)  :Interfaces__c_streams__int.__split
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__ferror.ferror stream)) /\ (Interfaces__c_streams__int.dynamic_property Interfaces__c_streams__int.first Interfaces__c_streams__int.last result) ) }

 
 axiom ferror__post_axiom :
  (forall stream  : Interfaces__c_streams__files.__split [(Interfaces__c_streams__ferror.ferror stream)].
   ( (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream) -> (let result = (Interfaces__c_streams__ferror.ferror stream) in (
    (Interfaces__c_streams__int.dynamic_property Interfaces__c_streams__int.first Interfaces__c_streams__int.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fileno" defined at i-cstrea.ads:106, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__fileno__axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__int
 use        Interfaces__c_streams__fileno

 val fileno 
   (stream : Interfaces__c_streams__files.__split)  :Interfaces__c_streams__int.__split
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__fileno.fileno stream)) /\ (Interfaces__c_streams__int.dynamic_property Interfaces__c_streams__int.first Interfaces__c_streams__int.last result) ) }

 
 axiom fileno__post_axiom :
  (forall stream  : Interfaces__c_streams__files.__split [(Interfaces__c_streams__fileno.fileno stream)].
   ( (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream) -> (let result = (Interfaces__c_streams__fileno.fileno stream) in (
    (Interfaces__c_streams__int.dynamic_property Interfaces__c_streams__int.first Interfaces__c_streams__int.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fread" defined at i-cstrea.ads:128, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__fread__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__size_t
 use        Interfaces__c_streams__voids
 use        Interfaces__c_streams__fread

 val fread 
   (buffer : Interfaces__c_streams__voids.__split) (size : BV64.t) (count : BV64.t) (stream : Interfaces__c_streams__files.__split)  :Interfaces__c_streams__size_t.__split
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__fread.fread buffer size count stream)) /\ (Interfaces__c_streams__size_t.dynamic_property Interfaces__c_streams__size_t.first Interfaces__c_streams__size_t.last result) ) }

 
 axiom fread__post_axiom :
  (forall buffer  : Interfaces__c_streams__voids.__split.
  (forall size count  : BV64.t.
  (forall stream  : Interfaces__c_streams__files.__split [(Interfaces__c_streams__fread.fread buffer size count stream)].
   ( ( ( ( (Interfaces__c_streams__voids.dynamic_property Interfaces__c_streams__voids.first Interfaces__c_streams__voids.last buffer) /\ (Interfaces__c_streams__size_t.in_range size) ) /\ (Interfaces__c_streams__size_t.in_range count) ) /\ (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream) ) -> (let result = (Interfaces__c_streams__fread.fread buffer size count stream) in (
    (Interfaces__c_streams__size_t.dynamic_property Interfaces__c_streams__size_t.first Interfaces__c_streams__size_t.last result)))
    ))))

end

(* Module for declaring a program function (and possibly an axiom) for "fread__2" defined at i-cstrea.ads:134, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__fread__2__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__size_t
 use        Interfaces__c_streams__voids
 use        Interfaces__c_streams__fread__2

 val fread__2 
   (buffer : Interfaces__c_streams__voids.__split) (index : BV64.t) (size : BV64.t) (count : BV64.t) (stream : Interfaces__c_streams__files.__split)  :Interfaces__c_streams__size_t.__split
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__fread__2.fread__2 buffer index size count stream)) /\ (Interfaces__c_streams__size_t.dynamic_property Interfaces__c_streams__size_t.first Interfaces__c_streams__size_t.last result) ) }

 
 axiom fread__2__post_axiom :
  (forall buffer  : Interfaces__c_streams__voids.__split.
  (forall index size count  : BV64.t.
  (forall stream  : Interfaces__c_streams__files.__split [(Interfaces__c_streams__fread__2.fread__2 buffer index size count stream)].
   ( ( ( ( ( (Interfaces__c_streams__voids.dynamic_property Interfaces__c_streams__voids.first Interfaces__c_streams__voids.last buffer) /\ (Interfaces__c_streams__size_t.in_range index) ) /\ (Interfaces__c_streams__size_t.in_range size) ) /\ (Interfaces__c_streams__size_t.in_range count) ) /\ (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream) ) -> (let result = (Interfaces__c_streams__fread__2.fread__2 buffer index size count stream) in (
    (Interfaces__c_streams__size_t.dynamic_property Interfaces__c_streams__size_t.first Interfaces__c_streams__size_t.last result)))
    ))))

end

(* Module for declaring a program function (and possibly an axiom) for "fwrite" defined at i-cstrea.ads:171, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__fwrite__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__size_t
 use        Interfaces__c_streams__voids
 use        Interfaces__c_streams__fwrite

 val fwrite 
   (buffer : Interfaces__c_streams__voids.__split) (size : BV64.t) (count : BV64.t) (stream : Interfaces__c_streams__files.__split)  :Interfaces__c_streams__size_t.__split
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__fwrite.fwrite buffer size count stream)) /\ (Interfaces__c_streams__size_t.dynamic_property Interfaces__c_streams__size_t.first Interfaces__c_streams__size_t.last result) ) }

 
 axiom fwrite__post_axiom :
  (forall buffer  : Interfaces__c_streams__voids.__split.
  (forall size count  : BV64.t.
  (forall stream  : Interfaces__c_streams__files.__split [(Interfaces__c_streams__fwrite.fwrite buffer size count stream)].
   ( ( ( ( (Interfaces__c_streams__voids.dynamic_property Interfaces__c_streams__voids.first Interfaces__c_streams__voids.last buffer) /\ (Interfaces__c_streams__size_t.in_range size) ) /\ (Interfaces__c_streams__size_t.in_range count) ) /\ (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream) ) -> (let result = (Interfaces__c_streams__fwrite.fwrite buffer size count stream) in (
    (Interfaces__c_streams__size_t.dynamic_property Interfaces__c_streams__size_t.first Interfaces__c_streams__size_t.last result)))
    ))))

end

(* Module for declaring a program function (and possibly an axiom) for "setvbuf" defined at i-cstrea.ads:184, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__setvbuf__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c_streams__chars
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__int
 use        Interfaces__c_streams__size_t
 use        Interfaces__c_streams__setvbuf

 val setvbuf 
   (stream : Interfaces__c_streams__files.__split) (buffer : Interfaces__c_streams__chars.__split) (mode : int) (size : BV64.t)  :Interfaces__c_streams__int.__split
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__setvbuf.setvbuf stream buffer mode size)) /\ (Interfaces__c_streams__int.dynamic_property Interfaces__c_streams__int.first Interfaces__c_streams__int.last result) ) }

 
 axiom setvbuf__post_axiom :
  (forall stream  : Interfaces__c_streams__files.__split.
  (forall buffer  : Interfaces__c_streams__chars.__split.
  (forall mode  : int.
  (forall size  : BV64.t [(Interfaces__c_streams__setvbuf.setvbuf stream buffer mode size)].
   ( ( ( ( (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream) /\ (Interfaces__c_streams__chars.dynamic_property Interfaces__c_streams__chars.first Interfaces__c_streams__chars.last buffer) ) /\ (Interfaces__c_streams__int.in_range mode) ) /\ (Interfaces__c_streams__size_t.in_range size) ) -> (let result = (Interfaces__c_streams__setvbuf.setvbuf stream buffer mode size) in (
    (Interfaces__c_streams__int.dynamic_property Interfaces__c_streams__int.first Interfaces__c_streams__int.last result)))
    )))))

end

(* Module for declaring a program function (and possibly an axiom) for "file_exists" defined at i-cstrea.ads:212, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__file_exists__axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__chars
 use        Interfaces__c_streams__int
 use        Interfaces__c_streams__file_exists

 val file_exists 
   (name : Interfaces__c_streams__chars.__split)  :Interfaces__c_streams__int.__split
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__file_exists.file_exists name)) /\ (Interfaces__c_streams__int.dynamic_property Interfaces__c_streams__int.first Interfaces__c_streams__int.last result) ) }

 
 axiom file_exists__post_axiom :
  (forall name  : Interfaces__c_streams__chars.__split [(Interfaces__c_streams__file_exists.file_exists name)].
   ( (Interfaces__c_streams__chars.dynamic_property Interfaces__c_streams__chars.first Interfaces__c_streams__chars.last name) -> (let result = (Interfaces__c_streams__file_exists.file_exists name) in (
    (Interfaces__c_streams__int.dynamic_property Interfaces__c_streams__int.first Interfaces__c_streams__int.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_regular_file" defined at i-cstrea.ads:215, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__is_regular_file__axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        Interfaces__c_streams__is_regular_file

 val is_regular_file 
   (handle : int)  :Interfaces__c_streams__int.__split
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__is_regular_file.is_regular_file handle)) /\ (Interfaces__c_streams__int.dynamic_property Interfaces__c_streams__int.first Interfaces__c_streams__int.last result) ) }

 
 axiom is_regular_file__post_axiom :
  (forall handle  : int [(Interfaces__c_streams__is_regular_file.is_regular_file handle)].
   ( (Interfaces__c_streams__int.in_range handle) -> (let result = (Interfaces__c_streams__is_regular_file.is_regular_file handle) in (
    (Interfaces__c_streams__int.dynamic_property Interfaces__c_streams__int.first Interfaces__c_streams__int.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "set_binary_mode" defined at i-cstrea.ads:223, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__set_binary_mode__axiom
 use import "_gnatprove_standard".Main

 val set_binary_mode 
   (handle : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "set_text_mode" defined at i-cstrea.ads:224, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__set_text_mode__axiom
 use import "_gnatprove_standard".Main

 val set_text_mode 
   (handle : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "set_mode" defined at i-cstrea.ads:254, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__set_mode__axiom
 use import "_gnatprove_standard".Main

 val set_mode 
   (handle : int) (mode : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "full_name" defined at i-cstrea.ads:262, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__full_name__axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__chars

 val full_name 
   (nam : Interfaces__c_streams__chars.__split) (buffer : Interfaces__c_streams__chars.__split)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "get_wc_encoding_method" defined at s-wchcon.ads:203, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__wch_con__get_wc_encoding_method__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        System__wch_con__wc_encoding_method
 use        System__wch_con__get_wc_encoding_method

 val get_wc_encoding_method 
   (c : int)  :System__wch_con__wc_encoding_method.__split
  requires { true }
  ensures { ( (result = (System__wch_con__get_wc_encoding_method.get_wc_encoding_method c)) /\ (System__wch_con__wc_encoding_method.dynamic_property System__wch_con__wc_encoding_method.first System__wch_con__wc_encoding_method.last result) ) }

 
 axiom get_wc_encoding_method__post_axiom :
  (forall c  : int [(System__wch_con__get_wc_encoding_method.get_wc_encoding_method c)].
   ( (Standard__character.in_range c) -> (let result = (System__wch_con__get_wc_encoding_method.get_wc_encoding_method c) in (
    (System__wch_con__wc_encoding_method.dynamic_property System__wch_con__wc_encoding_method.first System__wch_con__wc_encoding_method.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_wc_encoding_method__2" defined at s-wchcon.ads:207, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__wch_con__get_wc_encoding_method__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        System__wch_con__wc_encoding_method
 use        System__wch_con__get_wc_encoding_method__2

 val get_wc_encoding_method__2 
   (s : Standard__string.string)  :System__wch_con__wc_encoding_method.__split
  requires { true }
  ensures { ( (result = (System__wch_con__get_wc_encoding_method__2.get_wc_encoding_method__2 s)) /\ (System__wch_con__wc_encoding_method.dynamic_property System__wch_con__wc_encoding_method.first System__wch_con__wc_encoding_method.last result) ) }

 
 axiom get_wc_encoding_method__2__post_axiom :
  (forall s  : Standard__string.string [(System__wch_con__get_wc_encoding_method__2.get_wc_encoding_method__2 s)].
   ( true -> (let result = (System__wch_con__get_wc_encoding_method__2.get_wc_encoding_method__2 s) in (
    (System__wch_con__wc_encoding_method.dynamic_property System__wch_con__wc_encoding_method.first System__wch_con__wc_encoding_method.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_start_of_encoding" defined at s-wchcon.ads:212, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__wch_con__is_start_of_encoding__axiom
 use import "_gnatprove_standard".Main
 use        System__wch_con__is_start_of_encoding

 val is_start_of_encoding 
   (c : int) (em : int)  :bool
  requires { true }
  ensures { (result = (System__wch_con__is_start_of_encoding.is_start_of_encoding c em)) }


end

(* Module for declaring a program function (and possibly an axiom) for "create" defined at a-textio.ads:86, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__create__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 val create 
   (file : ref Ada__text_io__file_type.file_type) (mode : int) (name : Standard__string.string) (form : Standard__string.string)  :unit
  requires { true }
  ensures { true }
  writes {file }


end

(* Module for declaring a program function (and possibly an axiom) for "open" defined at a-textio.ads:92, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__open__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 val open 
   (file : ref Ada__text_io__file_type.file_type) (mode : int) (name : Standard__string.string) (form : Standard__string.string)  :unit
  requires { true }
  ensures { true }
  writes {file }


end

(* Module for declaring a program function (and possibly an axiom) for "close" defined at a-textio.ads:98, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__close__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val close 
   (file : ref Ada__text_io__file_type.file_type)  :unit
  requires { true }
  ensures { true }
  writes {file }


end

(* Module for declaring a program function (and possibly an axiom) for "delete" defined at a-textio.ads:99, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__delete__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val delete 
   (file : ref Ada__text_io__file_type.file_type)  :unit
  requires { true }
  ensures { true }
  writes {file }


end

(* Module for declaring a program function (and possibly an axiom) for "reset" defined at a-textio.ads:100, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__reset__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val reset 
   (file : ref Ada__text_io__file_type.file_type) (mode : int)  :unit
  requires { true }
  ensures { true }
  writes {file }


end

(* Module for declaring a program function (and possibly an axiom) for "reset__2" defined at a-textio.ads:101, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__reset__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val reset__2 
   (file : ref Ada__text_io__file_type.file_type)  :unit
  requires { true }
  ensures { true }
  writes {file }


end

(* Module for declaring a program function (and possibly an axiom) for "mode" defined at a-textio.ads:103, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__mode__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_mode
 use        Ada__text_io__mode

 val mode 
   (file : Ada__text_io__file_type.file_type)  :Ada__text_io__file_mode.__split
  requires { true }
  ensures { ( (result = (Ada__text_io__mode.mode file)) /\ (Ada__text_io__file_mode.dynamic_property Ada__text_io__file_mode.first Ada__text_io__file_mode.last result) ) }

 
 axiom mode__post_axiom :
  (forall file  : Ada__text_io__file_type.file_type [(Ada__text_io__mode.mode file)].
   ( true -> (let result = (Ada__text_io__mode.mode file) in (
    (Ada__text_io__file_mode.dynamic_property Ada__text_io__file_mode.first Ada__text_io__file_mode.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "name" defined at a-textio.ads:104, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__name__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive
 use        Ada__text_io__file_type
 use        Ada__text_io__name

 val name 
   (file : Ada__text_io__file_type.file_type)  :Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__text_io__name.name file)) /\ (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first result) (Standard__string.last result)) ) }

 
 axiom name__post_axiom :
  (forall file  : Ada__text_io__file_type.file_type [(Ada__text_io__name.name file)].
   ( true -> (let result = (Ada__text_io__name.name file) in (
    (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first result) (Standard__string.last result))))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "form" defined at a-textio.ads:105, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__form__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive
 use        Ada__text_io__file_type
 use        Ada__text_io__form

 val form 
   (file : Ada__text_io__file_type.file_type)  :Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__text_io__form.form file)) /\ (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first result) (Standard__string.last result)) ) }

 
 axiom form__post_axiom :
  (forall file  : Ada__text_io__file_type.file_type [(Ada__text_io__form.form file)].
   ( true -> (let result = (Ada__text_io__form.form file) in (
    (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first result) (Standard__string.last result))))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_open" defined at a-textio.ads:107, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__is_open__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__is_open

 val is_open 
   (file : Ada__text_io__file_type.file_type)  :bool
  requires { true }
  ensures { (result = (Ada__text_io__is_open.is_open file)) }


end

(* Module for declaring a program function (and possibly an axiom) for "set_input" defined at a-textio.ads:113, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_input__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_input 
   (file : Ada__text_io__file_type.file_type)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "set_output" defined at a-textio.ads:114, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_output__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_output 
   (file : Ada__text_io__file_type.file_type)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "set_error" defined at a-textio.ads:115, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_error__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_error 
   (file : Ada__text_io__file_type.file_type)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "standard_input" defined at a-textio.ads:117, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__standard_input__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__standard_input

 val standard_input 
   (__void_param : unit)  :Ada__text_io__file_type.file_type
  requires { true }
  ensures { (result = (Ada__text_io__standard_input.standard_input ())) }


end

(* Module for declaring a program function (and possibly an axiom) for "standard_output" defined at a-textio.ads:118, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__standard_output__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__standard_output

 val standard_output 
   (__void_param : unit)  :Ada__text_io__file_type.file_type
  requires { true }
  ensures { (result = (Ada__text_io__standard_output.standard_output ())) }


end

(* Module for declaring a program function (and possibly an axiom) for "standard_error" defined at a-textio.ads:119, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__standard_error__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__standard_error

 val standard_error 
   (__void_param : unit)  :Ada__text_io__file_type.file_type
  requires { true }
  ensures { (result = (Ada__text_io__standard_error.standard_error ())) }


end

(* Module for declaring a program function (and possibly an axiom) for "current_input" defined at a-textio.ads:121, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__current_input__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__current_input

 val current_input 
   (__void_param : unit)  :Ada__text_io__file_type.file_type
  requires { true }
  ensures { (result = (Ada__text_io__current_input.current_input ())) }


end

(* Module for declaring a program function (and possibly an axiom) for "current_output" defined at a-textio.ads:122, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__current_output__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__current_output

 val current_output 
   (__void_param : unit)  :Ada__text_io__file_type.file_type
  requires { true }
  ensures { (result = (Ada__text_io__current_output.current_output ())) }


end

(* Module for declaring a program function (and possibly an axiom) for "current_error" defined at a-textio.ads:123, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__current_error__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__current_error

 val current_error 
   (__void_param : unit)  :Ada__text_io__file_type.file_type
  requires { true }
  ensures { (result = (Ada__text_io__current_error.current_error ())) }


end

(* Module for declaring a program function (and possibly an axiom) for "flush" defined at a-textio.ads:142, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__flush__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val flush 
   (file : Ada__text_io__file_type.file_type)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "flush__2" defined at a-textio.ads:143, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__flush__2__axiom
 use import "_gnatprove_standard".Main

 val flush__2 
   (__void_param : unit)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "set_line_length" defined at a-textio.ads:149, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_line_length__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_line_length 
   (file : Ada__text_io__file_type.file_type) (to__ : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "set_line_length__2" defined at a-textio.ads:150, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_line_length__2__axiom
 use import "_gnatprove_standard".Main

 val set_line_length__2 
   (to__ : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "set_page_length" defined at a-textio.ads:152, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_page_length__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_page_length 
   (file : Ada__text_io__file_type.file_type) (to__ : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "set_page_length__2" defined at a-textio.ads:153, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_page_length__2__axiom
 use import "_gnatprove_standard".Main

 val set_page_length__2 
   (to__ : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "line_length" defined at a-textio.ads:155, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__line_length__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__count
 use        Ada__text_io__line_length

 val line_length 
   (file : Ada__text_io__file_type.file_type)  :Ada__text_io__count.__split
  requires { true }
  ensures { ( (result = (Ada__text_io__line_length.line_length file)) /\ (Ada__text_io__count.dynamic_property Ada__text_io__count.first Ada__text_io__count.last result) ) }

 
 axiom line_length__post_axiom :
  (forall file  : Ada__text_io__file_type.file_type [(Ada__text_io__line_length.line_length file)].
   ( true -> (let result = (Ada__text_io__line_length.line_length file) in (
    (Ada__text_io__count.dynamic_property Ada__text_io__count.first Ada__text_io__count.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "line_length__2" defined at a-textio.ads:156, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__line_length__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count
 use        Ada__text_io__line_length__2

 val line_length__2 
   (__void_param : unit)  :Ada__text_io__count.__split
  requires { true }
  ensures { ( (result = (Ada__text_io__line_length__2.line_length__2 ())) /\ (Ada__text_io__count.dynamic_property Ada__text_io__count.first Ada__text_io__count.last result) ) }

 
 axiom line_length__2__post_axiom :
  (forall __void_param  : unit [(Ada__text_io__line_length__2.line_length__2 __void_param)].
   ( true -> (let result = (Ada__text_io__line_length__2.line_length__2 __void_param) in (
    (Ada__text_io__count.dynamic_property Ada__text_io__count.first Ada__text_io__count.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "page_length" defined at a-textio.ads:158, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__page_length__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__count
 use        Ada__text_io__page_length

 val page_length 
   (file : Ada__text_io__file_type.file_type)  :Ada__text_io__count.__split
  requires { true }
  ensures { ( (result = (Ada__text_io__page_length.page_length file)) /\ (Ada__text_io__count.dynamic_property Ada__text_io__count.first Ada__text_io__count.last result) ) }

 
 axiom page_length__post_axiom :
  (forall file  : Ada__text_io__file_type.file_type [(Ada__text_io__page_length.page_length file)].
   ( true -> (let result = (Ada__text_io__page_length.page_length file) in (
    (Ada__text_io__count.dynamic_property Ada__text_io__count.first Ada__text_io__count.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "page_length__2" defined at a-textio.ads:159, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__page_length__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count
 use        Ada__text_io__page_length__2

 val page_length__2 
   (__void_param : unit)  :Ada__text_io__count.__split
  requires { true }
  ensures { ( (result = (Ada__text_io__page_length__2.page_length__2 ())) /\ (Ada__text_io__count.dynamic_property Ada__text_io__count.first Ada__text_io__count.last result) ) }

 
 axiom page_length__2__post_axiom :
  (forall __void_param  : unit [(Ada__text_io__page_length__2.page_length__2 __void_param)].
   ( true -> (let result = (Ada__text_io__page_length__2.page_length__2 __void_param) in (
    (Ada__text_io__count.dynamic_property Ada__text_io__count.first Ada__text_io__count.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "new_line" defined at a-textio.ads:165, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__new_line__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val new_line 
   (file : Ada__text_io__file_type.file_type) (spacing : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "new_line__2" defined at a-textio.ads:166, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__new_line__2__axiom
 use import "_gnatprove_standard".Main

 val new_line__2 
   (spacing : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "skip_line" defined at a-textio.ads:168, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__skip_line__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val skip_line 
   (file : Ada__text_io__file_type.file_type) (spacing : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "skip_line__2" defined at a-textio.ads:169, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__skip_line__2__axiom
 use import "_gnatprove_standard".Main

 val skip_line__2 
   (spacing : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "end_of_line" defined at a-textio.ads:171, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_line__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__end_of_line

 val end_of_line 
   (file : Ada__text_io__file_type.file_type)  :bool
  requires { true }
  ensures { (result = (Ada__text_io__end_of_line.end_of_line file)) }


end

(* Module for declaring a program function (and possibly an axiom) for "end_of_line__2" defined at a-textio.ads:172, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_line__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__end_of_line__2

 val end_of_line__2 
   (__void_param : unit)  :bool
  requires { true }
  ensures { (result = (Ada__text_io__end_of_line__2.end_of_line__2 ())) }


end

(* Module for declaring a program function (and possibly an axiom) for "new_page" defined at a-textio.ads:174, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__new_page__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val new_page 
   (file : Ada__text_io__file_type.file_type)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "new_page__2" defined at a-textio.ads:175, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__new_page__2__axiom
 use import "_gnatprove_standard".Main

 val new_page__2 
   (__void_param : unit)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "skip_page" defined at a-textio.ads:177, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__skip_page__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val skip_page 
   (file : Ada__text_io__file_type.file_type)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "skip_page__2" defined at a-textio.ads:178, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__skip_page__2__axiom
 use import "_gnatprove_standard".Main

 val skip_page__2 
   (__void_param : unit)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "end_of_page" defined at a-textio.ads:180, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_page__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__end_of_page

 val end_of_page 
   (file : Ada__text_io__file_type.file_type)  :bool
  requires { true }
  ensures { (result = (Ada__text_io__end_of_page.end_of_page file)) }


end

(* Module for declaring a program function (and possibly an axiom) for "end_of_page__2" defined at a-textio.ads:181, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_page__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__end_of_page__2

 val end_of_page__2 
   (__void_param : unit)  :bool
  requires { true }
  ensures { (result = (Ada__text_io__end_of_page__2.end_of_page__2 ())) }


end

(* Module for declaring a program function (and possibly an axiom) for "end_of_file" defined at a-textio.ads:183, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_file__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__end_of_file

 val end_of_file 
   (file : Ada__text_io__file_type.file_type)  :bool
  requires { true }
  ensures { (result = (Ada__text_io__end_of_file.end_of_file file)) }


end

(* Module for declaring a program function (and possibly an axiom) for "end_of_file__2" defined at a-textio.ads:184, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_file__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__end_of_file__2

 val end_of_file__2 
   (__void_param : unit)  :bool
  requires { true }
  ensures { (result = (Ada__text_io__end_of_file__2.end_of_file__2 ())) }


end

(* Module for declaring a program function (and possibly an axiom) for "set_col" defined at a-textio.ads:186, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_col__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_col 
   (file : Ada__text_io__file_type.file_type) (to__ : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "set_col__2" defined at a-textio.ads:187, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_col__2__axiom
 use import "_gnatprove_standard".Main

 val set_col__2 
   (to__ : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "set_line" defined at a-textio.ads:189, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_line__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_line 
   (file : Ada__text_io__file_type.file_type) (to__ : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "set_line__2" defined at a-textio.ads:190, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_line__2__axiom
 use import "_gnatprove_standard".Main

 val set_line__2 
   (to__ : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "col" defined at a-textio.ads:192, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__col__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__positive_count
 use        Ada__text_io__col

 val col 
   (file : Ada__text_io__file_type.file_type)  :Ada__text_io__positive_count.__split
  requires { true }
  ensures { ( (result = (Ada__text_io__col.col file)) /\ (Ada__text_io__positive_count.dynamic_property Ada__text_io__positive_count.first Ada__text_io__positive_count.last result) ) }

 
 axiom col__post_axiom :
  (forall file  : Ada__text_io__file_type.file_type [(Ada__text_io__col.col file)].
   ( true -> (let result = (Ada__text_io__col.col file) in (
    (Ada__text_io__positive_count.dynamic_property Ada__text_io__positive_count.first Ada__text_io__positive_count.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "col__2" defined at a-textio.ads:193, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__col__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count
 use        Ada__text_io__col__2

 val col__2 
   (__void_param : unit)  :Ada__text_io__positive_count.__split
  requires { true }
  ensures { ( (result = (Ada__text_io__col__2.col__2 ())) /\ (Ada__text_io__positive_count.dynamic_property Ada__text_io__positive_count.first Ada__text_io__positive_count.last result) ) }

 
 axiom col__2__post_axiom :
  (forall __void_param  : unit [(Ada__text_io__col__2.col__2 __void_param)].
   ( true -> (let result = (Ada__text_io__col__2.col__2 __void_param) in (
    (Ada__text_io__positive_count.dynamic_property Ada__text_io__positive_count.first Ada__text_io__positive_count.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "line" defined at a-textio.ads:195, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__line__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__positive_count
 use        Ada__text_io__line

 val line 
   (file : Ada__text_io__file_type.file_type)  :Ada__text_io__positive_count.__split
  requires { true }
  ensures { ( (result = (Ada__text_io__line.line file)) /\ (Ada__text_io__positive_count.dynamic_property Ada__text_io__positive_count.first Ada__text_io__positive_count.last result) ) }

 
 axiom line__post_axiom :
  (forall file  : Ada__text_io__file_type.file_type [(Ada__text_io__line.line file)].
   ( true -> (let result = (Ada__text_io__line.line file) in (
    (Ada__text_io__positive_count.dynamic_property Ada__text_io__positive_count.first Ada__text_io__positive_count.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "line__2" defined at a-textio.ads:196, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__line__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count
 use        Ada__text_io__line__2

 val line__2 
   (__void_param : unit)  :Ada__text_io__positive_count.__split
  requires { true }
  ensures { ( (result = (Ada__text_io__line__2.line__2 ())) /\ (Ada__text_io__positive_count.dynamic_property Ada__text_io__positive_count.first Ada__text_io__positive_count.last result) ) }

 
 axiom line__2__post_axiom :
  (forall __void_param  : unit [(Ada__text_io__line__2.line__2 __void_param)].
   ( true -> (let result = (Ada__text_io__line__2.line__2 __void_param) in (
    (Ada__text_io__positive_count.dynamic_property Ada__text_io__positive_count.first Ada__text_io__positive_count.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "page" defined at a-textio.ads:198, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__page__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__positive_count
 use        Ada__text_io__page

 val page 
   (file : Ada__text_io__file_type.file_type)  :Ada__text_io__positive_count.__split
  requires { true }
  ensures { ( (result = (Ada__text_io__page.page file)) /\ (Ada__text_io__positive_count.dynamic_property Ada__text_io__positive_count.first Ada__text_io__positive_count.last result) ) }

 
 axiom page__post_axiom :
  (forall file  : Ada__text_io__file_type.file_type [(Ada__text_io__page.page file)].
   ( true -> (let result = (Ada__text_io__page.page file) in (
    (Ada__text_io__positive_count.dynamic_property Ada__text_io__positive_count.first Ada__text_io__positive_count.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "page__2" defined at a-textio.ads:199, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__page__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count
 use        Ada__text_io__page__2

 val page__2 
   (__void_param : unit)  :Ada__text_io__positive_count.__split
  requires { true }
  ensures { ( (result = (Ada__text_io__page__2.page__2 ())) /\ (Ada__text_io__positive_count.dynamic_property Ada__text_io__positive_count.first Ada__text_io__positive_count.last result) ) }

 
 axiom page__2__post_axiom :
  (forall __void_param  : unit [(Ada__text_io__page__2.page__2 __void_param)].
   ( true -> (let result = (Ada__text_io__page__2.page__2 __void_param) in (
    (Ada__text_io__positive_count.dynamic_property Ada__text_io__positive_count.first Ada__text_io__positive_count.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get" defined at a-textio.ads:205, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        Ada__text_io__file_type

 val get 
   (file : Ada__text_io__file_type.file_type) (item : ref Standard__character.__split)  :unit
  requires { true }
  ensures { (Standard__character.dynamic_property Standard__character.first Standard__character.last !item) }
  writes {item }


end

(* Module for declaring a program function (and possibly an axiom) for "get__2" defined at a-textio.ads:206, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character

 val get__2 
   (item : ref Standard__character.__split)  :unit
  requires { true }
  ensures { (Standard__character.dynamic_property Standard__character.first Standard__character.last !item) }
  writes {item }


end

(* Module for declaring a program function (and possibly an axiom) for "put" defined at a-textio.ads:207, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val put 
   (file : Ada__text_io__file_type.file_type) (item : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "put__2" defined at a-textio.ads:208, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put__2__axiom
 use import "_gnatprove_standard".Main

 val put__2 
   (item : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "look_ahead" defined at a-textio.ads:210, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__look_ahead__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        Ada__text_io__file_type

 val look_ahead 
   (file : Ada__text_io__file_type.file_type) (item : ref Standard__character.__split) (end_of_line : ref bool)  :unit
  requires { true }
  ensures { (Standard__character.dynamic_property Standard__character.first Standard__character.last !item) }
  writes {item, end_of_line }


end

(* Module for declaring a program function (and possibly an axiom) for "look_ahead__2" defined at a-textio.ads:215, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__look_ahead__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character

 val look_ahead__2 
   (item : ref Standard__character.__split) (end_of_line : ref bool)  :unit
  requires { true }
  ensures { (Standard__character.dynamic_property Standard__character.first Standard__character.last !item) }
  writes {item, end_of_line }


end

(* Module for declaring a program function (and possibly an axiom) for "get_immediate" defined at a-textio.ads:219, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_immediate__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        Ada__text_io__file_type

 val get_immediate 
   (file : Ada__text_io__file_type.file_type) (item : ref Standard__character.__split)  :unit
  requires { true }
  ensures { (Standard__character.dynamic_property Standard__character.first Standard__character.last !item) }
  writes {item }


end

(* Module for declaring a program function (and possibly an axiom) for "get_immediate__2" defined at a-textio.ads:223, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_immediate__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character

 val get_immediate__2 
   (item : ref Standard__character.__split)  :unit
  requires { true }
  ensures { (Standard__character.dynamic_property Standard__character.first Standard__character.last !item) }
  writes {item }


end

(* Module for declaring a program function (and possibly an axiom) for "get_immediate__3" defined at a-textio.ads:226, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_immediate__3__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        Ada__text_io__file_type

 val get_immediate__3 
   (file : Ada__text_io__file_type.file_type) (item : ref Standard__character.__split) (available : ref bool)  :unit
  requires { true }
  ensures { (Standard__character.dynamic_property Standard__character.first Standard__character.last !item) }
  writes {item, available }


end

(* Module for declaring a program function (and possibly an axiom) for "get_immediate__4" defined at a-textio.ads:231, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_immediate__4__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character

 val get_immediate__4 
   (item : ref Standard__character.__split) (available : ref bool)  :unit
  requires { true }
  ensures { (Standard__character.dynamic_property Standard__character.first Standard__character.last !item) }
  writes {item, available }


end

(* Module for declaring a program function (and possibly an axiom) for "get__3" defined at a-textio.ads:239, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get__3__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 val get__3 
   (file : Ada__text_io__file_type.file_type) (item : ref Standard__string.__split) (item__first : int) (item__last : int)  :unit
  requires { true }
  ensures { true }
  writes {item }


end

(* Module for declaring a program function (and possibly an axiom) for "get__4" defined at a-textio.ads:240, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get__4__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val get__4 
   (item : ref Standard__string.__split) (item__first : int) (item__last : int)  :unit
  requires { true }
  ensures { true }
  writes {item }


end

(* Module for declaring a program function (and possibly an axiom) for "put__3" defined at a-textio.ads:241, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put__3__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 val put__3 
   (file : Ada__text_io__file_type.file_type) (item : Standard__string.string)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "put__4" defined at a-textio.ads:242, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put__4__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val put__4 
   (item : Standard__string.string)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "get_line" defined at a-textio.ads:244, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_line__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__natural
 use        Ada__text_io__file_type

 val get_line 
   (file : Ada__text_io__file_type.file_type) (item : ref Standard__string.__split) (item__first : int) (item__last : int) (last : ref Standard__natural.__split)  :unit
  requires { true }
  ensures { (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last !last) }
  writes {item, last }


end

(* Module for declaring a program function (and possibly an axiom) for "get_line__2" defined at a-textio.ads:249, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_line__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__natural

 val get_line__2 
   (item : ref Standard__string.__split) (item__first : int) (item__last : int) (last : ref Standard__natural.__split)  :unit
  requires { true }
  ensures { (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last !last) }
  writes {item, last }


end

(* Module for declaring a program function (and possibly an axiom) for "get_line__3" defined at a-textio.ads:253, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_line__3__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive
 use        Ada__text_io__file_type
 use        Ada__text_io__get_line__3

 val get_line__3 
   (file : Ada__text_io__file_type.file_type)  :Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__text_io__get_line__3.get_line__3 file)) /\ (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first result) (Standard__string.last result)) ) }

 
 axiom get_line__3__post_axiom :
  (forall file  : Ada__text_io__file_type.file_type [(Ada__text_io__get_line__3.get_line__3 file)].
   ( true -> (let result = (Ada__text_io__get_line__3.get_line__3 file) in (
    (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first result) (Standard__string.last result))))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_line__4" defined at a-textio.ads:256, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_line__4__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive
 use        Ada__text_io__get_line__4

 val get_line__4 
   (__void_param : unit)  :Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__text_io__get_line__4.get_line__4 ())) /\ (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first result) (Standard__string.last result)) ) }

 
 axiom get_line__4__post_axiom :
  (forall __void_param  : unit [(Ada__text_io__get_line__4.get_line__4 __void_param)].
   ( true -> (let result = (Ada__text_io__get_line__4.get_line__4 __void_param) in (
    (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first result) (Standard__string.last result))))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "put_line" defined at a-textio.ads:259, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put_line__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 val put_line 
   (file : Ada__text_io__file_type.file_type) (item : Standard__string.string)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "put_line__2" defined at a-textio.ads:263, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put_line__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val put_line__2 
   (item : Standard__string.string)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "eof_char" defined at a-textio.ads:460, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__eof_char__axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Ada__text_io__eof_char

 val eof_char 
   (__void_param : unit)  :Standard__integer.__split
  requires { true }
  ensures { ( (result = (Ada__text_io__eof_char.eof_char ())) /\ (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last result) ) }

 
 axiom eof_char__post_axiom :
  (forall __void_param  : unit [(Ada__text_io__eof_char.eof_char __void_param)].
   ( true -> (let result = (Ada__text_io__eof_char.eof_char __void_param) in (
    (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "initialize_standard_files" defined at a-textio.ads:466, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__initialize_standard_files__axiom
 use import "_gnatprove_standard".Main

 val initialize_standard_files 
   (__void_param : unit)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "init_standard_input" defined at spark-text_io.ads:114, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__init_standard_input__axiom
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_input
 use        Spark__text_io__is_readable

 val init_standard_input 
   (__void_param : unit)  :unit
  requires { true }
  ensures { ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) }
  writes {Spark__text_io__standard_input.standard_input__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "init_standard_output" defined at spark-text_io.ads:121, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__init_standard_output__axiom
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_output
 use        Spark__text_io__is_writable

 val init_standard_output 
   (__void_param : unit)  :unit
  requires { true }
  ensures { ((Spark__text_io__is_writable.is_writable { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields }) = True) }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "init_standard_error" defined at spark-text_io.ads:128, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__init_standard_error__axiom
 use        Spark__text_io__standard_error
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_error
 use        Spark__text_io__is_writable

 val init_standard_error 
   (__void_param : unit)  :unit
  requires { true }
  ensures { ((Spark__text_io__is_writable.is_writable { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_error.standard_error__split_fields }) = True) }
  writes {Spark__text_io__standard_error.standard_error__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "status" defined at spark-text_io.ads:138, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__status__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__file_status
 use        Spark__text_io__status

 val status 
   (file : Spark__text_io__file_type.file_type)  :Spark__text_io__file_status.__split
  requires { true }
  ensures { ( (result = (Spark__text_io__status.status file)) /\ (Spark__text_io__file_status.dynamic_property Spark__text_io__file_status.first Spark__text_io__file_status.last result) ) }

 
 axiom status__post_axiom :
  (forall file  : Spark__text_io__file_type.file_type [(Spark__text_io__status.status file)].
   ( true -> (let result = (Spark__text_io__status.status file) in (
    (Spark__text_io__file_status.dynamic_property Spark__text_io__file_status.first Spark__text_io__file_status.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_standard_input" defined at spark-text_io.ads:144, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__is_standard_input__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_standard_input

 val is_standard_input 
   (file : Spark__text_io__file_type.file_type)  :bool
  requires { true }
  ensures { (result = (Spark__text_io__is_standard_input.is_standard_input file)) }


end

(* Module for declaring a program function (and possibly an axiom) for "is_standard_output" defined at spark-text_io.ads:148, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__is_standard_output__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_standard_output

 val is_standard_output 
   (file : Spark__text_io__file_type.file_type)  :bool
  requires { true }
  ensures { (result = (Spark__text_io__is_standard_output.is_standard_output file)) }


end

(* Module for declaring a program function (and possibly an axiom) for "is_standard_error" defined at spark-text_io.ads:152, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__is_standard_error__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_standard_error

 val is_standard_error 
   (file : Spark__text_io__file_type.file_type)  :bool
  requires { true }
  ensures { (result = (Spark__text_io__is_standard_error.is_standard_error file)) }


end

(* Module for declaring a program function (and possibly an axiom) for "is_open" defined at spark-text_io.ads:167, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__is_open__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_open

 val is_open 
   (file : Spark__text_io__file_type.file_type)  :bool
  requires { true }
  ensures { (result = (Spark__text_io__is_open.is_open file)) }


end

(* Module for declaring a program function (and possibly an axiom) for "mode__2" defined at spark-text_io.ads:171, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__mode__2__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__file_mode
 use        Spark__text_io__is_open
 use        Spark__text_io__mode__2

 val mode__2 
   (file : Spark__text_io__file_type.file_type)  :Spark__text_io__file_mode.__split
  requires { ((Spark__text_io__is_open.is_open file) = True) }
  ensures { ( (result = (Spark__text_io__mode__2.mode__2 file)) /\ (Spark__text_io__file_mode.dynamic_property Spark__text_io__file_mode.first Spark__text_io__file_mode.last result) ) }

 
 axiom mode__2__post_axiom :
  (forall file  : Spark__text_io__file_type.file_type [(Spark__text_io__mode__2.mode__2 file)].
   ( ((Spark__text_io__is_open.is_open file) = True) -> (let result = (Spark__text_io__mode__2.mode__2 file) in (
    (Spark__text_io__file_mode.dynamic_property Spark__text_io__file_mode.first Spark__text_io__file_mode.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "name" defined at spark-text_io.ads:178, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__name__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive
 use        Spark__text_io__file_type
 use        Spark__text_io__is_open
 use        Spark__text_io__name

 val name 
   (file : Spark__text_io__file_type.file_type)  :Standard__string.string
  requires { ((Spark__text_io__is_open.is_open file) = True) }
  ensures { ( (result = (Spark__text_io__name.name file)) /\ (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first result) (Standard__string.last result)) ) }

 
 axiom name__post_axiom :
  (forall file  : Spark__text_io__file_type.file_type [(Spark__text_io__name.name file)].
   ( ((Spark__text_io__is_open.is_open file) = True) -> (let result = (Spark__text_io__name.name file) in (
    (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first result) (Standard__string.last result))))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "form" defined at spark-text_io.ads:182, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__form__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive
 use        Spark__text_io__file_type
 use        Spark__text_io__is_open
 use        Spark__text_io__form

 val form 
   (file : Spark__text_io__file_type.file_type)  :Standard__string.string
  requires { ((Spark__text_io__is_open.is_open file) = True) }
  ensures { ( (result = (Spark__text_io__form.form file)) /\ (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first result) (Standard__string.last result)) ) }

 
 axiom form__post_axiom :
  (forall file  : Spark__text_io__file_type.file_type [(Spark__text_io__form.form file)].
   ( ((Spark__text_io__is_open.is_open file) = True) -> (let result = (Spark__text_io__form.form file) in (
    (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first result) (Standard__string.last result))))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "create__2" defined at spark-text_io.ads:201, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__create__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Spark__text_io__file_type
 use        Spark__text_io__is_open

 val create__2 
   (the_file__split_fields : ref Spark__text_io__file_type.__split_fields) (the_mode : int) (the_name : Standard__string.string) (the_form : Standard__string.string)  :unit
  requires { not ( ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !the_file__split_fields }) = True) ) }
  ensures { true }
  writes {the_file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "open__2" defined at spark-text_io.ads:222, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__open__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Spark__text_io__file_type
 use        Spark__text_io__is_open

 val open__2 
   (the_file__split_fields : ref Spark__text_io__file_type.__split_fields) (the_mode : int) (the_name : Standard__string.string) (the_form : Standard__string.string)  :unit
  requires { not ( ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !the_file__split_fields }) = True) ) }
  ensures { true }
  writes {the_file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "close" defined at spark-text_io.ads:241, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__close__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_standard_file
 use        Spark__text_io__is_open

 val close 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields)  :unit
  requires { ( ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ not ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) ) ) }
  ensures { true }
  writes {file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "delete" defined at spark-text_io.ads:248, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__delete__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_standard_file
 use        Spark__text_io__is_open

 val delete 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields)  :unit
  requires { ( ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ not ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) ) ) }
  ensures { true }
  writes {file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "reset__2" defined at spark-text_io.ads:255, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__reset__2__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_standard_file
 use        Spark__text_io__is_open

 val reset__2 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields) (the_mode : int)  :unit
  requires { ( ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ not ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) ) ) }
  ensures { true }
  writes {file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "reset__3" defined at spark-text_io.ads:267, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__reset__3__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_standard_file
 use        Spark__text_io__is_open

 val reset__3 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields)  :unit
  requires { ( ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ not ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) ) ) }
  ensures { ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) }
  writes {file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "flush" defined at spark-text_io.ads:288, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__flush__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_writable
 use        Spark__text_io__is_standard_file
 use        Spark__text_io__is_open

 val flush 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields)  :unit
  requires { ((Spark__text_io__is_writable.is_writable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) }
  ensures { ( ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) <-> ((old (Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) ) = True) ) ) }
  writes {file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "flush__2" defined at spark-text_io.ads:300, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__flush__2__axiom
 use        Spark__text_io__standard_output
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_output
 use        Spark__text_io__is_standard_output
 use        Spark__text_io__is_open

 val flush__2 
   (__void_param : unit)  :unit
  requires { true }
  ensures { ( ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields }) = True) /\ ((Spark__text_io__is_standard_output.is_standard_output { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields }) = True) ) }
  reads {Spark__text_io__standard_output.standard_output__split_fields }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "set_line_length__2" defined at spark-text_io.ads:317, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__set_line_length__2__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_writable

 val set_line_length__2 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields) (to__ : int)  :unit
  requires { ((Spark__text_io__is_writable.is_writable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) }
  ensures { true }
  writes {file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "set_line_length__3" defined at spark-text_io.ads:329, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__set_line_length__3__axiom
 use        Spark__text_io__standard_output
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__standard_output

 val set_line_length__3 
   (to__ : int)  :unit
  requires { true }
  ensures { true }
  reads {Spark__text_io__standard_output.standard_output__split_fields }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "set_page_length__2" defined at spark-text_io.ads:343, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__set_page_length__2__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_writable

 val set_page_length__2 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields) (to__ : int)  :unit
  requires { ((Spark__text_io__is_writable.is_writable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) }
  ensures { true }
  writes {file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "set_page_length__3" defined at spark-text_io.ads:354, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__set_page_length__3__axiom
 use        Spark__text_io__standard_output
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__standard_output

 val set_page_length__3 
   (to__ : int)  :unit
  requires { true }
  ensures { true }
  reads {Spark__text_io__standard_output.standard_output__split_fields }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "line_length__2" defined at spark-text_io.ads:366, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__line_length__2__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count
 use        Spark__text_io__is_writable
 use        Spark__text_io__line_length__2

 val line_length__2 
   (file : Spark__text_io__file_type.file_type)  :Spark__text_io__count.__split
  requires { ((Spark__text_io__is_writable.is_writable file) = True) }
  ensures { ( (result = (Spark__text_io__line_length__2.line_length__2 file)) /\ (Spark__text_io__count.dynamic_property Spark__text_io__count.first Spark__text_io__count.last result) ) }

 
 axiom line_length__2__post_axiom :
  (forall file  : Spark__text_io__file_type.file_type [(Spark__text_io__line_length__2.line_length__2 file)].
   ( ((Spark__text_io__is_writable.is_writable file) = True) -> (let result = (Spark__text_io__line_length__2.line_length__2 file) in (
    (Spark__text_io__count.dynamic_property Spark__text_io__count.first Spark__text_io__count.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "line_length__3" defined at spark-text_io.ads:370, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__line_length__3__axiom
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count
 use        Spark__text_io__standard_output
 use        Spark__text_io__line_length__3

 val line_length__3 
   (__void_param : unit)  :Spark__text_io__count.__split
  requires { true }
  ensures { ( (result = (Spark__text_io__line_length__3.line_length__3 { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields })) /\ (Spark__text_io__count.dynamic_property Spark__text_io__count.first Spark__text_io__count.last result) ) }

 
 axiom line_length__3__post_axiom :
  (forall spark__text_io__standard_output  : Spark__text_io__file_type.file_type [(Spark__text_io__line_length__3.line_length__3 spark__text_io__standard_output)].
   ( true -> (let result = (Spark__text_io__line_length__3.line_length__3 spark__text_io__standard_output) in (
    (Spark__text_io__count.dynamic_property Spark__text_io__count.first Spark__text_io__count.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "page_length__2" defined at spark-text_io.ads:373, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__page_length__2__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count
 use        Spark__text_io__is_writable
 use        Spark__text_io__page_length__2

 val page_length__2 
   (file : Spark__text_io__file_type.file_type)  :Spark__text_io__count.__split
  requires { ((Spark__text_io__is_writable.is_writable file) = True) }
  ensures { ( (result = (Spark__text_io__page_length__2.page_length__2 file)) /\ (Spark__text_io__count.dynamic_property Spark__text_io__count.first Spark__text_io__count.last result) ) }

 
 axiom page_length__2__post_axiom :
  (forall file  : Spark__text_io__file_type.file_type [(Spark__text_io__page_length__2.page_length__2 file)].
   ( ((Spark__text_io__is_writable.is_writable file) = True) -> (let result = (Spark__text_io__page_length__2.page_length__2 file) in (
    (Spark__text_io__count.dynamic_property Spark__text_io__count.first Spark__text_io__count.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "page_length__3" defined at spark-text_io.ads:377, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__page_length__3__axiom
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count
 use        Spark__text_io__standard_output
 use        Spark__text_io__page_length__3

 val page_length__3 
   (__void_param : unit)  :Spark__text_io__count.__split
  requires { true }
  ensures { ( (result = (Spark__text_io__page_length__3.page_length__3 { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields })) /\ (Spark__text_io__count.dynamic_property Spark__text_io__count.first Spark__text_io__count.last result) ) }

 
 axiom page_length__3__post_axiom :
  (forall spark__text_io__standard_output  : Spark__text_io__file_type.file_type [(Spark__text_io__page_length__3.page_length__3 spark__text_io__standard_output)].
   ( true -> (let result = (Spark__text_io__page_length__3.page_length__3 spark__text_io__standard_output) in (
    (Spark__text_io__count.dynamic_property Spark__text_io__count.first Spark__text_io__count.last result)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "new_line__2" defined at spark-text_io.ads:383, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__new_line__2__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_writable
 use        Spark__text_io__is_standard_file
 use        Spark__text_io__is_open

 val new_line__2 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields) (spacing : int)  :unit
  requires { ((Spark__text_io__is_writable.is_writable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) }
  ensures { ( ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) <-> ((old (Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) ) = True) ) ) }
  writes {file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "new_line__3" defined at spark-text_io.ads:395, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__new_line__3__axiom
 use        Spark__text_io__standard_output
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_output
 use        Spark__text_io__is_standard_output
 use        Spark__text_io__is_open

 val new_line__3 
   (spacing : int)  :unit
  requires { true }
  ensures { ( ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields }) = True) /\ ((Spark__text_io__is_standard_output.is_standard_output { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields }) = True) ) }
  reads {Spark__text_io__standard_output.standard_output__split_fields }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "end_of_file" defined at spark-text_io.ads:486, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__end_of_file__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_readable
 use        Spark__text_io__end_of_file

 val end_of_file 
   (file : Spark__text_io__file_type.file_type)  :bool
  requires { ((Spark__text_io__is_readable.is_readable file) = True) }
  ensures { (result = (Spark__text_io__end_of_file.end_of_file file)) }


end

(* Module for declaring a program function (and possibly an axiom) for "skip_line__2" defined at spark-text_io.ads:410, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__skip_line__2__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_readable
 use        Spark__text_io__is_standard_file
 use        Spark__text_io__end_of_file

 val skip_line__2 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields) (spacing : int)  :unit
  requires { ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ not ( ((Spark__text_io__end_of_file.end_of_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) ) ) }
  ensures { ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) <-> ((old (Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) ) = True) ) ) }
  writes {file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "skip_line__3" defined at spark-text_io.ads:420, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__skip_line__3__axiom
 use        Spark__text_io__standard_input
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_input
 use        Spark__text_io__is_readable
 use        Spark__text_io__is_standard_input

 val skip_line__3 
   (spacing : int)  :unit
  requires { ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) }
  ensures { ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) /\ ((Spark__text_io__is_standard_input.is_standard_input { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) ) }
  reads {Spark__text_io__standard_input.standard_input__split_fields }
  writes {Spark__text_io__standard_input.standard_input__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "end_of_line" defined at spark-text_io.ads:429, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__end_of_line__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_readable
 use        Spark__text_io__end_of_line

 val end_of_line 
   (file : Spark__text_io__file_type.file_type)  :bool
  requires { ((Spark__text_io__is_readable.is_readable file) = True) }
  ensures { (result = (Spark__text_io__end_of_line.end_of_line file)) }


end

(* Module for declaring a program function (and possibly an axiom) for "end_of_line__2" defined at spark-text_io.ads:433, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__end_of_line__2__axiom
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_input
 use        Spark__text_io__end_of_line__2

 val end_of_line__2 
   (__void_param : unit)  :bool
  requires { true }
  ensures { (result = (Spark__text_io__end_of_line__2.end_of_line__2 { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields })) }


end

(* Module for declaring a program function (and possibly an axiom) for "new_page" defined at spark-text_io.ads:437, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__new_page__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_writable
 use        Spark__text_io__is_standard_file
 use        Spark__text_io__is_open

 val new_page 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields)  :unit
  requires { ((Spark__text_io__is_writable.is_writable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) }
  ensures { ( ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) <-> ((old (Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) ) = True) ) ) }
  writes {file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "new_page__2" defined at spark-text_io.ads:448, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__new_page__2__axiom
 use        Spark__text_io__standard_output
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_output
 use        Spark__text_io__is_standard_output
 use        Spark__text_io__is_open

 val new_page__2 
   (__void_param : unit)  :unit
  requires { true }
  ensures { ( ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields }) = True) /\ ((Spark__text_io__is_standard_output.is_standard_output { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields }) = True) ) }
  reads {Spark__text_io__standard_output.standard_output__split_fields }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "skip_page" defined at spark-text_io.ads:462, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__skip_page__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_readable
 use        Spark__text_io__is_standard_file
 use        Spark__text_io__end_of_file

 val skip_page 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields)  :unit
  requires { ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ not ( ((Spark__text_io__end_of_file.end_of_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) ) ) }
  ensures { ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) <-> ((old (Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) ) = True) ) ) }
  writes {file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "skip_page__2" defined at spark-text_io.ads:470, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__skip_page__2__axiom
 use        Spark__text_io__standard_input
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_input
 use        Spark__text_io__is_readable
 use        Spark__text_io__is_standard_input

 val skip_page__2 
   (__void_param : unit)  :unit
  requires { ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) }
  ensures { ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) /\ ((Spark__text_io__is_standard_input.is_standard_input { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) ) }
  reads {Spark__text_io__standard_input.standard_input__split_fields }
  writes {Spark__text_io__standard_input.standard_input__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "end_of_page" defined at spark-text_io.ads:479, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__end_of_page__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_readable
 use        Spark__text_io__end_of_page

 val end_of_page 
   (file : Spark__text_io__file_type.file_type)  :bool
  requires { ((Spark__text_io__is_readable.is_readable file) = True) }
  ensures { (result = (Spark__text_io__end_of_page.end_of_page file)) }


end

(* Module for declaring a program function (and possibly an axiom) for "end_of_page__2" defined at spark-text_io.ads:483, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__end_of_page__2__axiom
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_input
 use        Spark__text_io__end_of_page__2

 val end_of_page__2 
   (__void_param : unit)  :bool
  requires { true }
  ensures { (result = (Spark__text_io__end_of_page__2.end_of_page__2 { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields })) }


end

(* Module for declaring a program function (and possibly an axiom) for "end_of_file__2" defined at spark-text_io.ads:490, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__end_of_file__2__axiom
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_input
 use        Spark__text_io__end_of_file
 use        Spark__text_io__end_of_file__2

 val end_of_file__2 
   (__void_param : unit)  :bool
  requires { true }
  ensures { ( (result = (Spark__text_io__end_of_file__2.end_of_file__2 { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields })) /\ ( (result = True) <-> ((Spark__text_io__end_of_file.end_of_file { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) ) ) }

 
 axiom end_of_file__2__post_axiom :
  (forall spark__text_io__standard_input  : Spark__text_io__file_type.file_type [(Spark__text_io__end_of_file__2.end_of_file__2 spark__text_io__standard_input)].
   ( true -> (let result = (Spark__text_io__end_of_file__2.end_of_file__2 spark__text_io__standard_input) in (
    ( (result = True) <-> ((Spark__text_io__end_of_file.end_of_file spark__text_io__standard_input) = True) )))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "set_col__2" defined at spark-text_io.ads:495, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__set_col__2__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type

 val set_col__2 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields) (to__ : int)  :unit
  requires { true }
  ensures { true }
  writes {file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "set_col__3" defined at spark-text_io.ads:511, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__set_col__3__axiom
 use        Spark__text_io__standard_output
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_output
 use        Spark__text_io__is_writable

 val set_col__3 
   (to__ : int)  :unit
  requires { ((Spark__text_io__is_writable.is_writable { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields }) = True) }
  ensures { true }
  reads {Spark__text_io__standard_output.standard_output__split_fields }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "set_line__2" defined at spark-text_io.ads:529, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__set_line__2__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_writable

 val set_line__2 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields) (to__ : int)  :unit
  requires { ((Spark__text_io__is_writable.is_writable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) }
  ensures { true }
  writes {file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "set_line__3" defined at spark-text_io.ads:545, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__set_line__3__axiom
 use        Spark__text_io__standard_output
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_output
 use        Spark__text_io__is_writable

 val set_line__3 
   (to__ : int)  :unit
  requires { ((Spark__text_io__is_writable.is_writable { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields }) = True) }
  ensures { true }
  reads {Spark__text_io__standard_output.standard_output__split_fields }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "col__3" defined at spark-text_io.ads:562, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__col__3__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count_result
 use        Spark__text_io__is_open
 use        Spark__text_io__col__3

 val col__3 
   (file : Spark__text_io__file_type.file_type)  :Spark__text_io__count_result.count_result
  requires { ((Spark__text_io__is_open.is_open file) = True) }
  ensures { (result = (Spark__text_io__col__3.col__3 file)) }


end

(* Module for declaring a program function (and possibly an axiom) for "col__4" defined at spark-text_io.ads:566, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__col__4__axiom
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count_result
 use        Spark__text_io__standard_output
 use        Spark__text_io__col__4

 val col__4 
   (__void_param : unit)  :Spark__text_io__count_result.count_result
  requires { true }
  ensures { (result = (Spark__text_io__col__4.col__4 { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields })) }


end

(* Module for declaring a program function (and possibly an axiom) for "line__3" defined at spark-text_io.ads:569, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__line__3__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count_result
 use        Spark__text_io__is_open
 use        Spark__text_io__line__3

 val line__3 
   (file : Spark__text_io__file_type.file_type)  :Spark__text_io__count_result.count_result
  requires { ((Spark__text_io__is_open.is_open file) = True) }
  ensures { (result = (Spark__text_io__line__3.line__3 file)) }


end

(* Module for declaring a program function (and possibly an axiom) for "line__4" defined at spark-text_io.ads:573, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__line__4__axiom
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count_result
 use        Spark__text_io__standard_output
 use        Spark__text_io__line__4

 val line__4 
   (__void_param : unit)  :Spark__text_io__count_result.count_result
  requires { true }
  ensures { (result = (Spark__text_io__line__4.line__4 { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields })) }


end

(* Module for declaring a program function (and possibly an axiom) for "page__3" defined at spark-text_io.ads:576, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__page__3__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count_result
 use        Spark__text_io__is_open
 use        Spark__text_io__page__3

 val page__3 
   (file : Spark__text_io__file_type.file_type)  :Spark__text_io__count_result.count_result
  requires { ((Spark__text_io__is_open.is_open file) = True) }
  ensures { (result = (Spark__text_io__page__3.page__3 file)) }


end

(* Module for declaring a program function (and possibly an axiom) for "page__4" defined at spark-text_io.ads:580, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__page__4__axiom
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__count_result
 use        Spark__text_io__standard_output
 use        Spark__text_io__page__4

 val page__4 
   (__void_param : unit)  :Spark__text_io__count_result.count_result
  requires { true }
  ensures { (result = (Spark__text_io__page__4.page__4 { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields })) }


end

(* Module for declaring a program function (and possibly an axiom) for "get" defined at spark-text_io.ads:586, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__get__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__character_result
 use        Spark__text_io__is_readable
 use        Spark__text_io__is_standard_file
 use        Spark__text_io__end_of_file

 val get 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields) (item__split_fields : ref Spark__text_io__character_result.__split_fields) (item__split_discrs : ref Spark__text_io__character_result.__split_discrs) (item__attr__constrained : bool)  :unit
  requires { ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ not ( ((Spark__text_io__end_of_file.end_of_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) ) ) }
  ensures { ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) <-> ((old (Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) ) = True) ) ) }
  writes {file__split_fields, item__split_fields, item__split_discrs }


end

(* Module for declaring a program function (and possibly an axiom) for "get__2" defined at spark-text_io.ads:595, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__get__2__axiom
 use        Spark__text_io__standard_input
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__character_result
 use        Spark__text_io__standard_input
 use        Spark__text_io__is_readable
 use        Spark__text_io__is_standard_input
 use        Spark__text_io__is_standard_file

 val get__2 
   (item__split_fields : ref Spark__text_io__character_result.__split_fields) (item__split_discrs : ref Spark__text_io__character_result.__split_discrs) (item__attr__constrained : bool)  :unit
  requires { true }
  ensures { ( ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) /\ ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) ) /\ ((Spark__text_io__is_standard_input.is_standard_input { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) ) }
  reads {Spark__text_io__standard_input.standard_input__split_fields }
  writes {Spark__text_io__standard_input.standard_input__split_fields, item__split_fields, item__split_discrs }


end

(* Module for declaring a program function (and possibly an axiom) for "put" defined at spark-text_io.ads:609, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__put__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__is_writable
 use        Spark__text_io__is_standard_file
 use        Spark__text_io__is_open

 val put 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields) (item : int)  :unit
  requires { ((Spark__text_io__is_writable.is_writable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) }
  ensures { ( ( ((Spark__text_io__is_writable.is_writable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) ) /\ ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) <-> ((old (Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) ) = True) ) ) }
  writes {file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "put__2" defined at spark-text_io.ads:622, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__put__2__axiom
 use        Spark__text_io__standard_output
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_output
 use        Spark__text_io__is_standard_output
 use        Spark__text_io__is_open

 val put__2 
   (item : int)  :unit
  requires { true }
  ensures { ( ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields }) = True) /\ ((Spark__text_io__is_standard_output.is_standard_output { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields }) = True) ) }
  reads {Spark__text_io__standard_output.standard_output__split_fields }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "look_ahead" defined at spark-text_io.ads:637, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__look_ahead__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__character_result
 use        Spark__text_io__is_readable
 use        Spark__text_io__is_standard_file

 val look_ahead 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields) (item__split_fields : ref Spark__text_io__character_result.__split_fields) (item__split_discrs : ref Spark__text_io__character_result.__split_discrs) (item__attr__constrained : bool) (end_of_line : ref bool)  :unit
  requires { ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) }
  ensures { ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) <-> ((old (Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) ) = True) ) ) }
  writes {file__split_fields, item__split_fields, item__split_discrs, end_of_line }


end

(* Module for declaring a program function (and possibly an axiom) for "look_ahead__2" defined at spark-text_io.ads:647, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__look_ahead__2__axiom
 use        Spark__text_io__standard_input
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__character_result
 use        Spark__text_io__standard_input
 use        Spark__text_io__is_readable
 use        Spark__text_io__is_standard_input

 val look_ahead__2 
   (item__split_fields : ref Spark__text_io__character_result.__split_fields) (item__split_discrs : ref Spark__text_io__character_result.__split_discrs) (item__attr__constrained : bool) (end_of_line : ref bool)  :unit
  requires { true }
  ensures { ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) /\ ((Spark__text_io__is_standard_input.is_standard_input { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) ) }
  reads {Spark__text_io__standard_input.standard_input__split_fields }
  writes {Spark__text_io__standard_input.standard_input__split_fields, item__split_fields, item__split_discrs, end_of_line }


end

(* Module for declaring a program function (and possibly an axiom) for "get_immediate" defined at spark-text_io.ads:655, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__get_immediate__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__character_result
 use        Spark__text_io__is_readable
 use        Spark__text_io__is_standard_file
 use        Spark__text_io__end_of_file

 val get_immediate 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields) (item__split_fields : ref Spark__text_io__character_result.__split_fields) (item__split_discrs : ref Spark__text_io__character_result.__split_discrs) (item__attr__constrained : bool)  :unit
  requires { ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ not ( ((Spark__text_io__end_of_file.end_of_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) ) ) }
  ensures { ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) <-> ((old (Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) ) = True) ) ) }
  writes {file__split_fields, item__split_fields, item__split_discrs }


end

(* Module for declaring a program function (and possibly an axiom) for "get_immediate__2" defined at spark-text_io.ads:664, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__get_immediate__2__axiom
 use        Spark__text_io__standard_input
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__character_result
 use        Spark__text_io__standard_input
 use        Spark__text_io__is_readable
 use        Spark__text_io__is_standard_input

 val get_immediate__2 
   (item__split_fields : ref Spark__text_io__character_result.__split_fields) (item__split_discrs : ref Spark__text_io__character_result.__split_discrs) (item__attr__constrained : bool)  :unit
  requires { ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) }
  ensures { ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) /\ ((Spark__text_io__is_standard_input.is_standard_input { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) ) }
  reads {Spark__text_io__standard_input.standard_input__split_fields }
  writes {Spark__text_io__standard_input.standard_input__split_fields, item__split_fields, item__split_discrs }


end

(* Module for declaring a program function (and possibly an axiom) for "get_immediate__3" defined at spark-text_io.ads:673, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__get_immediate__3__axiom
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__immediate_result
 use        Spark__text_io__is_readable
 use        Spark__text_io__is_standard_file

 val get_immediate__3 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields) (item__split_fields : ref Spark__text_io__immediate_result.__split_fields) (item__split_discrs : ref Spark__text_io__immediate_result.__split_discrs) (item__attr__constrained : bool) (available : ref bool)  :unit
  requires { ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) }
  ensures { ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) <-> ((old (Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) ) = True) ) ) }
  writes {file__split_fields, item__split_fields, item__split_discrs, available }


end

(* Module for declaring a program function (and possibly an axiom) for "get_immediate__4" defined at spark-text_io.ads:683, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__get_immediate__4__axiom
 use        Spark__text_io__standard_input
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Spark__text_io__file_type
 use        Spark__text_io__immediate_result
 use        Spark__text_io__standard_input
 use        Spark__text_io__is_readable
 use        Spark__text_io__is_standard_input

 val get_immediate__4 
   (item__split_fields : ref Spark__text_io__immediate_result.__split_fields) (item__split_discrs : ref Spark__text_io__immediate_result.__split_discrs) (item__attr__constrained : bool) (available : ref bool)  :unit
  requires { ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) }
  ensures { ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) /\ ((Spark__text_io__is_standard_input.is_standard_input { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) ) }
  reads {Spark__text_io__standard_input.standard_input__split_fields }
  writes {Spark__text_io__standard_input.standard_input__split_fields, item__split_fields, item__split_discrs, available }


end

(* Module for declaring a program function (and possibly an axiom) for "get__3" defined at spark-text_io.ads:696, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__get__3__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Spark__text_io__file_type
 use        Spark__text_io__is_readable
 use        Spark__text_io__is_standard_file

 val get__3 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields) (item : ref Standard__string.__split) (item__first : int) (item__last : int)  :unit
  requires { ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) }
  ensures { ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) <-> ((old (Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) ) = True) ) ) }
  writes {file__split_fields, item }


end

(* Module for declaring a program function (and possibly an axiom) for "get__4" defined at spark-text_io.ads:708, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__get__4__axiom
 use        Spark__text_io__standard_input
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_input
 use        Spark__text_io__is_readable
 use        Spark__text_io__is_standard_input

 val get__4 
   (item : ref Standard__string.__split) (item__first : int) (item__last : int)  :unit
  requires { true }
  ensures { ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) /\ ((Spark__text_io__is_standard_input.is_standard_input { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) ) }
  reads {Spark__text_io__standard_input.standard_input__split_fields }
  writes {Spark__text_io__standard_input.standard_input__split_fields, item }


end

(* Module for declaring a program function (and possibly an axiom) for "put__3" defined at spark-text_io.ads:719, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__put__3__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Spark__text_io__file_type
 use        Spark__text_io__is_writable
 use        Spark__text_io__is_standard_file
 use        Spark__text_io__is_open

 val put__3 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields) (item : Standard__string.string)  :unit
  requires { ((Spark__text_io__is_writable.is_writable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) }
  ensures { ( ( ((Spark__text_io__is_writable.is_writable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) ) /\ ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) <-> ((old (Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) ) = True) ) ) }
  writes {file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "put__4" defined at spark-text_io.ads:732, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__put__4__axiom
 use        Spark__text_io__standard_output
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_output
 use        Spark__text_io__is_standard_output
 use        Spark__text_io__is_open

 val put__4 
   (item : Standard__string.string)  :unit
  requires { true }
  ensures { ( ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields }) = True) /\ ((Spark__text_io__is_standard_output.is_standard_output { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields }) = True) ) }
  reads {Spark__text_io__standard_output.standard_output__split_fields }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "get_line" defined at spark-text_io.ads:751, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__get_line__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__natural
 use        Spark__text_io__file_type
 use        Spark__text_io__is_readable
 use        Spark__text_io__is_standard_file

 val get_line 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields) (item : ref Standard__string.__split) (item__first : int) (item__last : int) (last : ref Standard__natural.__split)  :unit
  requires { ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) }
  ensures { ( ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) <-> ((old (Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) ) = True) ) ) /\ (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last !last) ) }
  writes {file__split_fields, item, last }


end

(* Module for declaring a program function (and possibly an axiom) for "get_line__2" defined at spark-text_io.ads:767, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__get_line__2__axiom
 use        Spark__text_io__standard_input
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__natural
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_input
 use        Spark__text_io__is_readable
 use        Spark__text_io__is_standard_input

 val get_line__2 
   (item : ref Standard__string.__split) (item__first : int) (item__last : int) (last : ref Standard__natural.__split)  :unit
  requires { true }
  ensures { ( ( ((Spark__text_io__is_readable.is_readable { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) /\ ((Spark__text_io__is_standard_input.is_standard_input { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_input.standard_input__split_fields }) = True) ) /\ (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last !last) ) }
  reads {Spark__text_io__standard_input.standard_input__split_fields }
  writes {Spark__text_io__standard_input.standard_input__split_fields, item, last }


end

(* Module for declaring a program function (and possibly an axiom) for "put_line" defined at spark-text_io.ads:779, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__put_line__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Spark__text_io__file_type
 use        Spark__text_io__is_writable
 use        Spark__text_io__is_standard_file
 use        Spark__text_io__is_open

 val put_line 
   (file__split_fields : ref Spark__text_io__file_type.__split_fields) (item : Standard__string.string)  :unit
  requires { true }
  ensures { ( ( ((Spark__text_io__is_writable.is_writable { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) /\ ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) ) /\ ( ((Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) = True) <-> ((old (Spark__text_io__is_standard_file.is_standard_file { Spark__text_io__file_type.__split_fields = !file__split_fields }) ) = True) ) ) }
  writes {file__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "put_line__2" defined at spark-text_io.ads:793, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Spark__text_io__put_line__2__axiom
 use        Spark__text_io__standard_output
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Spark__text_io__file_type
 use        Spark__text_io__standard_output
 use        Spark__text_io__is_standard_output
 use        Spark__text_io__is_open

 val put_line__2 
   (item : Standard__string.string)  :unit
  requires { true }
  ensures { ( ((Spark__text_io__is_open.is_open { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields }) = True) /\ ((Spark__text_io__is_standard_output.is_standard_output { Spark__text_io__file_type.__split_fields = !Spark__text_io__standard_output.standard_output__split_fields }) = True) ) }
  reads {Spark__text_io__standard_output.standard_output__split_fields }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "as_init_standard_input" defined at as_io_wrapper.ads:26, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module As_io_wrapper__as_init_standard_input__axiom
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Spark__text_io__standard_input

 val as_init_standard_input 
   (__void_param : unit)  :unit
  requires { true }
  ensures { true }
  writes {Spark__text_io__standard_input.standard_input__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "as_init_standard_output" defined at as_io_wrapper.ads:33, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module As_io_wrapper__as_init_standard_output__axiom
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__standard_output

 val as_init_standard_output 
   (__void_param : unit)  :unit
  requires { true }
  ensures { true }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "as_put" defined at as_io_wrapper.ads:46, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module As_io_wrapper__as_put__axiom
 use        Spark__text_io__standard_output
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__standard_output

 val as_put 
   (item : int)  :unit
  requires { true }
  ensures { true }
  reads {Spark__text_io__standard_output.standard_output__split_fields }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "as_get" defined at as_io_wrapper.ads:54, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module As_io_wrapper__as_get__axiom
 use        Spark__text_io__standard_input
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Spark__text_io__standard_input

 val as_get 
   (item : ref Standard__string.__split) (item__first : int) (item__last : int)  :unit
  requires { true }
  ensures { true }
  reads {Spark__text_io__standard_input.standard_input__split_fields }
  writes {Spark__text_io__standard_input.standard_input__split_fields, item }


end

(* Module for declaring a program function (and possibly an axiom) for "as_put__2" defined at as_io_wrapper.ads:60, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module As_io_wrapper__as_put__2__axiom
 use        Spark__text_io__standard_output
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Spark__text_io__standard_output

 val as_put__2 
   (item : Standard__string.string)  :unit
  requires { true }
  ensures { true }
  reads {Spark__text_io__standard_output.standard_output__split_fields }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "as_get_line" defined at as_io_wrapper.ads:77, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module As_io_wrapper__as_get_line__axiom
 use        Spark__text_io__standard_input
 use        Spark__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__natural
 use        Spark__text_io__standard_input

 val as_get_line 
   (item : ref Standard__string.__split) (item__first : int) (item__last : int) (last : ref Standard__natural.__split)  :unit
  requires { true }
  ensures { (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last !last) }
  reads {Spark__text_io__standard_input.standard_input__split_fields }
  writes {Spark__text_io__standard_input.standard_input__split_fields, item, last }


end

(* Module for declaring a program function (and possibly an axiom) for "as_put_line" defined at as_io_wrapper.ads:84, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module As_io_wrapper__as_put_line__axiom
 use        Spark__text_io__standard_output
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Spark__text_io__standard_output

 val as_put_line 
   (item : Standard__string.string)  :unit
  requires { true }
  ensures { true }
  reads {Spark__text_io__standard_output.standard_output__split_fields }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "as_put_line__2" defined at as_io_wrapper.ads:89, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module As_io_wrapper__as_put_line__2__axiom
 use        Spark__text_io__standard_output
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__standard_output

 val as_put_line__2 
   (__void_param : unit)  :unit
  requires { true }
  ensures { true }
  reads {Spark__text_io__standard_output.standard_output__split_fields }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "as_get__2" defined at as_io_wrapper.ads:107, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module As_io_wrapper__as_get__2__axiom
 use        Spark__text_io__standard_input
 use        Spark__text_io__standard_output
 use        Spark__text_io__standard_input
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer
 use        Spark__text_io__standard_input
 use        Spark__text_io__standard_output

 val as_get__2 
   (item : ref Standard__integer.__split) (prompt_try_again_when_not_integer : Standard__string.string)  :unit
  requires { true }
  ensures { (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last !item) }
  reads {Spark__text_io__standard_input.standard_input__split_fields, Spark__text_io__standard_output.standard_output__split_fields }
  writes {Spark__text_io__standard_input.standard_input__split_fields, Spark__text_io__standard_output.standard_output__split_fields, item }


end

(* Module for declaring a program function (and possibly an axiom) for "as_put__3" defined at as_io_wrapper.ads:115, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module As_io_wrapper__as_put__3__axiom
 use        Spark__text_io__standard_output
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__standard_output

 val as_put__3 
   (item : int)  :unit
  requires { true }
  ensures { true }
  reads {Spark__text_io__standard_output.standard_output__split_fields }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "as_put_line__3" defined at as_io_wrapper.ads:120, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module As_io_wrapper__as_put_line__3__axiom
 use        Spark__text_io__standard_output
 use        Spark__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Spark__text_io__standard_output

 val as_put_line__3 
   (item : int)  :unit
  requires { true }
  ensures { true }
  reads {Spark__text_io__standard_output.standard_output__split_fields }
  writes {Spark__text_io__standard_output.standard_output__split_fields }


end

(* Module for declaring a program function (and possibly an axiom) for "get_int" defined at a-tiinau.ads:41, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__integer_aux__get_int__axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Ada__text_io__file_type

 val get_int 
   (file : Ada__text_io__file_type.file_type) (item : ref Standard__integer.__split) (width : int)  :unit
  requires { true }
  ensures { (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last !item) }
  writes {item }


end

(* Module for declaring a program function (and possibly an axiom) for "get_lli" defined at a-tiinau.ads:46, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__integer_aux__get_lli__axiom
 use import "_gnatprove_standard".Main
 use        Standard__long_long_integer
 use        Ada__text_io__file_type

 val get_lli 
   (file : Ada__text_io__file_type.file_type) (item : ref Standard__long_long_integer.__split) (width : int)  :unit
  requires { true }
  ensures { (Standard__long_long_integer.dynamic_property Standard__long_long_integer.first Standard__long_long_integer.last !item) }
  writes {item }


end

(* Module for declaring a program function (and possibly an axiom) for "put_int" defined at a-tiinau.ads:51, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__integer_aux__put_int__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val put_int 
   (file : Ada__text_io__file_type.file_type) (item : int) (width : int) (base : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "put_lli" defined at a-tiinau.ads:57, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__integer_aux__put_lli__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val put_lli 
   (file : Ada__text_io__file_type.file_type) (item : int) (width : int) (base : int)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "gets_int" defined at a-tiinau.ads:63, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__integer_aux__gets_int__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer
 use        Standard__positive

 val gets_int 
   (from : Standard__string.string) (item : ref Standard__integer.__split) (last : ref Standard__positive.__split)  :unit
  requires { true }
  ensures { ( (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last !item) /\ (Standard__positive.dynamic_property Standard__positive.first Standard__positive.last !last) ) }
  writes {item, last }


end

(* Module for declaring a program function (and possibly an axiom) for "gets_lli" defined at a-tiinau.ads:68, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__integer_aux__gets_lli__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__long_long_integer
 use        Standard__positive

 val gets_lli 
   (from : Standard__string.string) (item : ref Standard__long_long_integer.__split) (last : ref Standard__positive.__split)  :unit
  requires { true }
  ensures { ( (Standard__long_long_integer.dynamic_property Standard__long_long_integer.first Standard__long_long_integer.last !item) /\ (Standard__positive.dynamic_property Standard__positive.first Standard__positive.last !last) ) }
  writes {item, last }


end

(* Module for declaring a program function (and possibly an axiom) for "puts_int" defined at a-tiinau.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__integer_aux__puts_int__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val puts_int 
   (to__ : ref Standard__string.__split) (to____first : int) (to____last : int) (item : int) (base : int)  :unit
  requires { true }
  ensures { true }
  writes {to__ }


end

(* Module for declaring a program function (and possibly an axiom) for "puts_lli" defined at a-tiinau.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__integer_aux__puts_lli__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val puts_lli 
   (to__ : ref Standard__string.__split) (to____first : int) (to____last : int) (item : int) (base : int)  :unit
  requires { true }
  ensures { true }
  writes {to__ }


end

(* Module for checking contracts and absence of run-time errors in subprogram "as_init_standard_input" defined at as_io_wrapper.ads:26, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module As_io_wrapper__as_init_standard_input__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 let def "GP_Subp:as_io_wrapper.ads:26" "W:diverges:N" 
   (__void_param : unit) 
  requires { true }
  ensures { true }

   =
  ( () (* Assume dynamic property of params of the subprogram as_io_wrapper.ads:26 *)
  ;
  () (* Declarations introduced by the compiler at the beginning of the subprogram as_io_wrapper.ads:26 *)
  ;
  () (* Check for RTE in the Pre of the subprogram as_io_wrapper.ads:26 *)
  ;
  abstract ensures {true}(Main.___ignore(True)) end ;
  () (* Assume Pre of the subprogram as_io_wrapper.ads:26 *)
  ;
  assume { true } )
end

(* Module for checking contracts and absence of run-time errors in subprogram "as_init_standard_output" defined at as_io_wrapper.ads:33, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module As_io_wrapper__as_init_standard_output__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 let def "W:diverges:N" "GP_Subp:as_io_wrapper.ads:33" 
   (__void_param : unit) 
  requires { true }
  ensures { true }

   =
  ( () (* Assume dynamic property of params of the subprogram as_io_wrapper.ads:33 *)
  ;
  () (* Declarations introduced by the compiler at the beginning of the subprogram as_io_wrapper.ads:33 *)
  ;
  () (* Check for RTE in the Pre of the subprogram as_io_wrapper.ads:33 *)
  ;
  abstract ensures {true}(Main.___ignore(True)) end ;
  () (* Assume Pre of the subprogram as_io_wrapper.ads:33 *)
  ;
  assume { true } )
end

(* Module for checking contracts and absence of run-time errors in subprogram "as_put" defined at as_io_wrapper.ads:46, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module As_io_wrapper__as_put__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 let def "W:diverges:N" "GP_Subp:as_io_wrapper.ads:46" 
   (__void_param : unit) 
  requires { true }
  ensures { true }

   =
  ( () (* Assume dynamic property of params of the subprogram as_io_wrapper.ads:46 *)
  ;
  () (* Declarations introduced by the compiler at the beginning of the subprogram as_io_wrapper.ads:46 *)
  ;
  () (* Check for RTE in the Pre of the subprogram as_io_wrapper.ads:46 *)
  ;
  abstract ensures {true}(Main.___ignore(True)) end ;
  () (* Assume Pre of the subprogram as_io_wrapper.ads:46 *)
  ;
  assume { true } )
end

(* Module for checking contracts and absence of run-time errors in subprogram "as_get" defined at as_io_wrapper.ads:54, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module As_io_wrapper__as_get__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 let def "W:diverges:N" "GP_Subp:as_io_wrapper.ads:54" 
   (__void_param : unit) 
  requires { true }
  ensures { true }

   =
  ( () (* Assume dynamic property of params of the subprogram as_io_wrapper.ads:54 *)
  ;
  () (* Declarations introduced by the compiler at the beginning of the subprogram as_io_wrapper.ads:54 *)
  ;
  () (* Check for RTE in the Pre of the subprogram as_io_wrapper.ads:54 *)
  ;
  abstract ensures {true}(Main.___ignore(True)) end ;
  () (* Assume Pre of the subprogram as_io_wrapper.ads:54 *)
  ;
  assume { true } )
end

(* Module for checking contracts and absence of run-time errors in subprogram "as_put__2" defined at as_io_wrapper.ads:60, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module As_io_wrapper__as_put__2__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 let def "W:diverges:N" "GP_Subp:as_io_wrapper.ads:60" 
   (__void_param : unit) 
  requires { true }
  ensures { true }

   =
  ( () (* Assume dynamic property of params of the subprogram as_io_wrapper.ads:60 *)
  ;
  () (* Declarations introduced by the compiler at the beginning of the subprogram as_io_wrapper.ads:60 *)
  ;
  () (* Check for RTE in the Pre of the subprogram as_io_wrapper.ads:60 *)
  ;
  abstract ensures {true}(Main.___ignore(True)) end ;
  () (* Assume Pre of the subprogram as_io_wrapper.ads:60 *)
  ;
  assume { true } )
end

(* Module for checking contracts and absence of run-time errors in subprogram "as_get_line" defined at as_io_wrapper.ads:77, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module As_io_wrapper__as_get_line__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 let def "W:diverges:N" "GP_Subp:as_io_wrapper.ads:77" 
   (__void_param : unit) 
  requires { true }
  ensures { true }

   =
  ( () (* Assume dynamic property of params of the subprogram as_io_wrapper.ads:77 *)
  ;
  () (* Declarations introduced by the compiler at the beginning of the subprogram as_io_wrapper.ads:77 *)
  ;
  () (* Check for RTE in the Pre of the subprogram as_io_wrapper.ads:77 *)
  ;
  abstract ensures {true}(Main.___ignore(True)) end ;
  () (* Assume Pre of the subprogram as_io_wrapper.ads:77 *)
  ;
  assume { true } )
end

(* Module for checking contracts and absence of run-time errors in subprogram "as_put_line" defined at as_io_wrapper.ads:84, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module As_io_wrapper__as_put_line__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 let def "W:diverges:N" "GP_Subp:as_io_wrapper.ads:84" 
   (__void_param : unit) 
  requires { true }
  ensures { true }

   =
  ( () (* Assume dynamic property of params of the subprogram as_io_wrapper.ads:84 *)
  ;
  () (* Declarations introduced by the compiler at the beginning of the subprogram as_io_wrapper.ads:84 *)
  ;
  () (* Check for RTE in the Pre of the subprogram as_io_wrapper.ads:84 *)
  ;
  abstract ensures {true}(Main.___ignore(True)) end ;
  () (* Assume Pre of the subprogram as_io_wrapper.ads:84 *)
  ;
  assume { true } )
end

(* Module for checking contracts and absence of run-time errors in subprogram "as_put_line__2" defined at as_io_wrapper.ads:89, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module As_io_wrapper__as_put_line__2__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 let def "W:diverges:N" "GP_Subp:as_io_wrapper.ads:89" 
   (__void_param : unit) 
  requires { true }
  ensures { true }

   =
  ( () (* Assume dynamic property of params of the subprogram as_io_wrapper.ads:89 *)
  ;
  () (* Declarations introduced by the compiler at the beginning of the subprogram as_io_wrapper.ads:89 *)
  ;
  () (* Check for RTE in the Pre of the subprogram as_io_wrapper.ads:89 *)
  ;
  abstract ensures {true}(Main.___ignore(True)) end ;
  () (* Assume Pre of the subprogram as_io_wrapper.ads:89 *)
  ;
  assume { true } )
end

(* Module for checking contracts and absence of run-time errors in subprogram "as_get__2" defined at as_io_wrapper.ads:107, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module As_io_wrapper__as_get__2__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 let def "W:diverges:N" "GP_Subp:as_io_wrapper.ads:107" 
   (__void_param : unit) 
  requires { true }
  ensures { true }

   =
  ( () (* Assume dynamic property of params of the subprogram as_io_wrapper.ads:107 *)
  ;
  () (* Declarations introduced by the compiler at the beginning of the subprogram as_io_wrapper.ads:107 *)
  ;
  () (* Check for RTE in the Pre of the subprogram as_io_wrapper.ads:107 *)
  ;
  abstract ensures {true}(Main.___ignore(True)) end ;
  () (* Assume Pre of the subprogram as_io_wrapper.ads:107 *)
  ;
  assume { true } )
end

(* Module for checking contracts and absence of run-time errors in subprogram "as_put__3" defined at as_io_wrapper.ads:115, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module As_io_wrapper__as_put__3__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 let def "W:diverges:N" "GP_Subp:as_io_wrapper.ads:115" 
   (__void_param : unit) 
  requires { true }
  ensures { true }

   =
  ( () (* Assume dynamic property of params of the subprogram as_io_wrapper.ads:115 *)
  ;
  () (* Declarations introduced by the compiler at the beginning of the subprogram as_io_wrapper.ads:115 *)
  ;
  () (* Check for RTE in the Pre of the subprogram as_io_wrapper.ads:115 *)
  ;
  abstract ensures {true}(Main.___ignore(True)) end ;
  () (* Assume Pre of the subprogram as_io_wrapper.ads:115 *)
  ;
  assume { true } )
end

(* Module for checking contracts and absence of run-time errors in subprogram "as_put_line__3" defined at as_io_wrapper.ads:120, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module As_io_wrapper__as_put_line__3__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 let def "W:diverges:N" "GP_Subp:as_io_wrapper.ads:120" 
   (__void_param : unit) 
  requires { true }
  ensures { true }

   =
  ( () (* Assume dynamic property of params of the subprogram as_io_wrapper.ads:120 *)
  ;
  () (* Declarations introduced by the compiler at the beginning of the subprogram as_io_wrapper.ads:120 *)
  ;
  () (* Check for RTE in the Pre of the subprogram as_io_wrapper.ads:120 *)
  ;
  abstract ensures {true}(Main.___ignore(True)) end ;
  () (* Assume Pre of the subprogram as_io_wrapper.ads:120 *)
  ;
  assume { true } )
end
